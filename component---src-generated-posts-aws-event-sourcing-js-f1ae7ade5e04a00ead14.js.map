{"version":3,"sources":["webpack:///./src/content/posts/aws-event-sourcing.md","webpack:///./src/generated/posts/aws-event-sourcing.js","webpack:///./src/actb/seo.js","webpack:///./src/actb/logo.js","webpack:///./src/actb/footer.js","webpack:///./src/actb/navigation-bar.js","webpack:///./src/actb/layout/index.js","webpack:///./src/actb/code.js","webpack:///./src/actb/mdx.js","webpack:///./src/components/page-layout.js"],"names":["MDXContent","props","_this","_React$Component","call","this","layout","render","_this$props","components","objectWithoutPropertiesLoose_default","react_default","a","createElement","dist","name","parentName","image_event_sourcing_aws","idea","more","title","className","href","React","Component","SnippetsLayout","page_layout","aws_event_sourcing_MDXContent","__webpack_require__","d","__webpack_exports__","SEO","_ref","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","detailsQuery","data","split","map","v","trim","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","project","content","property","author","concat","join","_public_static_d_304502870_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","propTypes","PropTypes","string","array","oneOfType","arrayOf","isRequired","Logo","gatsby__WEBPACK_IMPORTED_MODULE_3__","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","logo","childImageSharp","style","float","_public_static_d_2369744027_json__WEBPACK_IMPORTED_MODULE_1__","Footer","ActFooter","social","copyright","icons","_ref2","link","icon","actb_link","key","to","icon_default","type","fontSize","marginLeft","color","textAlign","SiteFooter","gatsby_browser_entry","_ref3","_ref3$config","config","Object","assign","_2743462859","Header","NavigationBar","nav","menu_default","theme","mode","defaultSelectedKeys","filter","selected","text","lineHeight","i","slug","Item","SiteNavigationBar","_1250442554","Content","Sider","Panel","children","other","padding","PageLayout","_Object$assign","defaultLayoutOptions","footer","fullHeight","layoutStyle","height","pageClassName","layout_default","seo","SideMenuPanel","menu","background","minHeight","width","SyntaxHighlighter","registerLanguage","js","bash","markdown","yaml","defaults","code","length","light","language","MDX","actb_src_actb_layout__WEBPACK_IMPORTED_MODULE_2__","DefaultSiteLayout","pageContext","context","frontmatter","react__WEBPACK_IMPORTED_MODULE_3___default","paddingTop","actb_src_actb_mdx__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-generated-posts-aws-event-sourcing-js-f1ae7ade5e04a00ead14.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport { ImageEventSourcingAws, SideNote, Idea } from \"actl\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" components={components}>\n      <MDXTag name=\"p\" components={components}>{`Today bushiness environment is very dynamic. Quickly `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`shifting business requirements`}</MDXTag>{` call for `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`Agile`}</MDXTag>{` software development, modular architectures and flexibly to concentrate on the functionality of highest business priority. Growing demand for modularity popularized `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`microservices`}</MDXTag>{`, often implemented using `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`event sourcing`}</MDXTag>{` and `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`CQRS`}</MDXTag>{` patterns. Though special frameworks and tools like Apache Kafka could be helpful, essentially event sourcing is quite a simple concept and could be implemented just using, for example, AWS lambdas and DynamoDB. `}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The central idea of event sourcing is the notion of the `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`event log`}</MDXTag>{`, which records all what happened in the system, and thus represents the application state. The events log is the elementary, immutable, unique source of truth, from which current application state and convenient data views could be always unambiguously reconstructed. This makes application design more logical, and its constituent parts, communicating only through events, better decoupled.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Lets consider how such system may look like in practice. We may construe our application as a documents processor, where every document belongs to some `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`owner`}</MDXTag>{` - a microservice with `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`exclusive rights to modify`}</MDXTag>{` its documents according to some business logic. Each microservice receives commands from users and other microservices and, in response, when necessary, generates updates or \"events\", stored in immutable event logs.`}</MDXTag>\n      <ImageEventSourcingAws />\n      <Idea more=\"/snippets/serverless/dynamodb-streams-configuration/\" title=\"DynamoDB streams configuration\">\n        <MDXTag name=\"p\" components={components}>{`To configure DynamoDB stream add`}</MDXTag>\n        <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n            \"className\": \"language-yaml\"\n          }}>{`    StreamSpecification:\n        StreamViewType: NEW_IMAGE\n`}</MDXTag></MDXTag>\n        <MDXTag name=\"p\" components={components}>{`to table configuration`}</MDXTag>\n      </Idea>\n      <MDXTag name=\"p\" components={components}>{`The key part of the architecture is the event log - an `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`ordered`}</MDXTag>{` list of events processed by microservice. One way to achieve the `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`ordering`}</MDXTag>{` in `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`AWS`}</MDXTag>{` - is to use `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`DynamoDB streams`}</MDXTag>{`. For this we create a `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`commands table`}</MDXTag>{`, in which every part of the system may write commands (modification requests).`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript\"\n        }}>{`module.exports.addCommand = async event => {\n  const data = JSON.parse(event.body);\n  if (typeof data.type !== 'string') {\n    console.error('Validation Failed')\n    return {\n      statusCode: 400,\n      headers: { 'Content-Type': 'text/plain' },\n      body: 'Couldn\\'t add command.',\n    }\n  }\n\n  const params = {\n    TableName: process.env.COMMANDS_TABLE,\n    Key: {\n      microservice: data.type\n    },\n    UpdateExpression:\"set id = if_not_exists(id, :initial) + :inc, payload=:payload\",\n    ExpressionAttributeValues:{':inc': 1, ':initial' : 0, \":payload\": event.body}, \n    ReturnValues: \"NONE\"\n  }\n\n  // write the todo to the database\n  await dynamoDb.update(params).promise()\n\n  return {\n    statusCode: 200\n  }\n}\n`}</MDXTag></MDXTag>\n      <Idea more=\"/snippets/serverless/serverless-cli/\" title=\"Create new serverless project\">\n        <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n            \"className\": \"language-sh\"\n          }}>{`serverless create --template  aws-nodejs --path example\n`}</MDXTag></MDXTag>\n      </Idea>\n      <MDXTag name=\"p\" components={components}>{`We use `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://serverless.com\",\n          \"title\": \"serverless framework to build and deploy AWS applications\"\n        }}>{`serverless framework`}</MDXTag>{` to bundle our example AWS application. Writing updates to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`COMMANDS_TABLE`}</MDXTag>{`, we are able to produce a strictly ordered stream of commands. Leveraging AWS `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`update expressions`}</MDXTag>{` we get growing id number (`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`set id = if_not_exists(id, :initial) + :inc`}</MDXTag>{`). These updates later are processed by AWS lambda, subscribed to a DynamoDB stream:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript\"\n        }}>{`module.exports.example = async event => {\n  // process all commands  \n  for (const record of event.Records){\n    console.log(record.eventID)\n    console.log(record.eventName)\n    console.log('DynamoDB Record: %j', record.dynamodb)\n\n    const sequenceNumber = record.dynamodb[\"NewImage\"][\"id\"][\"N\"].padStart(10, \"0\")\n    const microservice = record.dynamodb[\"NewImage\"][\"microservice\"][\"S\"]\n    const payload = record.dynamodb[\"NewImage\"][\"payload\"][\"S\"]\n    const params = {\n      TableName: process.env.EVENTS_TABLE,\n      Item: {\n        microservice,\n        sequenceNumber,\n        payload\n      }\n    }\n    // some validation, business logic and event logging\n    await dynamoDb.put(params).promise()\n  }\n  return \\`Successfully processed \\${event.Records.length} records.\\`;\n}\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Microservice lambdas may do some command validation, data processing, execute some tasks, and update microservice state according to some business logic. And finally microservice should save `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`events`}</MDXTag>{` (unless command has been already executed) and, possibly, using DynamoDB transactions, state snapshot. As a result requests to other microservices could be generated. Microservice lambda also could be responsible to generate data views\n(e.g. DynamoDB tables) to efficiently satisfy user queries. To make system even more modular, `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`SNS`}</MDXTag>{` could be used to notify other subsystems/lambdas, devoted exclusively to data views generation.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`key`}</MDXTag>{` schema in the `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`commands table`}</MDXTag>{` governs the system concurrency/scalability. All commands saved with the same key go to the same microservice. In our example we partition commands on microservice name (determined by \"type\" request attribute), so multiple microservices may reuse the same commands table and may live the same stream lambda. This could be adequate for small enterprise applications, but for more complex systems we may wish to partition commands based on some user/group/organization id. To further decouple system components, we may use different command tables and/or `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`SNS`}</MDXTag>{` and `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`AWS Kinesis`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Using DynamoDB, we obtain ordered command stream, but by itself DynamoDB can't guarantee commands uniqueness (only once delivery). Thus, to assure idempontence, requests should contain some unique, growing id number, and microservice may wish to check/save the last user request ids. Along these lines, the typical request to our microservice may look like the following:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-sh\"\n        }}>{`curl -XPOST https://XXXXX.execute-api.us-east-1.amazonaws.com/dev/command -d '{\"type\":\"microserviceName\", \"command\":\"commandName\", \"id\":17, \"timestamp\":11178, \"user\":\"userId\"}'\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Event sourcing is an excellent paradigm when one strives to make modular, consistent, and error resilient system. That said, definitely not every application needs it. DynamoDB transactions and conditional updates provide powerful enough tools to handle simple concurrency/data dependencies. But in cases when one needs to handle complex transactional workflows, event sourcing is definitely the way to go. The complete source code of the example implementation of event sourcing using DynamoDB streams could be found on `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/act-labs/aws-event-sourcing-example\",\n          \"title\": \"AWS, simple event sourcing using DynamoDB streams\"\n        }}>{`Github`}</MDXTag>{`. `}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {\n  \"title\": \"Simple event sourcing for AWS lambdas\",\n  \"keywords\": \"AWS, Event Sourcing, DynamoDB, DynamoDB streams, lambdas, serverless\",\n  \"order\": 40\n};\n    ","import React from \"react\";\r\nimport ContentComponent from 'D:/projects/flash/packages/act-labs-blog/src/content/posts/aws-event-sourcing.md';\r\nimport OneColumnLayout from 'components/page-layout';\r\n\r\nexport default function SnippetsLayout(props) {\r\n    return <OneColumnLayout {...props}><ContentComponent {...props}/></OneColumnLayout>\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        if (typeof keywords == \"string\"){\r\n          keywords = keywords.split(\",\").map(v => v.trim());\r\n        }\r\n        description = description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.project}`}\r\n            meta={[\r\n              {\r\n                name: 'description',\r\n                content: description,\r\n              },\r\n              {\r\n                property: 'og:title',\r\n                content: title,\r\n              },\r\n              {\r\n                property: 'og:description',\r\n                content: description,\r\n              },\r\n              {\r\n                property: 'og:type',\r\n                content: 'website',\r\n              },\r\n              {\r\n                name: 'twitter:card',\r\n                content: 'summary',\r\n              },\r\n              {\r\n                name: 'twitter:creator',\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: 'twitter:title',\r\n                content: title,\r\n              },\r\n              {\r\n                name: 'twitter:description',\r\n                content: description,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords\r\n                  ? {\r\n                      name: 'keywords',\r\n                      content: keywords.join(', '),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: 'en',\r\n  meta: [],\r\n  keywords: null,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.arrayOf(PropTypes.string)\r\n  ]),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        project\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\n\r\n\r\nexport default function Logo(){\r\n        return (<StaticQuery\r\n            query={graphql`\r\n                query {\r\n                    logo: file(relativePath: { eq: \"logo.png\" }) {\r\n                    childImageSharp {\r\n                        fixed(height: 60) {\r\n                        ...GatsbyImageSharpFixed\r\n                        }\r\n                    }\r\n                    }\r\n                }\r\n            `}\r\n            render={data => <Img fixed={data.logo.childImageSharp.fixed} style={{float:\"left\"}}/>}\r\n        />)\r\n    }\r\n\r\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport {Link} from \"actb\";\r\nimport {\r\n    Layout, Icon\r\n  } from 'antd';\r\n  \r\n  const {\r\n    Footer\r\n  } = Layout;\r\n\r\n\r\nexport function ActFooter({social, copyright}){\r\n    const icons = social.map(({link, icon})=><Link key={icon} to={link}><Icon type={icon}  style={{ fontSize: '24px', marginLeft:10, color: 'rgba(0, 0, 0, 0.65)'}} /></Link>)\r\n    return (\r\n        <Footer style={{ textAlign: 'center' }}>\r\n            <div>{copyright}<div style={{float:\"right\"}}>{icons}</div></div>\r\n        </Footer>\r\n    )\r\n}\r\n\r\nexport default function SiteFooter(props){\r\n  if (props.social){\r\n      return <ActFooter {...props}/>\r\n  }\r\n  return <StaticQuery\r\n  query={graphql`\r\n    query {\r\n      config: configYaml(fields:{slug: {eq:\"/config/main/\"}}){\r\n          copyright\r\n          social {\r\n              icon\r\n              link\r\n          }        \r\n      }\r\n    }\r\n  `}\r\n  render={({config:{social, copyright}}) => <ActFooter social={social} copyright={copyright} {...props} />}\r\n/>\r\n}  ","import React from \"react\";\r\nimport {Logo, Link} from \"actb\"\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport {\r\n  Layout, Menu\r\n} from 'antd';\r\n  \r\nconst {\r\n  Header\r\n} = Layout;\r\n\r\n\r\nexport function NavigationBar({nav}){  \r\n    return (\r\n      <Header className=\"navigation-bar\">\r\n        <Link to=\"/\" ><Logo/></Link>\r\n        <Menu\r\n            theme=\"dark\"\r\n            mode=\"horizontal\"\r\n            defaultSelectedKeys={ nav.filter(v=>v.selected).map(v=>v.text) }\r\n            style={{ lineHeight: '64px' }}\r\n        >\r\n          {\r\n            nav.map(({slug, text}, i)=>\r\n              <Menu.Item key={i}>\r\n                <Link to={slug || \"/\"} >{text}</Link>\r\n              </Menu.Item>\r\n            )\r\n          }  \r\n        </Menu>\r\n      </Header>\r\n    )\r\n} \r\n\r\nexport default function SiteNavigationBar(props){\r\n    if (props.nav){\r\n        return <NavigationBar {...props}/>\r\n    }\r\n    return <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        config: configYaml(fields:{slug: {eq:\"/config/main/\"}}){\r\n            nav {\r\n                text\r\n                slug\r\n            }        \r\n        }\r\n      }\r\n    `}\r\n    render={({config:{nav}}) => <NavigationBar nav={nav} {...props} />}\r\n  />\r\n}  ","import React from \"react\"\r\n\r\nimport {Seo, Footer, NavigationBar} from \"actb\";\r\n\r\nimport {\r\n    Layout\r\n  } from 'antd';\r\n  \r\nimport \"./layout.less\"\r\n\r\nconst {\r\n  Content, Sider\r\n} = Layout;\r\n\r\n\r\nexport function Panel(props){\r\n  const {style, children, ...other} = props\r\n    return (\r\n        <Content style={Object.assign({ padding: '5px 24px' }, style)} {...other}>\r\n            {children}                     \r\n        </Content>\r\n    )\r\n}\r\n\r\nexport function SideMenuPanel({children, menu}){\r\n    return (\r\n      <Layout style={{ padding: '1em 0', background: '#fff', minHeight: 1000 }}>\r\n        <Sider width={200}>\r\n          {menu}\r\n        </Sider>\r\n        <Panel>{children}</Panel>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\nexport default function PageLayout(props){\r\n  const {children, className, \r\n    title, description, keywords, style, layout} = props\r\n  const {footer, fullHeight} = Object.assign({}, defaultLayoutOptions, layout)\r\n  const layoutStyle = Object.assign({}, fullHeight?{height:\"100%\"}:null, style)\r\n  const pageClassName = (className? className + \" \" : \"\") + \"page-layout\"\r\n  return (\r\n    <Layout className={pageClassName} style={layoutStyle}>\r\n      <Seo title={title} keywords={keywords} description={description} />\r\n      <NavigationBar/>\r\n        {children}\r\n      {footer? <Footer/>:null}\r\n    </Layout>\r\n  );  \r\n}\r\n\r\nconst defaultLayoutOptions = {\r\n  footer: true\r\n}\r\n\r\nPageLayout.Panel = Panel;\r\nPageLayout.SideMenuPanel = SideMenuPanel; \r\n","import React from \"react\";\r\nimport { Light as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport bash from 'react-syntax-highlighter/dist/esm/languages/hljs/bash';\r\nimport markdown from 'react-syntax-highlighter/dist/esm/languages/hljs/markdown';\r\nimport yaml from 'react-syntax-highlighter/dist/esm/languages/hljs/yaml';\r\n\r\nimport { github as style } from 'react-syntax-highlighter/dist/styles/hljs';\r\n\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\nSyntaxHighlighter.registerLanguage('sh', bash);\r\nSyntaxHighlighter.registerLanguage('markdown', markdown);\r\nSyntaxHighlighter.registerLanguage('yaml', yaml);\r\n\r\nexport {SyntaxHighlighter};\r\n\r\nexport default function Code(props) {\r\n    let lang = 'bash'\r\n    if (props.className){\r\n      const name = props.className.split(\"-\");\r\n      if (name.length > 1){\r\n        lang = name[1]\r\n      }\r\n    }\r\n  \r\n    return <SyntaxHighlighter language={lang} style={style}>{props.children}</SyntaxHighlighter>\r\n}","import React from \"react\";\r\nimport { MDXProvider } from '@mdx-js/tag';\r\n\r\nimport {Code, Link} from \"actb\";\r\n\r\nexport const components = {\r\n    code: Code,\r\n    a: Link\r\n  };\r\n  \r\nconst defaults = {components}; \r\n\r\nexport default function MDX(props){\r\n    const {components, children} = Object.assign({}, defaults, props);\r\n\r\n    return (\r\n    <MDXProvider components={components}>\r\n        {children}\r\n    </MDXProvider>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {Mdx, Layout} from \"actb\"\r\nimport '../actb/layout/simple.css'\r\n\r\nconst Panel = Layout.Panel\r\n\r\nexport default function DefaultSiteLayout({children, pageContext}){\r\n  const context = Object.assign({frontmatter:{}}, pageContext)\r\n  const props = Object.assign({}, {layout:context.layout}, context.frontmatter);\r\n  return (\r\n    <Layout {...props}>\r\n      <Panel style={{ paddingTop: \"1em\"}}>\r\n        {props.title? <h1>{props.title}</h1>:null}\r\n        <Mdx>{children}</Mdx>\r\n      </Panel>\r\n    </Layout>\r\n  )\r\n}\r\n\r\n\r\n"],"sourceRoot":""}