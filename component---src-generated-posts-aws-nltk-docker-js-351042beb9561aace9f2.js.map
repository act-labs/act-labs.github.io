{"version":3,"sources":["webpack:///./src/content/posts/aws-nltk-docker.md","webpack:///./src/generated/posts/aws-nltk-docker.js","webpack:///./src/actb/seo.js","webpack:///./src/actb/logo.js","webpack:///./src/actb/footer.js","webpack:///./src/actb/navigation-bar.js","webpack:///./src/actb/layout/index.js","webpack:///./src/actb/code.js","webpack:///./src/actb/mdx.js","webpack:///./src/components/page-layout.js"],"names":["MDXContent","props","_this","_React$Component","call","this","layout","render","_this$props","components","objectWithoutPropertiesLoose_default","react_default","a","createElement","dist","name","idea","more","title","parentName","className","href","React","Component","SnippetsLayout","page_layout","aws_nltk_docker_MDXContent","__webpack_require__","d","__webpack_exports__","SEO","_ref","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","detailsQuery","data","split","map","v","trim","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","project","content","property","author","concat","join","_public_static_d_304502870_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","propTypes","PropTypes","string","array","oneOfType","arrayOf","isRequired","Logo","gatsby__WEBPACK_IMPORTED_MODULE_3__","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","logo","childImageSharp","style","float","_public_static_d_2369744027_json__WEBPACK_IMPORTED_MODULE_1__","Footer","ActFooter","social","copyright","icons","_ref2","link","icon","actb_link","key","to","icon_default","type","fontSize","marginLeft","color","textAlign","SiteFooter","gatsby_browser_entry","_ref3","_ref3$config","config","Object","assign","_2743462859","Header","NavigationBar","nav","menu_default","theme","mode","defaultSelectedKeys","filter","selected","text","lineHeight","i","slug","Item","SiteNavigationBar","_1250442554","Content","Sider","Panel","children","other","padding","PageLayout","_Object$assign","defaultLayoutOptions","footer","fullHeight","layoutStyle","height","pageClassName","layout_default","seo","SideMenuPanel","menu","background","minHeight","width","SyntaxHighlighter","registerLanguage","js","bash","markdown","yaml","dockerfile","defaults","code","length","light","language","MDX","actb_src_actb_layout__WEBPACK_IMPORTED_MODULE_2__","DefaultSiteLayout","pageContext","context","frontmatter","react__WEBPACK_IMPORTED_MODULE_3___default","paddingTop","actb_src_actb_mdx__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-generated-posts-aws-nltk-docker-js-351042beb9561aace9f2.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport { Idea } from \"actl\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" components={components}>\n      <Idea more=\"/posts/aws-spacy-layer/\" title=\"Use public AWS layers\">\n        <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n            \"className\": \"language-yaml\"\n          }}>{`    layers:\n      - arn:aws:lambda:\\${self:provider.region}:113088814899:layer:Klayers-python37-spacy:1\n`}</MDXTag></MDXTag>\n      </Idea>\n      <MDXTag name=\"p\" components={components}>{`Though popular frameworks  are usually available as public AWS Lambda layers, the time will come when you may wish to build your own layer instead. There could be many reasons for this, for example, you may need some less popular library, or you may wish to optimise the existing one, or you may just need to ship some custom static data.  Building AWS layers requires some skills, expect to jump through a few hoops in a process, but nowadays the procedure is not that difficult as one might expect. Let's consider, for example, how to build and deploy `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`NLTK`}</MDXTag>{` library with WordNet dictionary dataset.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Basically, to create AWS layers you need to zip your files in appropriate directory (it could be nodejs, or python, or arbitrary subdirectory for data). As serverless framework comes with the ability to build custom layers, this step could be automated. And the only remaining problem of packaging correct binaries under different OS could be easily solved using docker. In this post I use `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://hub.docker.com/r/lambci/lambda\",\n          \"title\": \"A sandboxed local environment that replicates the live AWS Lambda environment almost identically\"\n        }}>{`lambci/lambda`}</MDXTag>{` docker images to both build and test an NLTK layer. `}</MDXTag>\n      <Idea more=\"/snippets/serverless/docker/\" title=\"During development, run interactive bash session\">\n        <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n            \"className\": \"language-sh\"\n          }}>{`    docker run -it lambci/lambda:build-python3.7 bash\n`}</MDXTag></MDXTag>\n      </Idea>\n      <MDXTag name=\"p\" components={components}>{`So the first step is to build layer in the docker container. For this, one may wish to install NLTK package in a separate Python virtual environment to use it later for data  download and to generate requirements.txt file with correct package dependencies. Dumping `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`requirements.txt`}</MDXTag>{` file requires  `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`pip freeze  > requirements.txt`}</MDXTag>{` command. Using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`pip install -r requirements.txt -t /opt/python`}</MDXTag>{` command (where option -t stands for target), all the required packages could be installed to a `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`/opt/python`}</MDXTag>{` directory (where they reside in AWS lambda function environment). `}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`WordNet dataset could be downloaded using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`nltk.downloader -d /opt/nltk_data wordnet`}</MDXTag>{` command (to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/opt/nltk_data`}</MDXTag>{` subdirectory). The whole procedure is quite straightforward and could be tested in interactive bash session in docker, where commands could be entered manually. The only caveat is that in Dockerfile, when  working  with virtual environments, we cannot use standard `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`activate`}</MDXTag>{` command which is usually used on command prompt to adjust the `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`PATH`}</MDXTag>{` variable. In docker, on the other hand, commands are executed one by one, outside any bash sessions, so environment should be adjusted explicitly (using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ENV PATH /opt/env/bin:/var/task/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin`}</MDXTag>{`). Our dockerfile finally will look like this:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-dockerfile\"\n        }}>{`# Dockerfile to create nltk layer with wordnet dataset\nFROM lambci/lambda:build-python3.7\n\nRUN rm -rf /opt/* && mkdir -p /opt/nltk_data\nRUN python3 -m venv /opt/env\n\nENV PATH /opt/env/bin:/var/task/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nRUN python3 -m pip install --upgrade pip && python3 -m pip install nltk\n\nRUN python3 -m nltk.downloader -d /opt/nltk_data wordnet\n\nRUN pip freeze > requirements.txt\n\nRUN pip install -r requirements.txt -t /opt/python\n\nRUN rm -rf /opt/env\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`After an image is created, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker cp`}</MDXTag>{` command can be used to copy layer to working directory. The whole process could be automated using `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`build.sh`}</MDXTag>{` file:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-sh\"\n        }}>{`docker build -t nltk-lambda-layer -f Dockerfile .\ndocker run -d --name nltk-layer nltk-lambda-layer false\ndocker cp nltk-layer:/opt ./layer\ndocker cp nltk-layer:/var/task/requirements.txt .\ndocker rm nltk-layer\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Finally, create a simple `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`serverless.yml`}</MDXTag>{` configuration file, in which location of the layer should be specified:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-yaml\"\n        }}>{`# serverless.yaml\nservice: python-nltk-layer\n\nprovider:\n  name: aws\n\nlayers:\n  nltk:\n    path: layer\n`}</MDXTag></MDXTag>\n      <Idea more=\"/snippets/serverless/request-parameters/\" title=\"Path variables could be excesses trough pathParameters key\">\n        <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n            \"className\": \"language-javascript\"\n          }}>{`    word = event[\"pathParameters\"][\"word\"]\n`}</MDXTag></MDXTag>\n      </Idea>\n      <MDXTag name=\"p\" components={components}>{`After deploying layer to AWS, we may start using it immediately. To test that it is working, lets create a simple HTTP AWS endpoint that will return word synonyms. To make WordNet dataset available, its location (/opt/nltk_data) should be specified in NLTK_DATA environment variable. Example code could be deployed to AWS and tested using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`curl`}</MDXTag>{`. Alternatively, the handler could be invoked locally in docker:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-sh\"\n        }}>{`# to test deployed AWS endpoint\ncurl https://XXXXX.execute-api.us-east-1.amazonaws.com/dev/synonyms/active\n[\"participating\", \"active_voice\", \"alive\", \"active_agent\", \"combat-ready\", \"fighting\", \"active\", \"dynamic\"]\n# alternatively, invoke it locally\ndocker run --rm -e NLTK_DATA=/opt/nltk_data -v \"\\$PWD\":/var/task -v \"\\$PWD\"/../layer:/opt lambci/lambda:python3.7 handler.synonyms '{\"pathParameters\":{\"word\":\"active\"}}'\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`See source code on `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/act-labs/aws-nltk-layer\",\n          \"title\": \"Build custom NLTK/WordNet AWS lambda function layer using docker and serverless framework\"\n        }}>{`Github`}</MDXTag>{` for details.`}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {\n  \"title\": \"Build and deploy custom AWS layer using Docker and Serverless Framework\",\n  \"keywords\": \"Python, Docker, NLTK, WordNet, AWS layer, lambdas, serverless framework\",\n  \"order\": 60\n};\n    ","import React from \"react\";\r\nimport ContentComponent from 'D:/projects/flash/packages/act-labs-blog/src/content/posts/aws-nltk-docker.md';\r\nimport OneColumnLayout from 'components/page-layout';\r\n\r\nexport default function SnippetsLayout(props) {\r\n    return <OneColumnLayout {...props}><ContentComponent {...props}/></OneColumnLayout>\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        if (typeof keywords == \"string\"){\r\n          keywords = keywords.split(\",\").map(v => v.trim());\r\n        }\r\n        description = description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.project}`}\r\n            meta={[\r\n              {\r\n                name: 'description',\r\n                content: description,\r\n              },\r\n              {\r\n                property: 'og:title',\r\n                content: title,\r\n              },\r\n              {\r\n                property: 'og:description',\r\n                content: description,\r\n              },\r\n              {\r\n                property: 'og:type',\r\n                content: 'website',\r\n              },\r\n              {\r\n                name: 'twitter:card',\r\n                content: 'summary',\r\n              },\r\n              {\r\n                name: 'twitter:creator',\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: 'twitter:title',\r\n                content: title,\r\n              },\r\n              {\r\n                name: 'twitter:description',\r\n                content: description,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords\r\n                  ? {\r\n                      name: 'keywords',\r\n                      content: keywords.join(', '),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: 'en',\r\n  meta: [],\r\n  keywords: null,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.arrayOf(PropTypes.string)\r\n  ]),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        project\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\n\r\n\r\nexport default function Logo(){\r\n        return (<StaticQuery\r\n            query={graphql`\r\n                query {\r\n                    logo: file(relativePath: { eq: \"logo.png\" }) {\r\n                    childImageSharp {\r\n                        fixed(height: 60) {\r\n                        ...GatsbyImageSharpFixed\r\n                        }\r\n                    }\r\n                    }\r\n                }\r\n            `}\r\n            render={data => <Img fixed={data.logo.childImageSharp.fixed} style={{float:\"left\"}}/>}\r\n        />)\r\n    }\r\n\r\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport {Link} from \"actb\";\r\nimport {\r\n    Layout, Icon\r\n  } from 'antd';\r\n  \r\n  const {\r\n    Footer\r\n  } = Layout;\r\n\r\n\r\nexport function ActFooter({social, copyright}){\r\n    const icons = social.map(({link, icon})=><Link key={icon} to={link}><Icon type={icon}  style={{ fontSize: '24px', marginLeft:10, color: 'rgba(0, 0, 0, 0.65)'}} /></Link>)\r\n    return (\r\n        <Footer style={{ textAlign: 'center' }}>\r\n            <div>{copyright}<div style={{float:\"right\"}}>{icons}</div></div>\r\n        </Footer>\r\n    )\r\n}\r\n\r\nexport default function SiteFooter(props){\r\n  if (props.social){\r\n      return <ActFooter {...props}/>\r\n  }\r\n  return <StaticQuery\r\n  query={graphql`\r\n    query {\r\n      config: configYaml(fields:{slug: {eq:\"/config/main/\"}}){\r\n          copyright\r\n          social {\r\n              icon\r\n              link\r\n          }        \r\n      }\r\n    }\r\n  `}\r\n  render={({config:{social, copyright}}) => <ActFooter social={social} copyright={copyright} {...props} />}\r\n/>\r\n}  ","import React from \"react\";\r\nimport {Logo, Link} from \"actb\"\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport {\r\n  Layout, Menu\r\n} from 'antd';\r\n  \r\nconst {\r\n  Header\r\n} = Layout;\r\n\r\n\r\nexport function NavigationBar({nav}){  \r\n    return (\r\n      <Header className=\"navigation-bar\">\r\n        <Link to=\"/\" ><Logo/></Link>\r\n        <Menu\r\n            theme=\"dark\"\r\n            mode=\"horizontal\"\r\n            defaultSelectedKeys={ nav.filter(v=>v.selected).map(v=>v.text) }\r\n            style={{ lineHeight: '64px' }}\r\n        >\r\n          {\r\n            nav.map(({slug, text}, i)=>\r\n              <Menu.Item key={i}>\r\n                <Link to={slug || \"/\"} >{text}</Link>\r\n              </Menu.Item>\r\n            )\r\n          }  \r\n        </Menu>\r\n      </Header>\r\n    )\r\n} \r\n\r\nexport default function SiteNavigationBar(props){\r\n    if (props.nav){\r\n        return <NavigationBar {...props}/>\r\n    }\r\n    return <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        config: configYaml(fields:{slug: {eq:\"/config/main/\"}}){\r\n            nav {\r\n                text\r\n                slug\r\n            }        \r\n        }\r\n      }\r\n    `}\r\n    render={({config:{nav}}) => <NavigationBar nav={nav} {...props} />}\r\n  />\r\n}  ","import React from \"react\"\r\n\r\nimport {Seo, Footer, NavigationBar} from \"actb\";\r\n\r\nimport {\r\n    Layout\r\n  } from 'antd';\r\n  \r\nimport \"./layout.less\"\r\n\r\nconst {\r\n  Content, Sider\r\n} = Layout;\r\n\r\n\r\nexport function Panel(props){\r\n  const {style, children, ...other} = props\r\n    return (\r\n        <Content style={Object.assign({ padding: '5px 24px' }, style)} {...other}>\r\n            {children}                     \r\n        </Content>\r\n    )\r\n}\r\n\r\nexport function SideMenuPanel({children, menu}){\r\n    return (\r\n      <Layout style={{ padding: '1em 0', background: '#fff', minHeight: 1000 }}>\r\n        <Sider width={200}>\r\n          {menu}\r\n        </Sider>\r\n        <Panel>{children}</Panel>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\nexport default function PageLayout(props){\r\n  const {children, className, \r\n    title, description, keywords, style, layout} = props\r\n  const {footer, fullHeight} = Object.assign({}, defaultLayoutOptions, layout)\r\n  const layoutStyle = Object.assign({}, fullHeight?{height:\"100%\"}:null, style)\r\n  const pageClassName = (className? className + \" \" : \"\") + \"page-layout\"\r\n  return (\r\n    <Layout className={pageClassName} style={layoutStyle}>\r\n      <Seo title={title} keywords={keywords} description={description} />\r\n      <NavigationBar/>\r\n        {children}\r\n      {footer? <Footer/>:null}\r\n    </Layout>\r\n  );  \r\n}\r\n\r\nconst defaultLayoutOptions = {\r\n  footer: true\r\n}\r\n\r\nPageLayout.Panel = Panel;\r\nPageLayout.SideMenuPanel = SideMenuPanel; \r\n","import React from \"react\";\r\nimport { Light as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport bash from 'react-syntax-highlighter/dist/esm/languages/hljs/bash';\r\nimport markdown from 'react-syntax-highlighter/dist/esm/languages/hljs/markdown';\r\nimport yaml from 'react-syntax-highlighter/dist/esm/languages/hljs/yaml';\r\nimport dockerfile from 'react-syntax-highlighter/dist/esm/languages/hljs/dockerfile';\r\n\r\nimport { github as style } from 'react-syntax-highlighter/dist/styles/hljs';\r\n\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\nSyntaxHighlighter.registerLanguage('sh', bash);\r\nSyntaxHighlighter.registerLanguage('markdown', markdown);\r\nSyntaxHighlighter.registerLanguage('yaml', yaml);\r\nSyntaxHighlighter.registerLanguage('dockerfile', dockerfile);\r\n\r\nexport {SyntaxHighlighter};\r\n\r\nexport default function Code(props) {\r\n    let lang = 'bash'\r\n    if (props.className){\r\n      const name = props.className.split(\"-\");\r\n      if (name.length > 1){\r\n        lang = name[1]\r\n      }\r\n    }\r\n  \r\n    return <SyntaxHighlighter language={lang} style={style}>{props.children}</SyntaxHighlighter>\r\n}","import React from \"react\";\r\nimport { MDXProvider } from '@mdx-js/tag';\r\n\r\nimport {Code, Link} from \"actb\";\r\n\r\nexport const components = {\r\n    code: Code,\r\n    a: Link\r\n  };\r\n  \r\nconst defaults = {components}; \r\n\r\nexport default function MDX(props){\r\n    const {components, children} = Object.assign({}, defaults, props);\r\n\r\n    return (\r\n    <MDXProvider components={components}>\r\n        {children}\r\n    </MDXProvider>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {Mdx, Layout} from \"actb\"\r\nimport '../actb/layout/simple.css'\r\n\r\nconst Panel = Layout.Panel\r\n\r\nexport default function DefaultSiteLayout({children, pageContext}){\r\n  const context = Object.assign({frontmatter:{}}, pageContext)\r\n  const props = Object.assign({}, {layout:context.layout}, context.frontmatter);\r\n  return (\r\n    <Layout {...props}>\r\n      <Panel style={{ paddingTop: \"1em\"}}>\r\n        {props.title? <h1>{props.title}</h1>:null}\r\n        <Mdx>{children}</Mdx>\r\n      </Panel>\r\n    </Layout>\r\n  )\r\n}\r\n\r\n\r\n"],"sourceRoot":""}