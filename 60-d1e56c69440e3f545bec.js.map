{"version":3,"sources":["webpack:///D:/projects/flash/node_modules/core-js/modules/es6.string.link.js","webpack:///D:/projects/flash/node_modules/distinct-colors/dist/distinct-colors.js","webpack:///D:/projects/flash/node_modules/core-js/modules/es6.math.cbrt.js","webpack:///D:/projects/flash/node_modules/core-js/modules/_math-sign.js"],"names":["__webpack_require__","createHTML","url","this","factory","modules","installedModules","moduleId","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_utils2","_moutLangDeepClone2","_moutLangDeepEquals2","_moutArrayUnique2","_chromaJs2","defaults","count","hueMin","hueMax","chromaMin","chromaMax","lightMin","lightMax","quality","samples","checkColor","lab","options","color","hcl","rgb","compLab","opts","arguments","length","undefined","mergeObj","colors","zonesProto","rangeDivider","Math","cbrt","hStep","cStep","lStep","h","l","push","a","b","toString","Error","sliceSize","floor","i","step","zones","minDist","Number","MAX_SAFE_INTEGER","nearest","j","dist","sqrt","pow","abs","lastColors","zone","size","Ls","As","Bs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","sample","err","lAvg","sum","aAvg","bAvg","colorList","unsortedColors","slice","sortedColors","shift","lastColor","maxDist","MIN_SAFE_INTEGER","splice","sortByContrast","map","o1","o2","key","hasOwnProperty","array","reduce","clone","forOwn","kindOf","isPlainObject","deepClone","val","instanceClone","source","out","cloneObject","arr","n","cloneArray","mixIn","flags","r","multiline","global","ignoreCase","RegExp","Date","UNDEF","_rKind","_toString","prototype","exec","constructor","copyProp","target","objects","hasOwn","forIn","fn","thisObj","prop","_hasDontEnumBug","_dontEnums","checkDontEnum","ctor","isProto","is","isObject","isArray","objEquals","arrEquals","deepEquals","callback","bothObjects","bothArrays","x","y","isKind","kind","Array","every","checkProperties","makeCompare","makeIterator","result","identity","deepMatches","src","name","containsMatch","pattern","patternLength","matchArray","matchObject","len","filter","isEqual","compare","item","results","__WEBPACK_AMD_DEFINE_RESULT__","Color","DEG2RAD","LAB_CONSTANTS","PI","PITHIRD","RAD2DEG","TWOPI","_guess_formats","_guess_formats_sorted","_input","_interpolators","atan2","_bezier","_blend","blend_f","burn","chroma","clip_rgb","cmyk2rgb","cos","css2rgb","darken","dodge","each","hex2rgb","hsi2rgb","hsl2css","hsl2rgb","hsv2rgb","interpolate","interpolate_hsx","interpolate_lab","interpolate_num","interpolate_rgb","lab2lch","lab2rgb","lab_xyz","lch2lab","lch2rgb","lighten","limit","log","luminance_x","max","multiply","num2rgb","overlay","rgb2cmyk","rgb2css","rgb2hex","rgb2hsi","rgb2hsl","rgb2hsv","rgb2lab","rgb2lch","rgb2luminance","rgb2num","rgb2temperature","rgb2xyz","rgb_xyz","rnd","round","screen","sin","temperature2rgb","type","unpack","w3cx11","xyz_lab","xyz_rgb","classToType","o","ref","split","toLowerCase","strType","min","args","func","child","apply","version","arg","chk","len1","me","mode","w","_rgb","sort","test","console","warn","alpha","brewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","indigo","gold","hotpink","firebrick","indianred","yellow","mistyrose","darkolivegreen","olive","darkseagreen","pink","tomato","lightcoral","orangered","navajowhite","lime","palegreen","darkslategrey","greenyellow","burlywood","seashell","mediumspringgreen","fuchsia","papayawhip","blanchedalmond","chartreuse","dimgray","black","peachpuff","springgreen","aquamarine","white","orange","lightsalmon","darkslategray","brown","ivory","dodgerblue","peru","lawngreen","chocolate","crimson","forestgreen","darkgrey","lightseagreen","cyan","mintcream","silver","antiquewhite","mediumorchid","skyblue","gray","darkturquoise","goldenrod","darkgreen","floralwhite","darkviolet","darkgray","moccasin","saddlebrown","grey","darkslateblue","lightskyblue","lightpink","mediumvioletred","slategrey","red","deeppink","limegreen","darkmagenta","palegoldenrod","plum","turquoise","lightgrey","lightgoldenrodyellow","darkgoldenrod","lavender","maroon","yellowgreen","sandybrown","thistle","violet","navy","magenta","dimgrey","tan","rosybrown","olivedrab","blue","lightblue","ghostwhite","honeydew","cornflowerblue","slateblue","linen","darkblue","powderblue","seagreen","darkkhaki","snow","sienna","mediumblue","royalblue","lightcyan","green","mediumpurple","midnightblue","cornsilk","paleturquoise","bisque","slategray","darkcyan","khaki","wheat","teal","darkorchid","deepskyblue","salmon","darkred","steelblue","palevioletred","lightslategray","aliceblue","lightslategrey","lightgreen","orchid","gainsboro","mediumseagreen","lightgray","mediumturquoise","lemonchiffon","cadetblue","lightyellow","lavenderblush","coral","purple","aqua","whitesmoke","mediumslateblue","darkorange","mediumaquamarine","darksalmon","beige","blueviolet","azure","lightsteelblue","oldlace","rebeccapurple","g","z","isNaN","Yn","Xn","Zn","t","t1","t2","t0","Kn","t3","ref1","concat","I","I0","I1","lab0","lab1","lab2","lab3","ref2","bezier","f","scale","cubehelix","start","rotations","hue","gamma","lightness","dh","dl","fract","amp","cos_a","sin_a","s","random","code","charAt","k","v","rgba","hex","u","match","substr","parseInt","css","channels","hxa","str","NaN","hsl","q","ref3","ref4","ref5","delta","hsv","num","aa","ab","join","named","L","lch","reverse","cmyk","gl","col1","col2","interpol","res","mix","xyz0","xyz1","luminance","lum","cur_lum","max_iter","_test","lm","kelvin","temp","maxTemp","minTemp","temperature","K","contrast","l1","l2","get","modechan","channel","indexOf","set","amount","brighten","darker","brighter","saturate","desaturate","premultiply","bottom","top","normal","c0","c1","blend","analyze","data","MAX_VALUE","values","domain","limits","positions","_classes","_colorCache","_colors","_correctLightness","_domain","_max","_min","_mode","_nacol","_out","_padding","_pos","_spread","getClass","getColor","resetCache","setColors","tmap","col","maxc","minc","bypassMap","classes","d","_m","range","_o","spread","correctLightness","L0","L1","L_actual","L_diff","L_ideal","pol","padding","dd","dm","numColors","scales","cool","hot","add","visit","ac","ad","ae","af","ag","ah","ai","aj","ak","al","am","assignments","best","centroids","cluster","clusterSizes","kClusters","max_log","min_log","mindist","nb_iters","newCentroids","pb","pr","ref10","ref11","ref12","ref13","ref14","ref6","ref7","ref8","ref9","repeat","tmpKMeansBreaks","LOG10E","acos","hsi","hue0","hue1","lbv0","lbv1","sat","sat0","sat1","n1","n2","webpackPolyfill","deprecate","paths","children","$export","sign","S"],"mappings":"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","file":"60-d1e56c69440e3f545bec.js","sourcesContent":["'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","require(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.number.max-safe-integer\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.math.cbrt\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.number.min-safe-integer\");\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(factory);else if (typeof exports === 'object') exports[\"DistinctColors\"] = factory();else root[\"DistinctColors\"] = factory();\n})(this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId])\n          /******/\n          return installedModules[moduleId].exports;\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n        var module = installedModules[moduleId] = {\n          /******/\n          exports: {},\n\n          /******/\n          id: moduleId,\n\n          /******/\n          loaded: false\n          /******/\n\n        };\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.loaded = true;\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n      __webpack_require__.p = \"\";\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(0);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          'default': obj\n        };\n      }\n\n      var _utils = __webpack_require__(1);\n\n      var _utils2 = _interopRequireDefault(_utils);\n\n      var _moutLangDeepClone = __webpack_require__(2);\n\n      var _moutLangDeepClone2 = _interopRequireDefault(_moutLangDeepClone);\n\n      var _moutLangDeepEquals = __webpack_require__(10);\n\n      var _moutLangDeepEquals2 = _interopRequireDefault(_moutLangDeepEquals);\n\n      var _moutArrayUnique = __webpack_require__(23);\n\n      var _moutArrayUnique2 = _interopRequireDefault(_moutArrayUnique);\n\n      var _chromaJs = __webpack_require__(25);\n\n      var _chromaJs2 = _interopRequireDefault(_chromaJs);\n\n      var defaults = {\n        count: 5,\n        hueMin: 0,\n        hueMax: 360,\n        chromaMin: 0,\n        chromaMax: 100,\n        lightMin: 0,\n        lightMax: 100,\n        quality: 50,\n        samples: 800\n      };\n\n      var checkColor = function checkColor(lab, options) {\n        var color = _chromaJs2['default'].lab(lab);\n\n        var hcl = color.hcl();\n        var rgb = color.rgb();\n\n        var compLab = _chromaJs2['default'].rgb(rgb).lab();\n\n        var labTolerance = 2;\n        return hcl[0] >= options.hueMin && hcl[0] <= options.hueMax && hcl[1] >= options.chromaMin && hcl[1] <= options.chromaMax && hcl[2] >= options.lightMin && hcl[2] <= options.lightMax && compLab[0] >= lab[0] - labTolerance && compLab[0] <= lab[0] + labTolerance && compLab[1] >= lab[1] - labTolerance && compLab[1] <= lab[1] + labTolerance && compLab[2] >= lab[2] - labTolerance && compLab[2] <= lab[2] + labTolerance;\n      };\n\n      var sortByContrast = function sortByContrast(colorList) {\n        var unsortedColors = colorList.slice(0);\n        var sortedColors = [unsortedColors.shift()];\n\n        while (unsortedColors.length > 0) {\n          var lastColor = sortedColors[sortedColors.length - 1];\n          var nearest = 0;\n          var maxDist = Number.MIN_SAFE_INTEGER;\n\n          for (var i = 0; i < unsortedColors.length; i++) {\n            var dist = Math.sqrt(Math.pow(Math.abs(lastColor[0] - unsortedColors[i][0]), 2) + Math.pow(Math.abs(lastColor[1] - unsortedColors[i][1]), 2) + Math.pow(Math.abs(lastColor[2] - unsortedColors[i][2]), 2));\n\n            if (dist > maxDist) {\n              maxDist = dist;\n              nearest = i;\n            }\n          }\n\n          sortedColors.push(unsortedColors.splice(nearest, 1)[0]);\n        }\n\n        return sortedColors;\n      };\n\n      var distinctColors = function distinctColors() {\n        var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var options = _utils2['default'].mergeObj(defaults, opts);\n\n        if (options.count <= 0) {\n          return [];\n        }\n\n        if (options.samples < options.count * 5) {\n          options.samples = options.count * 5;\n        }\n\n        var colors = [];\n        var zonesProto = [];\n        var samples = [];\n        var rangeDivider = Math.cbrt(options.samples);\n        rangeDivider *= 1.001;\n        var hStep = (options.hueMax - options.hueMin) / rangeDivider;\n        var cStep = (options.chromaMax - options.chromaMin) / rangeDivider;\n        var lStep = (options.lightMax - options.lightMin) / rangeDivider;\n\n        for (var h = options.hueMin; h <= options.hueMax; h += hStep) {\n          for (var c = options.chromaMin; c <= options.chromaMax; c += cStep) {\n            for (var l = options.lightMin; l <= options.lightMax; l += lStep) {\n              var color = _chromaJs2['default'].hcl(h, c, l).lab();\n\n              if (checkColor(color, options)) {\n                samples.push(color);\n              }\n            }\n          }\n        }\n\n        samples = (0, _moutArrayUnique2['default'])(samples, function (a, b) {\n          return a.toString() === b.toString();\n        });\n\n        if (samples.length < options.count) {\n          throw new Error('Not enough samples to generate palette, increase sample count.');\n        }\n\n        var sliceSize = Math.floor(samples.length / options.count);\n\n        for (var i = 0; i < samples.length; i += sliceSize) {\n          colors.push(samples[i]);\n          zonesProto.push([]);\n\n          if (colors.length >= options.count) {\n            break;\n          }\n        }\n\n        for (var step = 1; step <= options.quality; step++) {\n          var zones = (0, _moutLangDeepClone2['default'])(zonesProto); // Find closest color for each sample\n\n          for (var i = 0; i < samples.length; i++) {\n            var minDist = Number.MAX_SAFE_INTEGER;\n            var nearest = 0;\n\n            for (var j = 0; j < colors.length; j++) {\n              var dist = Math.sqrt(Math.pow(Math.abs(samples[i][0] - colors[j][0]), 2) + Math.pow(Math.abs(samples[i][1] - colors[j][1]), 2) + Math.pow(Math.abs(samples[i][2] - colors[j][2]), 2));\n\n              if (dist < minDist) {\n                minDist = dist;\n                nearest = j;\n              }\n            }\n\n            zones[nearest].push(samples[i]);\n          }\n\n          var lastColors = (0, _moutLangDeepClone2['default'])(colors);\n\n          for (var i = 0; i < zones.length; i++) {\n            var zone = zones[i];\n            var size = zone.length;\n            var Ls = [];\n            var As = [];\n            var Bs = [];\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = zone[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var sample = _step.value;\n                Ls.push(sample[0]);\n                As.push(sample[1]);\n                Bs.push(sample[2]);\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator['return']) {\n                  _iterator['return']();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n\n            var lAvg = _utils2['default'].sum(Ls) / size;\n            var aAvg = _utils2['default'].sum(As) / size;\n            var bAvg = _utils2['default'].sum(Bs) / size;\n            colors[i] = [lAvg, aAvg, bAvg];\n          }\n\n          if ((0, _moutLangDeepEquals2['default'])(lastColors, colors)) {\n            break;\n          }\n        }\n\n        colors = sortByContrast(colors);\n        return colors.map(function (lab) {\n          return _chromaJs2['default'].lab(lab);\n        });\n      };\n\n      exports['default'] = distinctColors;\n      module.exports = exports['default'];\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var utils = {\n        mergeObj: function mergeObj(o1, o2) {\n          if (o1 == null || o2 == null) {\n            return o1;\n          }\n\n          for (var key in o2) {\n            if (o2.hasOwnProperty(key)) {\n              o1[key] = o2[key];\n            }\n          }\n\n          return o1;\n        },\n        sum: function sum(array) {\n          return array.reduce(function (a, b) {\n            return a + b;\n          });\n        }\n      };\n      exports[\"default\"] = utils;\n      module.exports = exports[\"default\"];\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var clone = __webpack_require__(3);\n\n      var forOwn = __webpack_require__(7);\n\n      var kindOf = __webpack_require__(4);\n\n      var isPlainObject = __webpack_require__(5);\n      /**\n       * Recursively clone native types.\n       */\n\n\n      function deepClone(val, instanceClone) {\n        switch (kindOf(val)) {\n          case 'Object':\n            return cloneObject(val, instanceClone);\n\n          case 'Array':\n            return cloneArray(val, instanceClone);\n\n          default:\n            return clone(val);\n        }\n      }\n\n      function cloneObject(source, instanceClone) {\n        if (isPlainObject(source)) {\n          var out = {};\n          forOwn(source, function (val, key) {\n            this[key] = deepClone(val, instanceClone);\n          }, out);\n          return out;\n        } else if (instanceClone) {\n          return instanceClone(source);\n        } else {\n          return source;\n        }\n      }\n\n      function cloneArray(arr, instanceClone) {\n        var out = [],\n            i = -1,\n            n = arr.length,\n            val;\n\n        while (++i < n) {\n          out[i] = deepClone(arr[i], instanceClone);\n        }\n\n        return out;\n      }\n\n      module.exports = deepClone;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var kindOf = __webpack_require__(4);\n\n      var isPlainObject = __webpack_require__(5);\n\n      var mixIn = __webpack_require__(6);\n      /**\n       * Clone native types.\n       */\n\n\n      function clone(val) {\n        switch (kindOf(val)) {\n          case 'Object':\n            return cloneObject(val);\n\n          case 'Array':\n            return cloneArray(val);\n\n          case 'RegExp':\n            return cloneRegExp(val);\n\n          case 'Date':\n            return cloneDate(val);\n\n          default:\n            return val;\n        }\n      }\n\n      function cloneObject(source) {\n        if (isPlainObject(source)) {\n          return mixIn({}, source);\n        } else {\n          return source;\n        }\n      }\n\n      function cloneRegExp(r) {\n        var flags = '';\n        flags += r.multiline ? 'm' : '';\n        flags += r.global ? 'g' : '';\n        flags += r.ignoreCase ? 'i' : '';\n        return new RegExp(r.source, flags);\n      }\n\n      function cloneDate(date) {\n        return new Date(+date);\n      }\n\n      function cloneArray(arr) {\n        return arr.slice();\n      }\n\n      module.exports = clone;\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports) {\n      var _rKind = /^\\[object (.*)\\]$/,\n          _toString = Object.prototype.toString,\n          UNDEF;\n      /**\n       * Gets the \"kind\" of value. (e.g. \"String\", \"Number\", etc)\n       */\n\n      function kindOf(val) {\n        if (val === null) {\n          return 'Null';\n        } else if (val === UNDEF) {\n          return 'Undefined';\n        } else {\n          return _rKind.exec(_toString.call(val))[1];\n        }\n      }\n\n      module.exports = kindOf;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Checks if the value is created by the `Object` constructor.\n       */\n      function isPlainObject(value) {\n        return !!value && typeof value === 'object' && value.constructor === Object;\n      }\n\n      module.exports = isPlainObject;\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var forOwn = __webpack_require__(7);\n      /**\n      * Combine properties from all the objects into first one.\n      * - This method affects target object in place, if you want to create a new Object pass an empty object as first param.\n      * @param {object} target    Target Object\n      * @param {...object} objects    Objects to be combined (0...n objects).\n      * @return {object} Target Object.\n      */\n\n\n      function mixIn(target, objects) {\n        var i = 0,\n            n = arguments.length,\n            obj;\n\n        while (++i < n) {\n          obj = arguments[i];\n\n          if (obj != null) {\n            forOwn(obj, copyProp, target);\n          }\n        }\n\n        return target;\n      }\n\n      function copyProp(val, key) {\n        this[key] = val;\n      }\n\n      module.exports = mixIn;\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var hasOwn = __webpack_require__(8);\n\n      var forIn = __webpack_require__(9);\n      /**\n       * Similar to Array/forEach but works over object properties and fixes Don't\n       * Enum bug on IE.\n       * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n       */\n\n\n      function forOwn(obj, fn, thisObj) {\n        forIn(obj, function (val, key) {\n          if (hasOwn(obj, key)) {\n            return fn.call(thisObj, obj[key], key, obj);\n          }\n        });\n      }\n\n      module.exports = forOwn;\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Safer Object.hasOwnProperty\n       */\n      function hasOwn(obj, prop) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n      }\n\n      module.exports = hasOwn;\n      /***/\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var hasOwn = __webpack_require__(8);\n\n      var _hasDontEnumBug, _dontEnums;\n\n      function checkDontEnum() {\n        _dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];\n        _hasDontEnumBug = true;\n\n        for (var key in {\n          'toString': null\n        }) {\n          _hasDontEnumBug = false;\n        }\n      }\n      /**\n       * Similar to Array/forEach but works over object properties and fixes Don't\n       * Enum bug on IE.\n       * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n       */\n\n\n      function forIn(obj, fn, thisObj) {\n        var key,\n            i = 0; // no need to check if argument is a real object that way we can use\n        // it for arrays, functions, date, etc.\n        //post-pone check till needed\n\n        if (_hasDontEnumBug == null) checkDontEnum();\n\n        for (key in obj) {\n          if (exec(fn, obj, key, thisObj) === false) {\n            break;\n          }\n        }\n\n        if (_hasDontEnumBug) {\n          var ctor = obj.constructor,\n              isProto = !!ctor && obj === ctor.prototype;\n\n          while (key = _dontEnums[i++]) {\n            // For constructor, if it is a prototype object the constructor\n            // is always non-enumerable unless defined otherwise (and\n            // enumerated above).  For non-prototype objects, it will have\n            // to be defined on this object, since it cannot be defined on\n            // any prototype objects.\n            //\n            // For other [[DontEnum]] properties, check if the value is\n            // different than Object prototype value.\n            if ((key !== 'constructor' || !isProto && hasOwn(obj, key)) && obj[key] !== Object.prototype[key]) {\n              if (exec(fn, obj, key, thisObj) === false) {\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      function exec(fn, obj, key, thisObj) {\n        return fn.call(thisObj, obj[key], key, obj);\n      }\n\n      module.exports = forIn;\n      /***/\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var is = __webpack_require__(11);\n\n      var isObject = __webpack_require__(12);\n\n      var isArray = __webpack_require__(14);\n\n      var objEquals = __webpack_require__(15);\n\n      var arrEquals = __webpack_require__(21);\n      /**\n       * Recursively checks for same properties and values.\n       */\n\n\n      function deepEquals(a, b, callback) {\n        callback = callback || is;\n        var bothObjects = isObject(a) && isObject(b);\n        var bothArrays = !bothObjects && isArray(a) && isArray(b);\n\n        if (!bothObjects && !bothArrays) {\n          return callback(a, b);\n        }\n\n        function compare(a, b) {\n          return deepEquals(a, b, callback);\n        }\n\n        var method = bothObjects ? objEquals : arrEquals;\n        return method(a, b, compare);\n      }\n\n      module.exports = deepEquals;\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Check if both arguments are egal.\n       */\n      function is(x, y) {\n        // implementation borrowed from harmony:egal spec\n        if (x === y) {\n          // 0 === -0, but they are not identical\n          return x !== 0 || 1 / x === 1 / y;\n        } // NaN !== NaN, but they are identical.\n        // NaNs are the only non-reflexive value, i.e., if x !== x,\n        // then x is a NaN.\n        // isNaN is broken: it converts its argument to number, so\n        // isNaN(\"foo\") => true\n\n\n        return x !== x && y !== y;\n      }\n\n      module.exports = is;\n      /***/\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var isKind = __webpack_require__(13);\n      /**\n       */\n\n\n      function isObject(val) {\n        return isKind(val, 'Object');\n      }\n\n      module.exports = isObject;\n      /***/\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var kindOf = __webpack_require__(4);\n      /**\n       * Check if value is from a specific \"kind\".\n       */\n\n\n      function isKind(val, kind) {\n        return kindOf(val) === kind;\n      }\n\n      module.exports = isKind;\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var isKind = __webpack_require__(13);\n      /**\n       */\n\n\n      var isArray = Array.isArray || function (val) {\n        return isKind(val, 'Array');\n      };\n\n      module.exports = isArray;\n      /***/\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var hasOwn = __webpack_require__(8);\n\n      var every = __webpack_require__(16);\n\n      var isObject = __webpack_require__(12);\n\n      var is = __webpack_require__(11); // Makes a function to compare the object values from the specified compare\n      // operation callback.\n\n\n      function makeCompare(callback) {\n        return function (value, key) {\n          return hasOwn(this, key) && callback(value, this[key]);\n        };\n      }\n\n      function checkProperties(value, key) {\n        return hasOwn(this, key);\n      }\n      /**\n       * Checks if two objects have the same keys and values.\n       */\n\n\n      function equals(a, b, callback) {\n        callback = callback || is;\n\n        if (!isObject(a) || !isObject(b)) {\n          return callback(a, b);\n        }\n\n        return every(a, makeCompare(callback), b) && every(b, checkProperties, a);\n      }\n\n      module.exports = equals;\n      /***/\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var forOwn = __webpack_require__(7);\n\n      var makeIterator = __webpack_require__(17);\n      /**\n       * Object every\n       */\n\n\n      function every(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result = true;\n        forOwn(obj, function (val, key) {\n          // we consider any falsy values as \"false\" on purpose so shorthand\n          // syntax can be used to check property existence\n          if (!callback(val, key, obj)) {\n            result = false;\n            return false; // break\n          }\n        });\n        return result;\n      }\n\n      module.exports = every;\n      /***/\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var identity = __webpack_require__(18);\n\n      var prop = __webpack_require__(19);\n\n      var deepMatches = __webpack_require__(20);\n      /**\n       * Converts argument into a valid iterator.\n       * Used internally on most array/object/collection methods that receives a\n       * callback/iterator providing a shortcut syntax.\n       */\n\n\n      function makeIterator(src, thisObj) {\n        if (src == null) {\n          return identity;\n        }\n\n        switch (typeof src) {\n          case 'function':\n            // function is the first to improve perf (most common case)\n            // also avoid using `Function#call` if not needed, which boosts\n            // perf a lot in some cases\n            return typeof thisObj !== 'undefined' ? function (val, i, arr) {\n              return src.call(thisObj, val, i, arr);\n            } : src;\n\n          case 'object':\n            return function (val) {\n              return deepMatches(val, src);\n            };\n\n          case 'string':\n          case 'number':\n            return prop(src);\n        }\n      }\n\n      module.exports = makeIterator;\n      /***/\n    },\n    /* 18 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Returns the first argument provided to it.\n       */\n      function identity(val) {\n        return val;\n      }\n\n      module.exports = identity;\n      /***/\n    },\n    /* 19 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Returns a function that gets a property of the passed object\n       */\n      function prop(name) {\n        return function (obj) {\n          return obj[name];\n        };\n      }\n\n      module.exports = prop;\n      /***/\n    },\n    /* 20 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var forOwn = __webpack_require__(7);\n\n      var isArray = __webpack_require__(14);\n\n      function containsMatch(array, pattern) {\n        var i = -1,\n            length = array.length;\n\n        while (++i < length) {\n          if (deepMatches(array[i], pattern)) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      function matchArray(target, pattern) {\n        var i = -1,\n            patternLength = pattern.length;\n\n        while (++i < patternLength) {\n          if (!containsMatch(target, pattern[i])) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      function matchObject(target, pattern) {\n        var result = true;\n        forOwn(pattern, function (val, key) {\n          if (!deepMatches(target[key], val)) {\n            // Return false to break out of forOwn early\n            return result = false;\n          }\n        });\n        return result;\n      }\n      /**\n       * Recursively check if the objects match.\n       */\n\n\n      function deepMatches(target, pattern) {\n        if (target && typeof target === 'object') {\n          if (isArray(target) && isArray(pattern)) {\n            return matchArray(target, pattern);\n          } else {\n            return matchObject(target, pattern);\n          }\n        } else {\n          return target === pattern;\n        }\n      }\n\n      module.exports = deepMatches;\n      /***/\n    },\n    /* 21 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var is = __webpack_require__(11);\n\n      var isArray = __webpack_require__(14);\n\n      var every = __webpack_require__(22);\n      /**\n       * Compares if both arrays have the same elements\n       */\n\n\n      function equals(a, b, callback) {\n        callback = callback || is;\n\n        if (!isArray(a) || !isArray(b)) {\n          return callback(a, b);\n        }\n\n        if (a.length !== b.length) {\n          return false;\n        }\n\n        return every(a, makeCompare(callback), b);\n      }\n\n      function makeCompare(callback) {\n        return function (value, i) {\n          return i in this && callback(value, this[i]);\n        };\n      }\n\n      module.exports = equals;\n      /***/\n    },\n    /* 22 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var makeIterator = __webpack_require__(17);\n      /**\n       * Array every\n       */\n\n\n      function every(arr, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result = true;\n\n        if (arr == null) {\n          return result;\n        }\n\n        var i = -1,\n            len = arr.length;\n\n        while (++i < len) {\n          // we iterate over sparse items since there is no way to make it\n          // work properly on IE 7-8. see #64\n          if (!callback(arr[i], i, arr)) {\n            result = false;\n            break;\n          }\n        }\n\n        return result;\n      }\n\n      module.exports = every;\n      /***/\n    },\n    /* 23 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var filter = __webpack_require__(24);\n      /**\n       * @return {array} Array of unique items\n       */\n\n\n      function unique(arr, compare) {\n        compare = compare || isEqual;\n        return filter(arr, function (item, i, arr) {\n          var n = arr.length;\n\n          while (++i < n) {\n            if (compare(item, arr[i])) {\n              return false;\n            }\n          }\n\n          return true;\n        });\n      }\n\n      function isEqual(a, b) {\n        return a === b;\n      }\n\n      module.exports = unique;\n      /***/\n    },\n    /* 24 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var makeIterator = __webpack_require__(17);\n      /**\n       * Array filter\n       */\n\n\n      function filter(arr, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var results = [];\n\n        if (arr == null) {\n          return results;\n        }\n\n        var i = -1,\n            len = arr.length,\n            value;\n\n        while (++i < len) {\n          value = arr[i];\n\n          if (callback(value, i, arr)) {\n            results.push(value);\n          }\n        }\n\n        return results;\n      }\n\n      module.exports = filter;\n      /***/\n    },\n    /* 25 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n      /* WEBPACK VAR INJECTION */\n\n\n      (function (module) {\n        /**\n         * @license\n         *\n         * chroma.js - JavaScript library for color conversions\n         * \n         * Copyright (c) 2011-2015, Gregor Aisch\n         * All rights reserved.\n         * \n         * Redistribution and use in source and binary forms, with or without\n         * modification, are permitted provided that the following conditions are met:\n         * \n         * 1. Redistributions of source code must retain the above copyright notice, this\n         *    list of conditions and the following disclaimer.\n         * \n         * 2. Redistributions in binary form must reproduce the above copyright notice,\n         *    this list of conditions and the following disclaimer in the documentation\n         *    and/or other materials provided with the distribution.\n         * \n         * 3. The name Gregor Aisch may not be used to endorse or promote products\n         *    derived from this software without specific prior written permission.\n         * \n         * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n         * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n         * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n         * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n         * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n         * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n         * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n         * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n         * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n         * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n         *\n         */\n        (function () {\n          var Color,\n              DEG2RAD,\n              LAB_CONSTANTS,\n              PI,\n              PITHIRD,\n              RAD2DEG,\n              TWOPI,\n              _guess_formats,\n              _guess_formats_sorted,\n              _input,\n              _interpolators,\n              abs,\n              atan2,\n              _bezier,\n              _blend,\n              blend_f,\n              brewer,\n              burn,\n              chroma,\n              clip_rgb,\n              cmyk2rgb,\n              colors,\n              cos,\n              css2rgb,\n              darken,\n              dodge,\n              each,\n              floor,\n              hex2rgb,\n              hsi2rgb,\n              hsl2css,\n              hsl2rgb,\n              hsv2rgb,\n              interpolate,\n              interpolate_hsx,\n              interpolate_lab,\n              interpolate_num,\n              interpolate_rgb,\n              lab2lch,\n              lab2rgb,\n              lab_xyz,\n              lch2lab,\n              lch2rgb,\n              lighten,\n              limit,\n              log,\n              luminance_x,\n              m,\n              max,\n              multiply,\n              normal,\n              num2rgb,\n              overlay,\n              pow,\n              rgb2cmyk,\n              rgb2css,\n              rgb2hex,\n              rgb2hsi,\n              rgb2hsl,\n              rgb2hsv,\n              rgb2lab,\n              rgb2lch,\n              rgb2luminance,\n              rgb2num,\n              rgb2temperature,\n              rgb2xyz,\n              rgb_xyz,\n              rnd,\n              root,\n              round,\n              screen,\n              sin,\n              sqrt,\n              temperature2rgb,\n              type,\n              unpack,\n              w3cx11,\n              xyz_lab,\n              xyz_rgb,\n              slice = [].slice;\n\n          type = function () {\n            /*\n            for browser-safe type checking+\n            ported from jQuery's $.type\n             */\n            var classToType, len, name, o, ref;\n            classToType = {};\n            ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n\n            for (o = 0, len = ref.length; o < len; o++) {\n              name = ref[o];\n              classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n            }\n\n            return function (obj) {\n              var strType;\n              strType = Object.prototype.toString.call(obj);\n              return classToType[strType] || \"object\";\n            };\n          }();\n\n          limit = function limit(x, min, max) {\n            if (min == null) {\n              min = 0;\n            }\n\n            if (max == null) {\n              max = 1;\n            }\n\n            if (x < min) {\n              x = min;\n            }\n\n            if (x > max) {\n              x = max;\n            }\n\n            return x;\n          };\n\n          unpack = function unpack(args) {\n            if (args.length >= 3) {\n              return [].slice.call(args);\n            } else {\n              return args[0];\n            }\n          };\n\n          clip_rgb = function clip_rgb(rgb) {\n            var i;\n\n            for (i in rgb) {\n              if (i < 3) {\n                if (rgb[i] < 0) {\n                  rgb[i] = 0;\n                }\n\n                if (rgb[i] > 255) {\n                  rgb[i] = 255;\n                }\n              } else if (i === 3) {\n                if (rgb[i] < 0) {\n                  rgb[i] = 0;\n                }\n\n                if (rgb[i] > 1) {\n                  rgb[i] = 1;\n                }\n              }\n            }\n\n            return rgb;\n          };\n\n          PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n          TWOPI = PI * 2;\n          PITHIRD = PI / 3;\n          DEG2RAD = PI / 180;\n          RAD2DEG = 180 / PI;\n\n          chroma = function chroma() {\n            if (arguments[0] instanceof Color) {\n              return arguments[0];\n            }\n\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, arguments, function () {});\n          };\n\n          _interpolators = [];\n\n          if (typeof module !== \"undefined\" && module !== null && module.exports != null) {\n            module.exports = chroma;\n          }\n\n          if (true) {\n            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n              return chroma;\n            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n          } else {\n            root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n            root.chroma = chroma;\n          }\n\n          chroma.version = '1.1.1';\n          /**\n              chroma.js\n          \n              Copyright (c) 2011-2013, Gregor Aisch\n              All rights reserved.\n          \n              Redistribution and use in source and binary forms, with or without\n              modification, are permitted provided that the following conditions are met:\n          \n              * Redistributions of source code must retain the above copyright notice, this\n                list of conditions and the following disclaimer.\n          \n              * Redistributions in binary form must reproduce the above copyright notice,\n                this list of conditions and the following disclaimer in the documentation\n                and/or other materials provided with the distribution.\n          \n              * The name Gregor Aisch may not be used to endorse or promote products\n                derived from this software without specific prior written permission.\n          \n              THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n              AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n              IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n              DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n              INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n              BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n              DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n              OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n              NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n              EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n          \n              @source: https://github.com/gka/chroma.js\n           */\n\n          _input = {};\n          _guess_formats = [];\n          _guess_formats_sorted = false;\n\n          Color = function () {\n            function Color() {\n              var arg, args, chk, len, len1, me, mode, o, w;\n              me = this;\n              args = [];\n\n              for (o = 0, len = arguments.length; o < len; o++) {\n                arg = arguments[o];\n\n                if (arg != null) {\n                  args.push(arg);\n                }\n              }\n\n              mode = args[args.length - 1];\n\n              if (_input[mode] != null) {\n                me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n              } else {\n                if (!_guess_formats_sorted) {\n                  _guess_formats = _guess_formats.sort(function (a, b) {\n                    return b.p - a.p;\n                  });\n                  _guess_formats_sorted = true;\n                }\n\n                for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n                  chk = _guess_formats[w];\n                  mode = chk.test.apply(chk, args);\n\n                  if (mode) {\n                    break;\n                  }\n                }\n\n                if (mode) {\n                  me._rgb = clip_rgb(_input[mode].apply(_input, args));\n                }\n              }\n\n              if (me._rgb == null) {\n                console.warn('unknown format: ' + args);\n              }\n\n              if (me._rgb == null) {\n                me._rgb = [0, 0, 0];\n              }\n\n              if (me._rgb.length === 3) {\n                me._rgb.push(1);\n              }\n            }\n\n            Color.prototype.alpha = function (alpha) {\n              if (arguments.length) {\n                this._rgb[3] = alpha;\n                return this;\n              }\n\n              return this._rgb[3];\n            };\n\n            Color.prototype.toString = function () {\n              return this.name();\n            };\n\n            return Color;\n          }();\n\n          chroma._input = _input;\n          /**\n          \tColorBrewer colors for chroma.js\n          \n          \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n          \tPennsylvania State University.\n          \n          \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n          \tyou may not use this file except in compliance with the License.\n          \tYou may obtain a copy of the License at\t\n          \thttp://www.apache.org/licenses/LICENSE-2.0\n          \n          \tUnless required by applicable law or agreed to in writing, software distributed\n          \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n          \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n          \tspecific language governing permissions and limitations under the License.\n          \n              @preserve\n           */\n\n          chroma.brewer = brewer = {\n            OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n            PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n            BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n            Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n            BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n            YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n            YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n            Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n            RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n            Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n            YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n            Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n            GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n            Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n            YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n            PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n            Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n            PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n            Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n            RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n            RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n            PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n            PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n            RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n            BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n            RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n            PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n            Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n            Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n            Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n            Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n            Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n            Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n            Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n            Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n          };\n          /**\n          \tX11 color names\n          \n          \thttp://www.w3.org/TR/css3-color/#svg-color\n           */\n\n          w3cx11 = {\n            indigo: \"#4b0082\",\n            gold: \"#ffd700\",\n            hotpink: \"#ff69b4\",\n            firebrick: \"#b22222\",\n            indianred: \"#cd5c5c\",\n            yellow: \"#ffff00\",\n            mistyrose: \"#ffe4e1\",\n            darkolivegreen: \"#556b2f\",\n            olive: \"#808000\",\n            darkseagreen: \"#8fbc8f\",\n            pink: \"#ffc0cb\",\n            tomato: \"#ff6347\",\n            lightcoral: \"#f08080\",\n            orangered: \"#ff4500\",\n            navajowhite: \"#ffdead\",\n            lime: \"#00ff00\",\n            palegreen: \"#98fb98\",\n            darkslategrey: \"#2f4f4f\",\n            greenyellow: \"#adff2f\",\n            burlywood: \"#deb887\",\n            seashell: \"#fff5ee\",\n            mediumspringgreen: \"#00fa9a\",\n            fuchsia: \"#ff00ff\",\n            papayawhip: \"#ffefd5\",\n            blanchedalmond: \"#ffebcd\",\n            chartreuse: \"#7fff00\",\n            dimgray: \"#696969\",\n            black: \"#000000\",\n            peachpuff: \"#ffdab9\",\n            springgreen: \"#00ff7f\",\n            aquamarine: \"#7fffd4\",\n            white: \"#ffffff\",\n            orange: \"#ffa500\",\n            lightsalmon: \"#ffa07a\",\n            darkslategray: \"#2f4f4f\",\n            brown: \"#a52a2a\",\n            ivory: \"#fffff0\",\n            dodgerblue: \"#1e90ff\",\n            peru: \"#cd853f\",\n            lawngreen: \"#7cfc00\",\n            chocolate: \"#d2691e\",\n            crimson: \"#dc143c\",\n            forestgreen: \"#228b22\",\n            darkgrey: \"#a9a9a9\",\n            lightseagreen: \"#20b2aa\",\n            cyan: \"#00ffff\",\n            mintcream: \"#f5fffa\",\n            silver: \"#c0c0c0\",\n            antiquewhite: \"#faebd7\",\n            mediumorchid: \"#ba55d3\",\n            skyblue: \"#87ceeb\",\n            gray: \"#808080\",\n            darkturquoise: \"#00ced1\",\n            goldenrod: \"#daa520\",\n            darkgreen: \"#006400\",\n            floralwhite: \"#fffaf0\",\n            darkviolet: \"#9400d3\",\n            darkgray: \"#a9a9a9\",\n            moccasin: \"#ffe4b5\",\n            saddlebrown: \"#8b4513\",\n            grey: \"#808080\",\n            darkslateblue: \"#483d8b\",\n            lightskyblue: \"#87cefa\",\n            lightpink: \"#ffb6c1\",\n            mediumvioletred: \"#c71585\",\n            slategrey: \"#708090\",\n            red: \"#ff0000\",\n            deeppink: \"#ff1493\",\n            limegreen: \"#32cd32\",\n            darkmagenta: \"#8b008b\",\n            palegoldenrod: \"#eee8aa\",\n            plum: \"#dda0dd\",\n            turquoise: \"#40e0d0\",\n            lightgrey: \"#d3d3d3\",\n            lightgoldenrodyellow: \"#fafad2\",\n            darkgoldenrod: \"#b8860b\",\n            lavender: \"#e6e6fa\",\n            maroon: \"#800000\",\n            yellowgreen: \"#9acd32\",\n            sandybrown: \"#f4a460\",\n            thistle: \"#d8bfd8\",\n            violet: \"#ee82ee\",\n            navy: \"#000080\",\n            magenta: \"#ff00ff\",\n            dimgrey: \"#696969\",\n            tan: \"#d2b48c\",\n            rosybrown: \"#bc8f8f\",\n            olivedrab: \"#6b8e23\",\n            blue: \"#0000ff\",\n            lightblue: \"#add8e6\",\n            ghostwhite: \"#f8f8ff\",\n            honeydew: \"#f0fff0\",\n            cornflowerblue: \"#6495ed\",\n            slateblue: \"#6a5acd\",\n            linen: \"#faf0e6\",\n            darkblue: \"#00008b\",\n            powderblue: \"#b0e0e6\",\n            seagreen: \"#2e8b57\",\n            darkkhaki: \"#bdb76b\",\n            snow: \"#fffafa\",\n            sienna: \"#a0522d\",\n            mediumblue: \"#0000cd\",\n            royalblue: \"#4169e1\",\n            lightcyan: \"#e0ffff\",\n            green: \"#008000\",\n            mediumpurple: \"#9370db\",\n            midnightblue: \"#191970\",\n            cornsilk: \"#fff8dc\",\n            paleturquoise: \"#afeeee\",\n            bisque: \"#ffe4c4\",\n            slategray: \"#708090\",\n            darkcyan: \"#008b8b\",\n            khaki: \"#f0e68c\",\n            wheat: \"#f5deb3\",\n            teal: \"#008080\",\n            darkorchid: \"#9932cc\",\n            deepskyblue: \"#00bfff\",\n            salmon: \"#fa8072\",\n            darkred: \"#8b0000\",\n            steelblue: \"#4682b4\",\n            palevioletred: \"#db7093\",\n            lightslategray: \"#778899\",\n            aliceblue: \"#f0f8ff\",\n            lightslategrey: \"#778899\",\n            lightgreen: \"#90ee90\",\n            orchid: \"#da70d6\",\n            gainsboro: \"#dcdcdc\",\n            mediumseagreen: \"#3cb371\",\n            lightgray: \"#d3d3d3\",\n            mediumturquoise: \"#48d1cc\",\n            lemonchiffon: \"#fffacd\",\n            cadetblue: \"#5f9ea0\",\n            lightyellow: \"#ffffe0\",\n            lavenderblush: \"#fff0f5\",\n            coral: \"#ff7f50\",\n            purple: \"#800080\",\n            aqua: \"#00ffff\",\n            whitesmoke: \"#f5f5f5\",\n            mediumslateblue: \"#7b68ee\",\n            darkorange: \"#ff8c00\",\n            mediumaquamarine: \"#66cdaa\",\n            darksalmon: \"#e9967a\",\n            beige: \"#f5f5dc\",\n            blueviolet: \"#8a2be2\",\n            azure: \"#f0ffff\",\n            lightsteelblue: \"#b0c4de\",\n            oldlace: \"#fdf5e6\",\n            rebeccapurple: \"#663399\"\n          };\n          chroma.colors = colors = w3cx11;\n\n          lab2rgb = function lab2rgb() {\n            var a, args, b, g, l, r, x, y, z;\n            args = unpack(arguments);\n            l = args[0], a = args[1], b = args[2];\n            y = (l + 16) / 116;\n            x = isNaN(a) ? y : y + a / 500;\n            z = isNaN(b) ? y : y - b / 200;\n            y = LAB_CONSTANTS.Yn * lab_xyz(y);\n            x = LAB_CONSTANTS.Xn * lab_xyz(x);\n            z = LAB_CONSTANTS.Zn * lab_xyz(z);\n            r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n            g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n            b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n            r = limit(r, 0, 255);\n            g = limit(g, 0, 255);\n            b = limit(b, 0, 255);\n            return [r, g, b, args.length > 3 ? args[3] : 1];\n          };\n\n          xyz_rgb = function xyz_rgb(r) {\n            return round(255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055));\n          };\n\n          lab_xyz = function lab_xyz(t) {\n            if (t > LAB_CONSTANTS.t1) {\n              return t * t * t;\n            } else {\n              return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n            }\n          };\n\n          LAB_CONSTANTS = {\n            Kn: 18,\n            Xn: 0.950470,\n            Yn: 1,\n            Zn: 1.088830,\n            t0: 0.137931034,\n            t1: 0.206896552,\n            t2: 0.12841855,\n            t3: 0.008856452\n          };\n\n          rgb2lab = function rgb2lab() {\n            var b, g, r, ref, ref1, x, y, z;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n            return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n          };\n\n          rgb_xyz = function rgb_xyz(r) {\n            if ((r /= 255) <= 0.04045) {\n              return r / 12.92;\n            } else {\n              return pow((r + 0.055) / 1.055, 2.4);\n            }\n          };\n\n          xyz_lab = function xyz_lab(t) {\n            if (t > LAB_CONSTANTS.t3) {\n              return pow(t, 1 / 3);\n            } else {\n              return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n            }\n          };\n\n          rgb2xyz = function rgb2xyz() {\n            var b, g, r, ref, x, y, z;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            r = rgb_xyz(r);\n            g = rgb_xyz(g);\n            b = rgb_xyz(b);\n            x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n            y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n            z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n            return [x, y, z];\n          };\n\n          chroma.lab = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['lab']), function () {});\n          };\n\n          _input.lab = lab2rgb;\n\n          Color.prototype.lab = function () {\n            return rgb2lab(this._rgb);\n          };\n\n          _bezier = function bezier(colors) {\n            var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n\n            colors = function () {\n              var len, o, results;\n              results = [];\n\n              for (o = 0, len = colors.length; o < len; o++) {\n                c = colors[o];\n                results.push(chroma(c));\n              }\n\n              return results;\n            }();\n\n            if (colors.length === 2) {\n              ref = function () {\n                var len, o, results;\n                results = [];\n\n                for (o = 0, len = colors.length; o < len; o++) {\n                  c = colors[o];\n                  results.push(c.lab());\n                }\n\n                return results;\n              }(), lab0 = ref[0], lab1 = ref[1];\n\n              I = function I(t) {\n                var i, lab;\n\n                lab = function () {\n                  var o, results;\n                  results = [];\n\n                  for (i = o = 0; o <= 2; i = ++o) {\n                    results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n                  }\n\n                  return results;\n                }();\n\n                return chroma.lab.apply(chroma, lab);\n              };\n            } else if (colors.length === 3) {\n              ref1 = function () {\n                var len, o, results;\n                results = [];\n\n                for (o = 0, len = colors.length; o < len; o++) {\n                  c = colors[o];\n                  results.push(c.lab());\n                }\n\n                return results;\n              }(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n\n              I = function I(t) {\n                var i, lab;\n\n                lab = function () {\n                  var o, results;\n                  results = [];\n\n                  for (i = o = 0; o <= 2; i = ++o) {\n                    results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n                  }\n\n                  return results;\n                }();\n\n                return chroma.lab.apply(chroma, lab);\n              };\n            } else if (colors.length === 4) {\n              ref2 = function () {\n                var len, o, results;\n                results = [];\n\n                for (o = 0, len = colors.length; o < len; o++) {\n                  c = colors[o];\n                  results.push(c.lab());\n                }\n\n                return results;\n              }(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n\n              I = function I(t) {\n                var i, lab;\n\n                lab = function () {\n                  var o, results;\n                  results = [];\n\n                  for (i = o = 0; o <= 2; i = ++o) {\n                    results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n                  }\n\n                  return results;\n                }();\n\n                return chroma.lab.apply(chroma, lab);\n              };\n            } else if (colors.length === 5) {\n              I0 = _bezier(colors.slice(0, 3));\n              I1 = _bezier(colors.slice(2, 5));\n\n              I = function I(t) {\n                if (t < 0.5) {\n                  return I0(t * 2);\n                } else {\n                  return I1((t - 0.5) * 2);\n                }\n              };\n            }\n\n            return I;\n          };\n\n          chroma.bezier = function (colors) {\n            var f;\n            f = _bezier(colors);\n\n            f.scale = function () {\n              return chroma.scale(f);\n            };\n\n            return f;\n          };\n          /*\n              chroma.js\n          \n              Copyright (c) 2011-2013, Gregor Aisch\n              All rights reserved.\n          \n              Redistribution and use in source and binary forms, with or without\n              modification, are permitted provided that the following conditions are met:\n          \n              * Redistributions of source code must retain the above copyright notice, this\n                list of conditions and the following disclaimer.\n          \n              * Redistributions in binary form must reproduce the above copyright notice,\n                this list of conditions and the following disclaimer in the documentation\n                and/or other materials provided with the distribution.\n          \n              * The name Gregor Aisch may not be used to endorse or promote products\n                derived from this software without specific prior written permission.\n          \n              THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n              AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n              IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n              DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n              INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n              BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n              DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n              OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n              NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n              EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n          \n              @source: https://github.com/gka/chroma.js\n           */\n\n\n          chroma.cubehelix = function (start, rotations, hue, gamma, lightness) {\n            var dh, dl, f;\n\n            if (start == null) {\n              start = 300;\n            }\n\n            if (rotations == null) {\n              rotations = -1.5;\n            }\n\n            if (hue == null) {\n              hue = 1;\n            }\n\n            if (gamma == null) {\n              gamma = 1;\n            }\n\n            if (lightness == null) {\n              lightness = [0, 1];\n            }\n\n            dl = lightness[1] - lightness[0];\n            dh = 0;\n\n            f = function f(fract) {\n              var a, amp, b, cos_a, g, h, l, r, sin_a;\n              a = TWOPI * ((start + 120) / 360 + rotations * fract);\n              l = pow(lightness[0] + dl * fract, gamma);\n              h = dh !== 0 ? hue[0] + fract * dh : hue;\n              amp = h * l * (1 - l) / 2;\n              cos_a = cos(a);\n              sin_a = sin(a);\n              r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n              g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n              b = l + amp * (+1.97294 * cos_a);\n              return chroma(clip_rgb([r * 255, g * 255, b * 255]));\n            };\n\n            f.start = function (s) {\n              if (s == null) {\n                return start;\n              }\n\n              start = s;\n              return f;\n            };\n\n            f.rotations = function (r) {\n              if (r == null) {\n                return rotations;\n              }\n\n              rotations = r;\n              return f;\n            };\n\n            f.gamma = function (g) {\n              if (g == null) {\n                return gamma;\n              }\n\n              gamma = g;\n              return f;\n            };\n\n            f.hue = function (h) {\n              if (h == null) {\n                return hue;\n              }\n\n              hue = h;\n\n              if (type(hue) === 'array') {\n                dh = hue[1] - hue[0];\n\n                if (dh === 0) {\n                  hue = hue[1];\n                }\n              } else {\n                dh = 0;\n              }\n\n              return f;\n            };\n\n            f.lightness = function (h) {\n              if (h == null) {\n                return lightness;\n              }\n\n              lightness = h;\n\n              if (type(lightness) === 'array') {\n                dl = lightness[1] - lightness[0];\n\n                if (dl === 0) {\n                  lightness = lightness[1];\n                }\n              } else {\n                dl = 0;\n              }\n\n              return f;\n            };\n\n            f.scale = function () {\n              return chroma.scale(f);\n            };\n\n            f.hue(hue);\n            return f;\n          };\n\n          chroma.random = function () {\n            var code, digits, i, o;\n            digits = '0123456789abcdef';\n            code = '#';\n\n            for (i = o = 0; o < 6; i = ++o) {\n              code += digits.charAt(floor(Math.random() * 16));\n            }\n\n            return new Color(code);\n          };\n\n          _input.rgb = function () {\n            var k, ref, results, v;\n            ref = unpack(arguments);\n            results = [];\n\n            for (k in ref) {\n              v = ref[k];\n              results.push(v);\n            }\n\n            return results;\n          };\n\n          chroma.rgb = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['rgb']), function () {});\n          };\n\n          Color.prototype.rgb = function () {\n            return this._rgb.slice(0, 3);\n          };\n\n          Color.prototype.rgba = function () {\n            return this._rgb;\n          };\n\n          _guess_formats.push({\n            p: 15,\n            test: function test(n) {\n              var a;\n              a = unpack(arguments);\n\n              if (type(a) === 'array' && a.length === 3) {\n                return 'rgb';\n              }\n\n              if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n                return 'rgb';\n              }\n            }\n          });\n\n          hex2rgb = function hex2rgb(hex) {\n            var a, b, g, r, rgb, u;\n\n            if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n              if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n              }\n\n              if (hex.length === 3) {\n                hex = hex.split(\"\");\n                hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n              }\n\n              u = parseInt(hex, 16);\n              r = u >> 16;\n              g = u >> 8 & 0xFF;\n              b = u & 0xFF;\n              return [r, g, b, 1];\n            }\n\n            if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n              if (hex.length === 9) {\n                hex = hex.substr(1);\n              }\n\n              u = parseInt(hex, 16);\n              r = u >> 24 & 0xFF;\n              g = u >> 16 & 0xFF;\n              b = u >> 8 & 0xFF;\n              a = round((u & 0xFF) / 0xFF * 100) / 100;\n              return [r, g, b, a];\n            }\n\n            if (_input.css != null && (rgb = _input.css(hex))) {\n              return rgb;\n            }\n\n            throw \"unknown color: \" + hex;\n          };\n\n          rgb2hex = function rgb2hex(channels, mode) {\n            var a, b, g, hxa, r, str, u;\n\n            if (mode == null) {\n              mode = 'rgb';\n            }\n\n            r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n            u = r << 16 | g << 8 | b;\n            str = \"000000\" + u.toString(16);\n            str = str.substr(str.length - 6);\n            hxa = '0' + round(a * 255).toString(16);\n            hxa = hxa.substr(hxa.length - 2);\n            return \"#\" + function () {\n              switch (mode.toLowerCase()) {\n                case 'rgba':\n                  return str + hxa;\n\n                case 'argb':\n                  return hxa + str;\n\n                default:\n                  return str;\n              }\n            }();\n          };\n\n          _input.hex = function (h) {\n            return hex2rgb(h);\n          };\n\n          chroma.hex = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['hex']), function () {});\n          };\n\n          Color.prototype.hex = function (mode) {\n            if (mode == null) {\n              mode = 'rgb';\n            }\n\n            return rgb2hex(this._rgb, mode);\n          };\n\n          _guess_formats.push({\n            p: 10,\n            test: function test(n) {\n              if (arguments.length === 1 && type(n) === \"string\") {\n                return 'hex';\n              }\n            }\n          });\n\n          hsl2rgb = function hsl2rgb() {\n            var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n            args = unpack(arguments);\n            h = args[0], s = args[1], l = args[2];\n\n            if (s === 0) {\n              r = g = b = l * 255;\n            } else {\n              t3 = [0, 0, 0];\n              c = [0, 0, 0];\n              t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n              t1 = 2 * l - t2;\n              h /= 360;\n              t3[0] = h + 1 / 3;\n              t3[1] = h;\n              t3[2] = h - 1 / 3;\n\n              for (i = o = 0; o <= 2; i = ++o) {\n                if (t3[i] < 0) {\n                  t3[i] += 1;\n                }\n\n                if (t3[i] > 1) {\n                  t3[i] -= 1;\n                }\n\n                if (6 * t3[i] < 1) {\n                  c[i] = t1 + (t2 - t1) * 6 * t3[i];\n                } else if (2 * t3[i] < 1) {\n                  c[i] = t2;\n                } else if (3 * t3[i] < 2) {\n                  c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6;\n                } else {\n                  c[i] = t1;\n                }\n              }\n\n              ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n            }\n\n            if (args.length > 3) {\n              return [r, g, b, args[3]];\n            } else {\n              return [r, g, b];\n            }\n          };\n\n          rgb2hsl = function rgb2hsl(r, g, b) {\n            var h, l, min, ref, s;\n\n            if (r !== void 0 && r.length >= 3) {\n              ref = r, r = ref[0], g = ref[1], b = ref[2];\n            }\n\n            r /= 255;\n            g /= 255;\n            b /= 255;\n            min = Math.min(r, g, b);\n            max = Math.max(r, g, b);\n            l = (max + min) / 2;\n\n            if (max === min) {\n              s = 0;\n              h = Number.NaN;\n            } else {\n              s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n            }\n\n            if (r === max) {\n              h = (g - b) / (max - min);\n            } else if (g === max) {\n              h = 2 + (b - r) / (max - min);\n            } else if (b === max) {\n              h = 4 + (r - g) / (max - min);\n            }\n\n            h *= 60;\n\n            if (h < 0) {\n              h += 360;\n            }\n\n            return [h, s, l];\n          };\n\n          chroma.hsl = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['hsl']), function () {});\n          };\n\n          _input.hsl = hsl2rgb;\n\n          Color.prototype.hsl = function () {\n            return rgb2hsl(this._rgb);\n          };\n\n          hsv2rgb = function hsv2rgb() {\n            var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n            args = unpack(arguments);\n            h = args[0], s = args[1], v = args[2];\n            v *= 255;\n\n            if (s === 0) {\n              r = g = b = v;\n            } else {\n              if (h === 360) {\n                h = 0;\n              }\n\n              if (h > 360) {\n                h -= 360;\n              }\n\n              if (h < 0) {\n                h += 360;\n              }\n\n              h /= 60;\n              i = floor(h);\n              f = h - i;\n              p = v * (1 - s);\n              q = v * (1 - s * f);\n              t = v * (1 - s * (1 - f));\n\n              switch (i) {\n                case 0:\n                  ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n                  break;\n\n                case 1:\n                  ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n                  break;\n\n                case 2:\n                  ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n                  break;\n\n                case 3:\n                  ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n                  break;\n\n                case 4:\n                  ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n                  break;\n\n                case 5:\n                  ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n              }\n            }\n\n            r = round(r);\n            g = round(g);\n            b = round(b);\n            return [r, g, b, args.length > 3 ? args[3] : 1];\n          };\n\n          rgb2hsv = function rgb2hsv() {\n            var b, delta, g, h, min, r, ref, s, v;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            min = Math.min(r, g, b);\n            max = Math.max(r, g, b);\n            delta = max - min;\n            v = max / 255.0;\n\n            if (max === 0) {\n              h = Number.NaN;\n              s = 0;\n            } else {\n              s = delta / max;\n\n              if (r === max) {\n                h = (g - b) / delta;\n              }\n\n              if (g === max) {\n                h = 2 + (b - r) / delta;\n              }\n\n              if (b === max) {\n                h = 4 + (r - g) / delta;\n              }\n\n              h *= 60;\n\n              if (h < 0) {\n                h += 360;\n              }\n            }\n\n            return [h, s, v];\n          };\n\n          chroma.hsv = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['hsv']), function () {});\n          };\n\n          _input.hsv = hsv2rgb;\n\n          Color.prototype.hsv = function () {\n            return rgb2hsv(this._rgb);\n          };\n\n          num2rgb = function num2rgb(num) {\n            var b, g, r;\n\n            if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n              r = num >> 16;\n              g = num >> 8 & 0xFF;\n              b = num & 0xFF;\n              return [r, g, b, 1];\n            }\n\n            console.warn(\"unknown num color: \" + num);\n            return [0, 0, 0, 1];\n          };\n\n          rgb2num = function rgb2num() {\n            var b, g, r, ref;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            return (r << 16) + (g << 8) + b;\n          };\n\n          chroma.num = function (num) {\n            return new Color(num, 'num');\n          };\n\n          Color.prototype.num = function (mode) {\n            if (mode == null) {\n              mode = 'rgb';\n            }\n\n            return rgb2num(this._rgb, mode);\n          };\n\n          _input.num = num2rgb;\n\n          _guess_formats.push({\n            p: 10,\n            test: function test(n) {\n              if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n                return 'num';\n              }\n            }\n          });\n\n          css2rgb = function css2rgb(css) {\n            var aa, ab, hsl, i, m, o, rgb, w;\n            css = css.toLowerCase();\n\n            if (chroma.colors != null && chroma.colors[css]) {\n              return hex2rgb(chroma.colors[css]);\n            }\n\n            if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n              rgb = m.slice(1, 4);\n\n              for (i = o = 0; o <= 2; i = ++o) {\n                rgb[i] = +rgb[i];\n              }\n\n              rgb[3] = 1;\n            } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n              rgb = m.slice(1, 5);\n\n              for (i = w = 0; w <= 3; i = ++w) {\n                rgb[i] = +rgb[i];\n              }\n            } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n              rgb = m.slice(1, 4);\n\n              for (i = aa = 0; aa <= 2; i = ++aa) {\n                rgb[i] = round(rgb[i] * 2.55);\n              }\n\n              rgb[3] = 1;\n            } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n              rgb = m.slice(1, 5);\n\n              for (i = ab = 0; ab <= 2; i = ++ab) {\n                rgb[i] = round(rgb[i] * 2.55);\n              }\n\n              rgb[3] = +rgb[3];\n            } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n              hsl = m.slice(1, 4);\n              hsl[1] *= 0.01;\n              hsl[2] *= 0.01;\n              rgb = hsl2rgb(hsl);\n              rgb[3] = 1;\n            } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n              hsl = m.slice(1, 4);\n              hsl[1] *= 0.01;\n              hsl[2] *= 0.01;\n              rgb = hsl2rgb(hsl);\n              rgb[3] = +m[4];\n            }\n\n            return rgb;\n          };\n\n          rgb2css = function rgb2css(rgba) {\n            var mode;\n            mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n\n            if (mode === 'rgb') {\n              return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n            } else if (mode === 'rgba') {\n              return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n            } else {}\n          };\n\n          rnd = function rnd(a) {\n            return round(a * 100) / 100;\n          };\n\n          hsl2css = function hsl2css(hsl, alpha) {\n            var mode;\n            mode = alpha < 1 ? 'hsla' : 'hsl';\n            hsl[0] = rnd(hsl[0] || 0);\n            hsl[1] = rnd(hsl[1] * 100) + '%';\n            hsl[2] = rnd(hsl[2] * 100) + '%';\n\n            if (mode === 'hsla') {\n              hsl[3] = alpha;\n            }\n\n            return mode + '(' + hsl.join(',') + ')';\n          };\n\n          _input.css = function (h) {\n            return css2rgb(h);\n          };\n\n          chroma.css = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['css']), function () {});\n          };\n\n          Color.prototype.css = function (mode) {\n            if (mode == null) {\n              mode = 'rgb';\n            }\n\n            if (mode.slice(0, 3) === 'rgb') {\n              return rgb2css(this._rgb);\n            } else if (mode.slice(0, 3) === 'hsl') {\n              return hsl2css(this.hsl(), this.alpha());\n            }\n          };\n\n          _input.named = function (name) {\n            return hex2rgb(w3cx11[name]);\n          };\n\n          _guess_formats.push({\n            p: 20,\n            test: function test(n) {\n              if (arguments.length === 1 && w3cx11[n] != null) {\n                return 'named';\n              }\n            }\n          });\n\n          Color.prototype.name = function (n) {\n            var h, k;\n\n            if (arguments.length) {\n              if (w3cx11[n]) {\n                this._rgb = hex2rgb(w3cx11[n]);\n              }\n\n              this._rgb[3] = 1;\n              this;\n            }\n\n            h = this.hex();\n\n            for (k in w3cx11) {\n              if (h === w3cx11[k]) {\n                return k;\n              }\n            }\n\n            return h;\n          };\n\n          lch2lab = function lch2lab() {\n            /*\n            Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n            These formulas were invented by David Dalrymple to obtain maximum contrast without going\n            out of gamut if the parameters are in the range 0-1.\n            \n            A saturation multiplier was added by Gregor Aisch\n             */\n            var c, h, l, ref;\n            ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n            h = h * DEG2RAD;\n            return [l, cos(h) * c, sin(h) * c];\n          };\n\n          lch2rgb = function lch2rgb() {\n            var L, a, args, b, c, g, h, l, r, ref, ref1;\n            args = unpack(arguments);\n            l = args[0], c = args[1], h = args[2];\n            ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n            ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n            return [limit(r, 0, 255), limit(g, 0, 255), limit(b, 0, 255), args.length > 3 ? args[3] : 1];\n          };\n\n          lab2lch = function lab2lch() {\n            var a, b, c, h, l, ref;\n            ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n            c = sqrt(a * a + b * b);\n            h = (atan2(b, a) * RAD2DEG + 360) % 360;\n\n            if (round(c * 10000) === 0) {\n              h = Number.NaN;\n            }\n\n            return [l, c, h];\n          };\n\n          rgb2lch = function rgb2lch() {\n            var a, b, g, l, r, ref, ref1;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n            return lab2lch(l, a, b);\n          };\n\n          chroma.lch = function () {\n            var args;\n            args = unpack(arguments);\n            return new Color(args, 'lch');\n          };\n\n          chroma.hcl = function () {\n            var args;\n            args = unpack(arguments);\n            return new Color(args, 'hcl');\n          };\n\n          _input.lch = lch2rgb;\n\n          _input.hcl = function () {\n            var c, h, l, ref;\n            ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n            return lch2rgb([l, c, h]);\n          };\n\n          Color.prototype.lch = function () {\n            return rgb2lch(this._rgb);\n          };\n\n          Color.prototype.hcl = function () {\n            return rgb2lch(this._rgb).reverse();\n          };\n\n          rgb2cmyk = function rgb2cmyk(mode) {\n            var b, c, f, g, k, m, r, ref, y;\n\n            if (mode == null) {\n              mode = 'rgb';\n            }\n\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            r = r / 255;\n            g = g / 255;\n            b = b / 255;\n            k = 1 - Math.max(r, Math.max(g, b));\n            f = k < 1 ? 1 / (1 - k) : 0;\n            c = (1 - r - k) * f;\n            m = (1 - g - k) * f;\n            y = (1 - b - k) * f;\n            return [c, m, y, k];\n          };\n\n          cmyk2rgb = function cmyk2rgb() {\n            var alpha, args, b, c, g, k, m, r, y;\n            args = unpack(arguments);\n            c = args[0], m = args[1], y = args[2], k = args[3];\n            alpha = args.length > 4 ? args[4] : 1;\n\n            if (k === 1) {\n              return [0, 0, 0, alpha];\n            }\n\n            r = c >= 1 ? 0 : round(255 * (1 - c) * (1 - k));\n            g = m >= 1 ? 0 : round(255 * (1 - m) * (1 - k));\n            b = y >= 1 ? 0 : round(255 * (1 - y) * (1 - k));\n            return [r, g, b, alpha];\n          };\n\n          _input.cmyk = function () {\n            return cmyk2rgb(unpack(arguments));\n          };\n\n          chroma.cmyk = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['cmyk']), function () {});\n          };\n\n          Color.prototype.cmyk = function () {\n            return rgb2cmyk(this._rgb);\n          };\n\n          _input.gl = function () {\n            var i, k, o, rgb, v;\n\n            rgb = function () {\n              var ref, results;\n              ref = unpack(arguments);\n              results = [];\n\n              for (k in ref) {\n                v = ref[k];\n                results.push(v);\n              }\n\n              return results;\n            }.apply(this, arguments);\n\n            for (i = o = 0; o <= 2; i = ++o) {\n              rgb[i] *= 255;\n            }\n\n            return rgb;\n          };\n\n          chroma.gl = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['gl']), function () {});\n          };\n\n          Color.prototype.gl = function () {\n            var rgb;\n            rgb = this._rgb;\n            return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n          };\n\n          rgb2luminance = function rgb2luminance(r, g, b) {\n            var ref;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            r = luminance_x(r);\n            g = luminance_x(g);\n            b = luminance_x(b);\n            return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n          };\n\n          luminance_x = function luminance_x(x) {\n            x /= 255;\n\n            if (x <= 0.03928) {\n              return x / 12.92;\n            } else {\n              return pow((x + 0.055) / 1.055, 2.4);\n            }\n          };\n\n          _interpolators = [];\n\n          interpolate = function interpolate(col1, col2, f, m) {\n            var interpol, len, o, res;\n\n            if (f == null) {\n              f = 0.5;\n            }\n\n            if (m == null) {\n              m = 'rgb';\n            }\n            /*\n            interpolates between colors\n            f = 0 --> me\n            f = 1 --> col\n             */\n\n\n            if (type(col1) !== 'object') {\n              col1 = chroma(col1);\n            }\n\n            if (type(col2) !== 'object') {\n              col2 = chroma(col2);\n            }\n\n            for (o = 0, len = _interpolators.length; o < len; o++) {\n              interpol = _interpolators[o];\n\n              if (m === interpol[0]) {\n                res = interpol[1](col1, col2, f, m);\n                break;\n              }\n            }\n\n            if (res == null) {\n              throw \"color mode \" + m + \" is not supported\";\n            }\n\n            res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n            return res;\n          };\n\n          chroma.interpolate = interpolate;\n\n          Color.prototype.interpolate = function (col2, f, m) {\n            return interpolate(this, col2, f, m);\n          };\n\n          chroma.mix = interpolate;\n          Color.prototype.mix = Color.prototype.interpolate;\n\n          interpolate_rgb = function interpolate_rgb(col1, col2, f, m) {\n            var xyz0, xyz1;\n            xyz0 = col1._rgb;\n            xyz1 = col2._rgb;\n            return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n          };\n\n          _interpolators.push(['rgb', interpolate_rgb]);\n\n          Color.prototype.luminance = function (lum, mode) {\n            var cur_lum, eps, max_iter, _test;\n\n            if (mode == null) {\n              mode = 'rgb';\n            }\n\n            if (!arguments.length) {\n              return rgb2luminance(this._rgb);\n            }\n\n            if (lum === 0) {\n              this._rgb = [0, 0, 0, this._rgb[3]];\n            } else if (lum === 1) {\n              this._rgb = [255, 255, 255, this._rgb[3]];\n            } else {\n              eps = 1e-7;\n              max_iter = 20;\n\n              _test = function test(l, h) {\n                var lm, m;\n                m = l.interpolate(h, 0.5, mode);\n                lm = m.luminance();\n\n                if (Math.abs(lum - lm) < eps || !max_iter--) {\n                  return m;\n                }\n\n                if (lm > lum) {\n                  return _test(l, m);\n                }\n\n                return _test(m, h);\n              };\n\n              cur_lum = rgb2luminance(this._rgb);\n              this._rgb = (cur_lum > lum ? _test(chroma('black'), this) : _test(this, chroma('white'))).rgba();\n            }\n\n            return this;\n          };\n\n          temperature2rgb = function temperature2rgb(kelvin) {\n            var b, g, r, temp;\n            temp = kelvin / 100;\n\n            if (temp < 66) {\n              r = 255;\n              g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n              b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n            } else {\n              r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n              g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n              b = 255;\n            }\n\n            return clip_rgb([r, g, b]);\n          };\n\n          rgb2temperature = function rgb2temperature() {\n            var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            minTemp = 1000;\n            maxTemp = 40000;\n            eps = 0.4;\n\n            while (maxTemp - minTemp > eps) {\n              temp = (maxTemp + minTemp) * 0.5;\n              rgb = temperature2rgb(temp);\n\n              if (rgb[2] / rgb[0] >= b / r) {\n                maxTemp = temp;\n              } else {\n                minTemp = temp;\n              }\n            }\n\n            return round(temp);\n          };\n\n          chroma.temperature = chroma.kelvin = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['temperature']), function () {});\n          };\n\n          _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n          Color.prototype.temperature = function () {\n            return rgb2temperature(this._rgb);\n          };\n\n          Color.prototype.kelvin = Color.prototype.temperature;\n\n          chroma.contrast = function (a, b) {\n            var l1, l2, ref, ref1;\n\n            if ((ref = type(a)) === 'string' || ref === 'number') {\n              a = new Color(a);\n            }\n\n            if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n              b = new Color(b);\n            }\n\n            l1 = a.luminance();\n            l2 = b.luminance();\n\n            if (l1 > l2) {\n              return (l1 + 0.05) / (l2 + 0.05);\n            } else {\n              return (l2 + 0.05) / (l1 + 0.05);\n            }\n          };\n\n          Color.prototype.get = function (modechan) {\n            var channel, i, me, mode, ref, src;\n            me = this;\n            ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n            src = me[mode]();\n\n            if (channel) {\n              i = mode.indexOf(channel);\n\n              if (i > -1) {\n                return src[i];\n              } else {\n                return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n              }\n            } else {\n              return src;\n            }\n          };\n\n          Color.prototype.set = function (modechan, value) {\n            var channel, i, me, mode, ref, src;\n            me = this;\n            ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n\n            if (channel) {\n              src = me[mode]();\n              i = mode.indexOf(channel);\n\n              if (i > -1) {\n                if (type(value) === 'string') {\n                  switch (value.charAt(0)) {\n                    case '+':\n                      src[i] += +value;\n                      break;\n\n                    case '-':\n                      src[i] += +value;\n                      break;\n\n                    case '*':\n                      src[i] *= +value.substr(1);\n                      break;\n\n                    case '/':\n                      src[i] /= +value.substr(1);\n                      break;\n\n                    default:\n                      src[i] = +value;\n                  }\n                } else {\n                  src[i] = value;\n                }\n              } else {\n                console.warn('unknown channel ' + channel + ' in mode ' + mode);\n              }\n            } else {\n              src = value;\n            }\n\n            me._rgb = chroma(src, mode).alpha(me.alpha())._rgb;\n            return me;\n          };\n\n          Color.prototype.darken = function (amount) {\n            var lab, me;\n\n            if (amount == null) {\n              amount = 1;\n            }\n\n            me = this;\n            lab = me.lab();\n            lab[0] -= LAB_CONSTANTS.Kn * amount;\n            return chroma.lab(lab).alpha(me.alpha());\n          };\n\n          Color.prototype.brighten = function (amount) {\n            if (amount == null) {\n              amount = 1;\n            }\n\n            return this.darken(-amount);\n          };\n\n          Color.prototype.darker = Color.prototype.darken;\n          Color.prototype.brighter = Color.prototype.brighten;\n\n          Color.prototype.saturate = function (amount) {\n            var lch, me;\n\n            if (amount == null) {\n              amount = 1;\n            }\n\n            me = this;\n            lch = me.lch();\n            lch[1] += amount * LAB_CONSTANTS.Kn;\n\n            if (lch[1] < 0) {\n              lch[1] = 0;\n            }\n\n            return chroma.lch(lch).alpha(me.alpha());\n          };\n\n          Color.prototype.desaturate = function (amount) {\n            if (amount == null) {\n              amount = 1;\n            }\n\n            return this.saturate(-amount);\n          };\n\n          Color.prototype.premultiply = function () {\n            var a, rgb;\n            rgb = this.rgb();\n            a = this.alpha();\n            return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n          };\n\n          _blend = function blend(bottom, top, mode) {\n            if (!_blend[mode]) {\n              throw 'unknown blend mode ' + mode;\n            }\n\n            return _blend[mode](bottom, top);\n          };\n\n          blend_f = function blend_f(f) {\n            return function (bottom, top) {\n              var c0, c1;\n              c0 = chroma(top).rgb();\n              c1 = chroma(bottom).rgb();\n              return chroma(f(c0, c1), 'rgb');\n            };\n          };\n\n          each = function each(f) {\n            return function (c0, c1) {\n              var i, o, out;\n              out = [];\n\n              for (i = o = 0; o <= 3; i = ++o) {\n                out[i] = f(c0[i], c1[i]);\n              }\n\n              return out;\n            };\n          };\n\n          normal = function normal(a, b) {\n            return a;\n          };\n\n          multiply = function multiply(a, b) {\n            return a * b / 255;\n          };\n\n          darken = function darken(a, b) {\n            if (a > b) {\n              return b;\n            } else {\n              return a;\n            }\n          };\n\n          lighten = function lighten(a, b) {\n            if (a > b) {\n              return a;\n            } else {\n              return b;\n            }\n          };\n\n          screen = function screen(a, b) {\n            return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n          };\n\n          overlay = function overlay(a, b) {\n            if (b < 128) {\n              return 2 * a * b / 255;\n            } else {\n              return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n            }\n          };\n\n          burn = function burn(a, b) {\n            return 255 * (1 - (1 - b / 255) / (a / 255));\n          };\n\n          dodge = function dodge(a, b) {\n            if (a === 255) {\n              return 255;\n            }\n\n            a = 255 * (b / 255) / (1 - a / 255);\n\n            if (a > 255) {\n              return 255;\n            } else {\n              return a;\n            }\n          };\n\n          _blend.normal = blend_f(each(normal));\n          _blend.multiply = blend_f(each(multiply));\n          _blend.screen = blend_f(each(screen));\n          _blend.overlay = blend_f(each(overlay));\n          _blend.darken = blend_f(each(darken));\n          _blend.lighten = blend_f(each(lighten));\n          _blend.dodge = blend_f(each(dodge));\n          _blend.burn = blend_f(each(burn));\n          chroma.blend = _blend;\n\n          chroma.analyze = function (data) {\n            var len, o, r, val;\n            r = {\n              min: Number.MAX_VALUE,\n              max: Number.MAX_VALUE * -1,\n              sum: 0,\n              values: [],\n              count: 0\n            };\n\n            for (o = 0, len = data.length; o < len; o++) {\n              val = data[o];\n\n              if (val != null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n\n                if (val < r.min) {\n                  r.min = val;\n                }\n\n                if (val > r.max) {\n                  r.max = val;\n                }\n\n                r.count += 1;\n              }\n            }\n\n            r.domain = [r.min, r.max];\n\n            r.limits = function (mode, num) {\n              return chroma.limits(r, mode, num);\n            };\n\n            return r;\n          };\n\n          chroma.scale = function (colors, positions) {\n            var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n\n            _mode = 'rgb';\n            _nacol = chroma('#ccc');\n            _spread = 0;\n            _fixed = false;\n            _domain = [0, 1];\n            _pos = [];\n            _padding = [0, 0];\n            _classes = false;\n            _colors = [];\n            _out = false;\n            _min = 0;\n            _max = 1;\n            _correctLightness = false;\n            _colorCache = {};\n\n            setColors = function setColors(colors) {\n              var c, col, o, ref, ref1, ref2, w;\n\n              if (colors == null) {\n                colors = ['#fff', '#000'];\n              }\n\n              if (colors != null && type(colors) === 'string' && ((ref = chroma.brewer) != null ? ref[colors] : void 0) != null) {\n                colors = chroma.brewer[colors];\n              }\n\n              if (type(colors) === 'array') {\n                colors = colors.slice(0);\n\n                for (c = o = 0, ref1 = colors.length - 1; 0 <= ref1 ? o <= ref1 : o >= ref1; c = 0 <= ref1 ? ++o : --o) {\n                  col = colors[c];\n\n                  if (type(col) === \"string\") {\n                    colors[c] = chroma(col);\n                  }\n                }\n\n                _pos.length = 0;\n\n                for (c = w = 0, ref2 = colors.length - 1; 0 <= ref2 ? w <= ref2 : w >= ref2; c = 0 <= ref2 ? ++w : --w) {\n                  _pos.push(c / (colors.length - 1));\n                }\n              }\n\n              resetCache();\n              return _colors = colors;\n            };\n\n            getClass = function getClass(value) {\n              var i, n;\n\n              if (_classes != null) {\n                n = _classes.length - 1;\n                i = 0;\n\n                while (i < n && value >= _classes[i]) {\n                  i++;\n                }\n\n                return i - 1;\n              }\n\n              return 0;\n            };\n\n            tmap = function tmap(t) {\n              return t;\n            };\n\n            classifyValue = function classifyValue(value) {\n              var i, maxc, minc, n, val;\n              val = value;\n\n              if (_classes.length > 2) {\n                n = _classes.length - 1;\n                i = getClass(value);\n                minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n                maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n                val = _min + (_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc) * (_max - _min);\n              }\n\n              return val;\n            };\n\n            getColor = function getColor(val, bypassMap) {\n              var c, col, i, k, o, p, ref, t;\n\n              if (bypassMap == null) {\n                bypassMap = false;\n              }\n\n              if (isNaN(val)) {\n                return _nacol;\n              }\n\n              if (!bypassMap) {\n                if (_classes && _classes.length > 2) {\n                  c = getClass(val);\n                  t = c / (_classes.length - 2);\n                  t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\n                } else if (_max !== _min) {\n                  t = (val - _min) / (_max - _min);\n                  t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\n                  t = Math.min(1, Math.max(0, t));\n                } else {\n                  t = 1;\n                }\n              } else {\n                t = val;\n              }\n\n              if (!bypassMap) {\n                t = tmap(t);\n              }\n\n              k = Math.floor(t * 10000);\n\n              if (_colorCache[k]) {\n                col = _colorCache[k];\n              } else {\n                if (type(_colors) === 'array') {\n                  for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n                    p = _pos[i];\n\n                    if (t <= p) {\n                      col = _colors[i];\n                      break;\n                    }\n\n                    if (t >= p && i === _pos.length - 1) {\n                      col = _colors[i];\n                      break;\n                    }\n\n                    if (t > p && t < _pos[i + 1]) {\n                      t = (t - p) / (_pos[i + 1] - p);\n                      col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n                      break;\n                    }\n                  }\n                } else if (type(_colors) === 'function') {\n                  col = _colors(t);\n                }\n\n                _colorCache[k] = col;\n              }\n\n              return col;\n            };\n\n            resetCache = function resetCache() {\n              return _colorCache = {};\n            };\n\n            setColors(colors);\n\n            f = function f(v) {\n              var c;\n              c = chroma(getColor(v));\n\n              if (_out && c[_out]) {\n                return c[_out]();\n              } else {\n                return c;\n              }\n            };\n\n            f.classes = function (classes) {\n              var d;\n\n              if (classes != null) {\n                if (type(classes) === 'array') {\n                  _classes = classes;\n                  _domain = [classes[0], classes[classes.length - 1]];\n                } else {\n                  d = chroma.analyze(_domain);\n\n                  if (classes === 0) {\n                    _classes = [d.min, d.max];\n                  } else {\n                    _classes = chroma.limits(d, 'e', classes);\n                  }\n                }\n\n                return f;\n              }\n\n              return _classes;\n            };\n\n            f.domain = function (domain) {\n              var c, d, k, len, o, ref, w;\n\n              if (!arguments.length) {\n                return _domain;\n              }\n\n              _min = domain[0];\n              _max = domain[domain.length - 1];\n              _pos = [];\n              k = _colors.length;\n\n              if (domain.length === k && _min !== _max) {\n                for (o = 0, len = domain.length; o < len; o++) {\n                  d = domain[o];\n\n                  _pos.push((d - _min) / (_max - _min));\n                }\n              } else {\n                for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n                  _pos.push(c / (k - 1));\n                }\n              }\n\n              _domain = [_min, _max];\n              return f;\n            };\n\n            f.mode = function (_m) {\n              if (!arguments.length) {\n                return _mode;\n              }\n\n              _mode = _m;\n              resetCache();\n              return f;\n            };\n\n            f.range = function (colors, _pos) {\n              setColors(colors, _pos);\n              return f;\n            };\n\n            f.out = function (_o) {\n              _out = _o;\n              return f;\n            };\n\n            f.spread = function (val) {\n              if (!arguments.length) {\n                return _spread;\n              }\n\n              _spread = val;\n              return f;\n            };\n\n            f.correctLightness = function (v) {\n              if (v == null) {\n                v = true;\n              }\n\n              _correctLightness = v;\n              resetCache();\n\n              if (_correctLightness) {\n                tmap = function tmap(t) {\n                  var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n                  L0 = getColor(0, true).lab()[0];\n                  L1 = getColor(1, true).lab()[0];\n                  pol = L0 > L1;\n                  L_actual = getColor(t, true).lab()[0];\n                  L_ideal = L0 + (L1 - L0) * t;\n                  L_diff = L_actual - L_ideal;\n                  t0 = 0;\n                  t1 = 1;\n                  max_iter = 20;\n\n                  while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n                    (function () {\n                      if (pol) {\n                        L_diff *= -1;\n                      }\n\n                      if (L_diff < 0) {\n                        t0 = t;\n                        t += (t1 - t) * 0.5;\n                      } else {\n                        t1 = t;\n                        t += (t0 - t) * 0.5;\n                      }\n\n                      L_actual = getColor(t, true).lab()[0];\n                      return L_diff = L_actual - L_ideal;\n                    })();\n                  }\n\n                  return t;\n                };\n              } else {\n                tmap = function tmap(t) {\n                  return t;\n                };\n              }\n\n              return f;\n            };\n\n            f.padding = function (p) {\n              if (p != null) {\n                if (type(p) === 'number') {\n                  p = [p, p];\n                }\n\n                _padding = p;\n                return f;\n              } else {\n                return _padding;\n              }\n            };\n\n            f.colors = function () {\n              var dd, dm, i, numColors, o, out, ref, results, samples, w;\n              numColors = 0;\n              out = 'hex';\n\n              if (arguments.length === 1) {\n                if (type(arguments[0]) === 'string') {\n                  out = arguments[0];\n                } else {\n                  numColors = arguments[0];\n                }\n              }\n\n              if (arguments.length === 2) {\n                numColors = arguments[0], out = arguments[1];\n              }\n\n              if (numColors) {\n                dm = _domain[0];\n                dd = _domain[1] - dm;\n                return function () {\n                  results = [];\n\n                  for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--) {\n                    results.push(o);\n                  }\n\n                  return results;\n                }.apply(this).map(function (i) {\n                  return f(dm + i / (numColors - 1) * dd)[out]();\n                });\n              }\n\n              colors = [];\n              samples = [];\n\n              if (_classes && _classes.length > 2) {\n                for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n                  samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n                }\n              } else {\n                samples = _domain;\n              }\n\n              return samples.map(function (v) {\n                return f(v)[out]();\n              });\n            };\n\n            return f;\n          };\n\n          if (chroma.scales == null) {\n            chroma.scales = {};\n          }\n\n          chroma.scales.cool = function () {\n            return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n          };\n\n          chroma.scales.hot = function () {\n            return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n          };\n\n          chroma.analyze = function (data, key, filter) {\n            var add, k, len, o, r, val, visit;\n            r = {\n              min: Number.MAX_VALUE,\n              max: Number.MAX_VALUE * -1,\n              sum: 0,\n              values: [],\n              count: 0\n            };\n\n            if (filter == null) {\n              filter = function filter() {\n                return true;\n              };\n            }\n\n            add = function add(val) {\n              if (val != null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n\n                if (val < r.min) {\n                  r.min = val;\n                }\n\n                if (val > r.max) {\n                  r.max = val;\n                }\n\n                r.count += 1;\n              }\n            };\n\n            visit = function visit(val, k) {\n              if (filter(val, k)) {\n                if (key != null && type(key) === 'function') {\n                  return add(key(val));\n                } else if (key != null && type(key) === 'string' || type(key) === 'number') {\n                  return add(val[key]);\n                } else {\n                  return add(val);\n                }\n              }\n            };\n\n            if (type(data) === 'array') {\n              for (o = 0, len = data.length; o < len; o++) {\n                val = data[o];\n                visit(val);\n              }\n            } else {\n              for (k in data) {\n                val = data[k];\n                visit(val, k);\n              }\n            }\n\n            r.domain = [r.min, r.max];\n\n            r.limits = function (mode, num) {\n              return chroma.limits(r, mode, num);\n            };\n\n            return r;\n          };\n\n          chroma.limits = function (data, mode, num) {\n            var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, value, values, w;\n\n            if (mode == null) {\n              mode = 'equal';\n            }\n\n            if (num == null) {\n              num = 7;\n            }\n\n            if (type(data) === 'array') {\n              data = chroma.analyze(data);\n            }\n\n            min = data.min;\n            max = data.max;\n            sum = data.sum;\n            values = data.values.sort(function (a, b) {\n              return a - b;\n            });\n            limits = [];\n\n            if (mode.substr(0, 1) === 'c') {\n              limits.push(min);\n              limits.push(max);\n            }\n\n            if (mode.substr(0, 1) === 'e') {\n              limits.push(min);\n\n              for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n                limits.push(min + i / num * (max - min));\n              }\n\n              limits.push(max);\n            } else if (mode.substr(0, 1) === 'l') {\n              if (min <= 0) {\n                throw 'Logarithmic scales are only possible for values > 0';\n              }\n\n              min_log = Math.LOG10E * log(min);\n              max_log = Math.LOG10E * log(max);\n              limits.push(min);\n\n              for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n                limits.push(pow(10, min_log + i / num * (max_log - min_log)));\n              }\n\n              limits.push(max);\n            } else if (mode.substr(0, 1) === 'q') {\n              limits.push(min);\n\n              for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n                p = values.length * i / num;\n                pb = floor(p);\n\n                if (pb === p) {\n                  limits.push(values[pb]);\n                } else {\n                  pr = p - pb;\n                  limits.push(values[pb] * pr + values[pb + 1] * (1 - pr));\n                }\n              }\n\n              limits.push(max);\n            } else if (mode.substr(0, 1) === 'k') {\n              /*\n              implementation based on\n              http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n              simplified for 1-d input values\n               */\n              n = values.length;\n              assignments = new Array(n);\n              clusterSizes = new Array(num);\n              repeat = true;\n              nb_iters = 0;\n              centroids = null;\n              centroids = [];\n              centroids.push(min);\n\n              for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n                centroids.push(min + i / num * (max - min));\n              }\n\n              centroids.push(max);\n\n              while (repeat) {\n                for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n                  clusterSizes[j] = 0;\n                }\n\n                for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n                  value = values[i];\n                  mindist = Number.MAX_VALUE;\n\n                  for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n                    dist = abs(centroids[j] - value);\n\n                    if (dist < mindist) {\n                      mindist = dist;\n                      best = j;\n                    }\n                  }\n\n                  clusterSizes[best]++;\n                  assignments[i] = best;\n                }\n\n                newCentroids = new Array(num);\n\n                for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n                  newCentroids[j] = null;\n                }\n\n                for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n                  cluster = assignments[i];\n\n                  if (newCentroids[cluster] === null) {\n                    newCentroids[cluster] = values[i];\n                  } else {\n                    newCentroids[cluster] += values[i];\n                  }\n                }\n\n                for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n                  newCentroids[j] *= 1 / clusterSizes[j];\n                }\n\n                repeat = false;\n\n                for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n                  if (newCentroids[j] !== centroids[i]) {\n                    repeat = true;\n                    break;\n                  }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                  repeat = false;\n                }\n              }\n\n              kClusters = {};\n\n              for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n                kClusters[j] = [];\n              }\n\n              for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n                cluster = assignments[i];\n                kClusters[cluster].push(values[i]);\n              }\n\n              tmpKMeansBreaks = [];\n\n              for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n                tmpKMeansBreaks.push(kClusters[j][0]);\n                tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n              }\n\n              tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a, b) {\n                return a - b;\n              });\n              limits.push(tmpKMeansBreaks[0]);\n\n              for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n                if (!isNaN(tmpKMeansBreaks[i])) {\n                  limits.push(tmpKMeansBreaks[i]);\n                }\n              }\n            }\n\n            return limits;\n          };\n\n          hsi2rgb = function hsi2rgb(h, s, i) {\n            /*\n            borrowed from here:\n            http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n             */\n            var args, b, g, r;\n            args = unpack(arguments);\n            h = args[0], s = args[1], i = args[2];\n            h /= 360;\n\n            if (h < 1 / 3) {\n              b = (1 - s) / 3;\n              r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n              g = 1 - (b + r);\n            } else if (h < 2 / 3) {\n              h -= 1 / 3;\n              r = (1 - s) / 3;\n              g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n              b = 1 - (r + g);\n            } else {\n              h -= 2 / 3;\n              g = (1 - s) / 3;\n              b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n              r = 1 - (g + b);\n            }\n\n            r = limit(i * r * 3);\n            g = limit(i * g * 3);\n            b = limit(i * b * 3);\n            return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n          };\n\n          rgb2hsi = function rgb2hsi() {\n            /*\n            borrowed from here:\n            http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n             */\n            var b, g, h, i, min, r, ref, s;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            TWOPI = Math.PI * 2;\n            r /= 255;\n            g /= 255;\n            b /= 255;\n            min = Math.min(r, g, b);\n            i = (r + g + b) / 3;\n            s = 1 - min / i;\n\n            if (s === 0) {\n              h = 0;\n            } else {\n              h = (r - g + (r - b)) / 2;\n              h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n              h = Math.acos(h);\n\n              if (b > g) {\n                h = TWOPI - h;\n              }\n\n              h /= TWOPI;\n            }\n\n            return [h * 360, s, i];\n          };\n\n          chroma.hsi = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['hsi']), function () {});\n          };\n\n          _input.hsi = hsi2rgb;\n\n          Color.prototype.hsi = function () {\n            return rgb2hsi(this._rgb);\n          };\n\n          interpolate_hsx = function interpolate_hsx(col1, col2, f, m) {\n            var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n\n            if (m === 'hsl') {\n              xyz0 = col1.hsl();\n              xyz1 = col2.hsl();\n            } else if (m === 'hsv') {\n              xyz0 = col1.hsv();\n              xyz1 = col2.hsv();\n            } else if (m === 'hsi') {\n              xyz0 = col1.hsi();\n              xyz1 = col2.hsi();\n            } else if (m === 'lch' || m === 'hcl') {\n              m = 'hcl';\n              xyz0 = col1.hcl();\n              xyz1 = col2.hcl();\n            }\n\n            if (m.substr(0, 1) === 'h') {\n              hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n              hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n            }\n\n            if (!isNaN(hue0) && !isNaN(hue1)) {\n              if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1 - (hue0 + 360);\n              } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1 + 360 - hue0;\n              } else {\n                dh = hue1 - hue0;\n              }\n\n              hue = hue0 + f * dh;\n            } else if (!isNaN(hue0)) {\n              hue = hue0;\n\n              if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n                sat = sat0;\n              }\n            } else if (!isNaN(hue1)) {\n              hue = hue1;\n\n              if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n                sat = sat1;\n              }\n            } else {\n              hue = Number.NaN;\n            }\n\n            if (sat == null) {\n              sat = sat0 + f * (sat1 - sat0);\n            }\n\n            lbv = lbv0 + f * (lbv1 - lbv0);\n            return res = chroma[m](hue, sat, lbv);\n          };\n\n          _interpolators = _interpolators.concat(function () {\n            var len, o, ref, results;\n            ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch'];\n            results = [];\n\n            for (o = 0, len = ref.length; o < len; o++) {\n              m = ref[o];\n              results.push([m, interpolate_hsx]);\n            }\n\n            return results;\n          }());\n\n          interpolate_num = function interpolate_num(col1, col2, f, m) {\n            var n1, n2;\n            n1 = col1.num();\n            n2 = col2.num();\n            return chroma.num(n1 + (n2 - n1) * f, 'num');\n          };\n\n          _interpolators.push(['num', interpolate_num]);\n\n          interpolate_lab = function interpolate_lab(col1, col2, f, m) {\n            var res, xyz0, xyz1;\n            xyz0 = col1.lab();\n            xyz1 = col2.lab();\n            return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n          };\n\n          _interpolators.push(['lab', interpolate_lab]);\n        }).call(this);\n        /* WEBPACK VAR INJECTION */\n      }).call(exports, __webpack_require__(26)(module));\n      /***/\n    },\n    /* 26 */\n\n    /***/\n    function (module, exports) {\n      module.exports = function (module) {\n        if (!module.webpackPolyfill) {\n          module.deprecate = function () {};\n\n          module.paths = []; // module.parent = undefined by default\n\n          module.children = [];\n          module.webpackPolyfill = 1;\n        }\n\n        return module;\n      };\n      /***/\n\n    }\n    /******/\n    ])\n  );\n});\n\n;","// 20.2.2.9 Math.cbrt(x)\nvar $export = require('./_export');\nvar sign = require('./_math-sign');\n\n$export($export.S, 'Math', {\n  cbrt: function cbrt(x) {\n    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);\n  }\n});\n","// 20.2.2.28 Math.sign(x)\nmodule.exports = Math.sign || function sign(x) {\n  // eslint-disable-next-line no-self-compare\n  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n};\n"],"sourceRoot":""}