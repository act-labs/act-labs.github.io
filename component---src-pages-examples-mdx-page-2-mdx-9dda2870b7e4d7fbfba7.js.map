{"version":3,"sources":["webpack:///./src/pages/examples/mdx-page-2.mdx","webpack:///./src/actb/seo.js"],"names":["MDXContent","props","_this","_React$Component","call","this","layout","render","_this$props","components","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_6__","name","actb_src_actb_seo__WEBPACK_IMPORTED_MODULE_2__","title","antd_lib_button__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_7__","to","React","Component","_frontmatter","SEO","_ref","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","detailsQuery","data","split","map","v","trim","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","project","content","property","author","concat","join","_public_static_d_304502870_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","propTypes","PropTypes","string","array","oneOfType","arrayOf","isRequired"],"mappings":"yRAQqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,OAAS,KAFGJ,8BAKnBK,OAAA,WAAS,IAAAC,EAIHH,KAAKJ,MAFPQ,EAFKD,EAELC,WAFKC,IAAAF,EAAA,gBAKP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,UAAUN,WAAYA,GACxCE,EAAAC,EAAAC,cAAAG,EAAA,GAAKC,MAAM,aACXN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,GAA9B,mBACAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,4BAAsEE,EAAAC,EAAAC,cAAAK,EAAAN,EAAA,KAAQD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,yBAAT,qBAA9E,iEAdkCC,IAAMC,WAmBjCC,EAAe,kHCtB5B,SAASC,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,SAAUZ,EAASQ,EAATR,MAChD,OACEa,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CACEC,MAAOC,EACP1B,OAAQ,SAAA2B,GAKN,MAJuB,iBAAZL,IACTA,EAAWA,EAASM,MAAM,KAAKC,IAAI,SAAAC,GAAC,OAAIA,EAAEC,UAE5CZ,EAAcA,GAAeQ,EAAKK,KAAKC,aAAad,YAElDI,EAAAlB,EAAAC,cAAC4B,EAAA7B,EAAD,CACE8B,eAAgB,CACdf,QAEFV,MAAOA,EACP0B,cAAa,QAAUT,EAAKK,KAAKC,aAAaI,QAC9ChB,KAAM,CACJ,CACEb,KAAM,cACN8B,QAASnB,GAEX,CACEoB,SAAU,WACVD,QAAS5B,GAEX,CACE6B,SAAU,iBACVD,QAASnB,GAEX,CACEoB,SAAU,UACVD,QAAS,WAEX,CACE9B,KAAM,eACN8B,QAAS,WAEX,CACE9B,KAAM,kBACN8B,QAASX,EAAKK,KAAKC,aAAaO,QAElC,CACEhC,KAAM,gBACN8B,QAAS5B,GAEX,CACEF,KAAM,sBACN8B,QAASnB,IAGVsB,OACCnB,EACI,CACEd,KAAM,WACN8B,QAAShB,EAASoB,KAAK,OAEzB,IAELD,OAAOpB,MAxDlBM,KAAAgB,IAgEJ1B,EAAI2B,aAAe,CACjBxB,KAAM,KACNC,KAAM,GACNC,SAAU,MAGZL,EAAI4B,UAAY,CACd1B,YAAa2B,IAAUC,OACvB3B,KAAM0B,IAAUC,OAChB1B,KAAMyB,IAAUE,MAChB1B,SAAUwB,IAAUG,UAAU,CAC5BH,IAAUC,OACVD,IAAUI,QAAQJ,IAAUC,UAE9BrC,MAAOoC,IAAUC,OAAOI,YAGXlC,MAEf,IAAMS,EAAY","file":"component---src-pages-examples-mdx-page-2-mdx-9dda2870b7e4d7fbfba7.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport { Link } from 'gatsby';\nimport { Seo } from \"actb\";\nimport { Button } from \"antd\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" components={components}>\n      <Seo title=\"Page two\" />\n      <MDXTag name=\"h1\" components={components}>{`Second MDX page`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`This is again a MDX page.`}<Button><Link to=\"/examples/hello-antd/\">{`Go to Hello Antd`}</Link></Button>{`Here an Ant Design button with Gatsby Link was inserted.`}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    ","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        if (typeof keywords == \"string\"){\r\n          keywords = keywords.split(\",\").map(v => v.trim());\r\n        }\r\n        description = description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.project}`}\r\n            meta={[\r\n              {\r\n                name: 'description',\r\n                content: description,\r\n              },\r\n              {\r\n                property: 'og:title',\r\n                content: title,\r\n              },\r\n              {\r\n                property: 'og:description',\r\n                content: description,\r\n              },\r\n              {\r\n                property: 'og:type',\r\n                content: 'website',\r\n              },\r\n              {\r\n                name: 'twitter:card',\r\n                content: 'summary',\r\n              },\r\n              {\r\n                name: 'twitter:creator',\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: 'twitter:title',\r\n                content: title,\r\n              },\r\n              {\r\n                name: 'twitter:description',\r\n                content: description,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords\r\n                  ? {\r\n                      name: 'keywords',\r\n                      content: keywords.join(', '),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: 'en',\r\n  meta: [],\r\n  keywords: null,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.arrayOf(PropTypes.string)\r\n  ]),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        project\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}