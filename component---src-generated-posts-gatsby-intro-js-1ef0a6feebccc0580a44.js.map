{"version":3,"sources":["webpack:///./src/content/posts/gatsby-intro.md","webpack:///./src/generated/posts/gatsby-intro.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/link.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/logo.js","webpack:///./src/components/footer.js","webpack:///./src/components/navigation-bar.js","webpack:///./src/components/layout/index.js","webpack:///./src/components/code.js","webpack:///./src/components/mdx.js","webpack:///./src/components/page-layout.js"],"names":["MDXContent","props","_this","_React$Component","call","this","layout","render","_this$props","components","objectWithoutPropertiesLoose_default","react_default","a","createElement","dist","name","parentName","href","title","graphql_mdx_posts","gatsby_files_sourcing","React","Component","SnippetsLayout","page_layout","gatsby_intro_MDXContent","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","Link","_ref","to","activeClassName","other","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","test","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","Object","assign","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","shape","SEO","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_5__","detailsQuery","split","map","v","trim","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","project","content","property","author","concat","join","_public_static_d_304502870_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","array","oneOfType","arrayOf","Logo","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","logo","childImageSharp","style","float","_public_static_d_2369744027_json__WEBPACK_IMPORTED_MODULE_1__","Footer","ActFooter","social","copyright","icons","_ref2","link","icon","components_link","key","icon_default","type","fontSize","marginLeft","color","textAlign","SiteFooter","gatsby_browser_entry","_ref3","_ref3$config","config","_2743462859","Header","NavigationBar","nav","className","menu_default","theme","mode","defaultSelectedKeys","filter","selected","text","lineHeight","i","slug","Item","SiteNavigationBar","_1250442554","Content","Sider","Panel","padding","PageLayout","_Object$assign","defaultLayoutOptions","footer","fullHeight","layoutStyle","height","layout_default","seo","SideMenuPanel","menu","background","minHeight","width","SyntaxHighlighter","registerLanguage","js","bash","markdown","yaml","defaults","code","length","light","language","MDX","actb_src_components_layout__WEBPACK_IMPORTED_MODULE_2__","DefaultSiteLayout","pageContext","context","frontmatter","react__WEBPACK_IMPORTED_MODULE_3___default","paddingTop","actb_src_components_mdx__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-generated-posts-gatsby-intro-js-1ef0a6feebccc0580a44.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport FilesSourcingSnippet from 'content/snippets/main/gatsby-files-sourcing';\nimport GraphQLAllPostsSnippet from 'content/snippets/main/graphql-mdx-posts';\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" components={components}>\n      <MDXTag name=\"p\" components={components}>{`Gatsby comes with detailed `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://www.gatsbyjs.org/docs/\",\n          \"title\": \"Gatsby, extensive online documentation\"\n        }}>{`documentation`}</MDXTag>{` and large and constantly growing plugin system. For new users, the amount of information could be overwhelming. In order to help to navigate through large Gatsby ecosystem, this post gives very high level overview of main Gatsby concepts and ideas. `}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Core: GraphQL, Webpack, and programmatic page generation.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Growing in popularity, static site generators produce highly optimized content with small response time and better perceived performance. One of the most popular static site generators, Gatsby is implemented on top of node.js and React, which helps it to tap directly into modern web development stack and makes it attractive for React developers. The page generation process in Gatsby mainly revolves around in-memory nodes, representing resources necessary for page construction. In Gatsby, this graph (often referred as `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`GraphQL`}</MDXTag>{`) serves as a convenient integration layer, allowing declarative access to various resources. In other words, essentially, Gatsby provides in-memory database layer, backed by GraphQL declarative query syntax.`}</MDXTag>\n      <GraphQLAllPostsSnippet />\n      <MDXTag name=\"p\" components={components}>{`Thanks to GraphQL expressive power, very complex websites could be created literally without any programming. Nonetheless, Gatsby is actually a comprehensive API: developers may hook into the build process and easily extend the system importing (`}<MDXTag name=\"em\" components={components} parentName=\"p\">{`sourcing`}</MDXTag>{` in the Gatsby lingo) and transforming various resources. Unlike many popular website builders, Gatsby doesn't provide any proprietary content management tools, instead it concentrates on tools to build powerful integration/processing pipelines. Owing to plugins, Gatsby is able to source all common file types, information from popular databases, and even content from other CMS systems.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Typically, HTML pages are constructed from various files: CSS, Javascript/Typescript/React, HTML, JSON, markdown etc. To process files of various types, Gatsby relies on standard, production ready tools: Babel and Webpack. Babel comes with a comprehensive API and a set of plugins to transform various files to standard cross-browser Javascript. Webpack splits multiple Javascript files into optimal chunks to optimize the load time of successive page requests. React server side rendering is used to generate HTML, but original Javascript is served to clients as well and is bound (hydrated) to HTML in a browser, helping to provide a rich interactive user experience.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`To create a page programmatically, the `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`createPage`}</MDXTag>{` action can be invoked inside a `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`createPages`}</MDXTag>{` callback defined in gatsby-node.js. When creating pages, a React component are provided, as well as a page context - a JSON object used directly or as a parameter for page GraphQL query. Generated JS files and page data are saved in the topmost `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`public`}</MDXTag>{` project directory. All the required data and javascript chunks (created by webpack) are listed in a data.json file, used in a browser to intelligently load pages. For example, if pages have the same component but different page data, only the absent data is requested for the second and later page requests. In Gatsby v2 there is no concept of the shared layout, but shared layouts could be trivially implemented using the Gatsby browser API (could be useful for complex page transition effects). The same applies to other shared code (context providers, a redux store, APIs, etc).`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Gatsby plugins.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Thanks to an open architecture, a lot of Gatsby functionality comes in the form of plugins. Plugins are invoked in `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`gatsby-config.js`}</MDXTag>{` and thus configure/build a website pipeline. Many of them are casually borrowed from one project to another, and could be seen practically in all Gatsby starters (projects, helping to jump start Gatsby development). For example, consider plugins listed in `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/act-labs/gatsby-starter-act-blog\"\n        }}>{`an ACT starter`}</MDXTag>{` (to reduce clutter, common plugins were moved to separate node.js module in `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`gatsby`}</MDXTag>{` directory).`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`There are a few distinct plugin types in Gatsby. First of all, there are sourcing plugins, which import external data and create corresponding nodes in GraphQL. There are many plugins sourcing all types of data (databases, CMS, etc), but the most commonly used sourcing plugin is `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`gatsby-source-filesystem`}</MDXTag>{`, which reads all the files from specified directories. `}</MDXTag>\n      <FilesSourcingSnippet />\n      <MDXTag name=\"p\" components={components}>{`The second type of plugins transforms existing nodes, often creating children. One of the commonly used transformation plugins is `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`gatsby-plugin-sharp`}</MDXTag>{` (with accompanying `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`gatsby-transformer-sharp`}</MDXTag>{`), which generates optimized images, so that for every screen resolution the image of the best quality/size could be loaded. A Gatsby `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`Image`}</MDXTag>{` component also supports placeholders, helping to achieve blazing fast initial image loading. Other often used transformation plugins are `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`gatsby-transformer-yaml`}</MDXTag>{` to parse `}{`*`}{`.yaml files, and `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`gatsby-mdx`}</MDXTag>{` to parse MDX. In project Javascript files, various resources could be imported as usually. Under the hood, Gatsby uses webpack to support file import. Many file types, e.g., JSON and CSS, are supported by Gatsby out of the box, others, like LESS, require minor modifications to a webpack configuration, which could be accomplished using the Gatsby API or installing a proper plugin.`}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {\n  \"title\": \"Gatsby as a convenient integration layer\",\n  \"keywords\": \"Gatsby, node.js, React, static site generator, ACT Blog\",\n  \"order\": 0\n};\n    ","import React from \"react\";\r\nimport ContentComponent from 'D:/projects/flash/packages/gatsby-starter-act-blog/src/content/posts/gatsby-intro.md';\r\nimport OneColumnLayout from 'components/page-layout';\r\n\r\nexport default function SnippetsLayout(props) {\r\n    return <OneColumnLayout {...props}><ContentComponent {...props}/></OneColumnLayout>\r\n}\r\n\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\r\nimport { Link as GatsbyLink } from \"gatsby\"\r\n\r\nconst Link = ({ children, to, activeClassName, href, ...other }) => {\r\n  if (href){\r\n    to = href;\r\n  }\r\n\r\n  const internal = /^\\/(?!\\/)/.test(to)\r\n\r\n  if (internal) {\r\n    return (\r\n      <GatsbyLink to={to} activeClassName={activeClassName} {...other}>\r\n        {children}\r\n      </GatsbyLink>\r\n    )\r\n  }\r\n  return (\r\n    <a href={to} {...other}>\r\n      {children}\r\n    </a>\r\n  )\r\n}\r\n\r\nexport default Link","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        if (typeof keywords == \"string\"){\r\n          keywords = keywords.split(\",\").map(v => v.trim());\r\n        }\r\n        description = description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.project}`}\r\n            meta={[\r\n              {\r\n                name: 'description',\r\n                content: description,\r\n              },\r\n              {\r\n                property: 'og:title',\r\n                content: title,\r\n              },\r\n              {\r\n                property: 'og:description',\r\n                content: description,\r\n              },\r\n              {\r\n                property: 'og:type',\r\n                content: 'website',\r\n              },\r\n              {\r\n                name: 'twitter:card',\r\n                content: 'summary',\r\n              },\r\n              {\r\n                name: 'twitter:creator',\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: 'twitter:title',\r\n                content: title,\r\n              },\r\n              {\r\n                name: 'twitter:description',\r\n                content: description,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords\r\n                  ? {\r\n                      name: 'keywords',\r\n                      content: keywords.join(', '),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: 'en',\r\n  meta: [],\r\n  keywords: null,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.arrayOf(PropTypes.string)\r\n  ]),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        project\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\n\r\n\r\nexport default function Logo(){\r\n        return (<StaticQuery\r\n            query={graphql`\r\n                query {\r\n                    logo: file(relativePath: { eq: \"logo.png\" }) {\r\n                    childImageSharp {\r\n                        fixed(height: 60) {\r\n                        ...GatsbyImageSharpFixed\r\n                        }\r\n                    }\r\n                    }\r\n                }\r\n            `}\r\n            render={data => <Img fixed={data.logo.childImageSharp.fixed} style={{float:\"left\"}}/>}\r\n        />)\r\n    }\r\n\r\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport {Link} from \"actb\";\r\nimport {\r\n    Layout, Icon\r\n  } from 'antd';\r\n  \r\n  const {\r\n    Footer\r\n  } = Layout;\r\n\r\n\r\nexport function ActFooter({social, copyright}){\r\n    const icons = social.map(({link, icon})=><Link key={icon} to={link}><Icon type={icon}  style={{ fontSize: '24px', marginLeft:10, color: 'rgba(0, 0, 0, 0.65)'}} /></Link>)\r\n    return (\r\n        <Footer style={{ textAlign: 'center' }}>\r\n            <div>{copyright}<div style={{float:\"right\"}}>{icons}</div></div>\r\n        </Footer>\r\n    )\r\n}\r\n\r\nexport default function SiteFooter(props){\r\n  if (props.social){\r\n      return <ActFooter {...props}/>\r\n  }\r\n  return <StaticQuery\r\n  query={graphql`\r\n    query {\r\n      config: configYaml(fields:{slug: {eq:\"/config/main/\"}}){\r\n          copyright\r\n          social {\r\n              icon\r\n              link\r\n          }        \r\n      }\r\n    }\r\n  `}\r\n  render={({config:{social, copyright}}) => <ActFooter social={social} copyright={copyright} {...props} />}\r\n/>\r\n}  ","import React from \"react\";\r\nimport {Logo, Link} from \"actb\"\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport {\r\n  Layout, Menu\r\n} from 'antd';\r\n  \r\nconst {\r\n  Header\r\n} = Layout;\r\n\r\n\r\nexport function NavigationBar({nav}){  \r\n    return (\r\n      <Header className=\"navigation-bar\">\r\n        <Logo/>\r\n        <Menu\r\n            theme=\"dark\"\r\n            mode=\"horizontal\"\r\n            defaultSelectedKeys={ nav.filter(v=>v.selected).map(v=>v.text) }\r\n            style={{ lineHeight: '64px' }}\r\n        >\r\n          {\r\n            nav.map(({slug, text}, i)=>\r\n              <Menu.Item key={i}>\r\n                <Link to={slug || \"/\"} >{text}</Link>\r\n              </Menu.Item>\r\n            )\r\n          }  \r\n        </Menu>\r\n      </Header>\r\n    )\r\n} \r\n\r\nexport default function SiteNavigationBar(props){\r\n    if (props.nav){\r\n        return <NavigationBar {...props}/>\r\n    }\r\n    return <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        config: configYaml(fields:{slug: {eq:\"/config/main/\"}}){\r\n            nav {\r\n                text\r\n                slug\r\n            }        \r\n        }\r\n      }\r\n    `}\r\n    render={({config:{nav}}) => <NavigationBar nav={nav} {...props} />}\r\n  />\r\n}  ","import React from \"react\"\r\n\r\nimport {Seo, Footer, NavigationBar} from \"actb\";\r\n\r\nimport {\r\n    Layout\r\n  } from 'antd';\r\n  \r\nimport \"./layout.less\"\r\n\r\nconst {\r\n  Content, Sider\r\n} = Layout;\r\n\r\n\r\nexport function Panel({style, children}){\r\n    return (\r\n        <Content style={Object.assign({ padding: '5px 24px' }, style)}>\r\n            {children}                     \r\n        </Content>\r\n    )\r\n}\r\n\r\nexport function SideMenuPanel({children, menu}){\r\n    return (\r\n      <Layout style={{ padding: '1em 0', background: '#fff', minHeight: 1000 }}>\r\n        <Sider width={200}>\r\n          {menu}\r\n        </Sider>\r\n        <Panel>{children}</Panel>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\nexport default function PageLayout({children, title, description, keywords, style, layout}){\r\n  const {footer, fullHeight} = Object.assign({}, defaultLayoutOptions, layout)\r\n  const layoutStyle = Object.assign({}, fullHeight?{height:\"100%\"}:null, style)\r\n  return (\r\n    <Layout className=\"main-page-layout\" style={layoutStyle}>\r\n      <Seo title={title} keywords={keywords} description={description} />\r\n      <NavigationBar/>\r\n        {children}\r\n      {footer? <Footer/>:null}\r\n    </Layout>\r\n  );  \r\n}\r\n\r\nconst defaultLayoutOptions = {\r\n  footer: true\r\n}\r\n\r\nPageLayout.Panel = Panel;\r\nPageLayout.SideMenuPanel = SideMenuPanel; \r\n","import React from \"react\";\r\nimport { Light as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport bash from 'react-syntax-highlighter/dist/esm/languages/hljs/bash';\r\nimport markdown from 'react-syntax-highlighter/dist/esm/languages/hljs/markdown';\r\nimport yaml from 'react-syntax-highlighter/dist/esm/languages/hljs/yaml';\r\n\r\nimport { github as style } from 'react-syntax-highlighter/dist/styles/hljs';\r\n\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\nSyntaxHighlighter.registerLanguage('sh', bash);\r\nSyntaxHighlighter.registerLanguage('markdown', markdown);\r\nSyntaxHighlighter.registerLanguage('yaml', yaml);\r\n\r\nexport {SyntaxHighlighter};\r\n\r\nexport default function Code(props) {\r\n    let lang = 'bash'\r\n    if (props.className){\r\n      const name = props.className.split(\"-\");\r\n      if (name.length > 1){\r\n        lang = name[1]\r\n      }\r\n    }\r\n  \r\n    return <SyntaxHighlighter language={lang} style={style}>{props.children}</SyntaxHighlighter>\r\n}","import React from \"react\";\r\nimport { MDXProvider } from '@mdx-js/tag';\r\n\r\nimport {Code, Link} from \"actb\";\r\n\r\nexport const components = {\r\n    code: Code,\r\n    a: Link\r\n  };\r\n  \r\nconst defaults = {components}; \r\n\r\nexport default function MDX(props){\r\n    const {components, children} = Object.assign({}, defaults, props);\r\n\r\n    return (\r\n    <MDXProvider components={components}>\r\n        {children}\r\n    </MDXProvider>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {Mdx, Layout} from \"actb\";\r\nimport './layout/simple.css'\r\n\r\nconst Panel = Layout.Panel;\r\n\r\nexport default function DefaultSiteLayout({children, pageContext}){\r\n  const context = Object.assign({frontmatter:{}}, pageContext)\r\n  const props = Object.assign({}, {layout:context.layout}, context.frontmatter);\r\n  return (\r\n    <Layout {...props}>\r\n      <Panel style={{ paddingTop: \"1em\"}}>\r\n        {props.title? <h1>{props.title}</h1>:null}\r\n        <Mdx>{children}</Mdx>\r\n      </Panel>\r\n    </Layout>\r\n  )\r\n}\r\n\r\n\r\n"],"sourceRoot":""}