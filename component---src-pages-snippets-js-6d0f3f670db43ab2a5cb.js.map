{"version":3,"sources":["webpack:///./src/content/fragments/snippets.md","webpack:///./src/pages/snippets.js","webpack:///./src/actb/seo.js","webpack:///./src/actb/logo.js","webpack:///./src/actb/footer.js","webpack:///./src/actb/navigation-bar.js","webpack:///./src/actb/layout/index.js","webpack:///./src/actb/code.js","webpack:///./src/actb/mdx.js","webpack:///./src/components/distinct-colors.js","webpack:///D:/projects/flash/node_modules/distinct-colors/dist/distinct-colors.js","webpack:///D:/projects/flash/node_modules/core-js/modules/es6.math.cbrt.js","webpack:///D:/projects/flash/node_modules/core-js/modules/_math-sign.js"],"names":["MDXContent","props","_this","_React$Component","call","this","layout","render","_this$props","components","objectWithoutPropertiesLoose_default","react_default","a","createElement","dist","name","row_default","type","justify","align","col_default","xs","sm","image_matrix","React","Component","Panel","collections","distinct_colors","distinctBackgroundColors","keyword","slug","title","description","ItemAvatar","_ref","backgroundColor","avatar_default","size","style","SnippetsPage","_ref2","context","pageContext","Object","assign","frontmatter","className","mdx","snippets_MDXContent","list_default","itemLayout","dataSource","renderItem","item","Item","Meta","avatar","actb_link","to","SEO","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","detailsQuery","data","split","map","v","trim","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","project","content","property","author","concat","join","_public_static_d_304502870_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","propTypes","PropTypes","string","array","oneOfType","arrayOf","isRequired","Logo","gatsby__WEBPACK_IMPORTED_MODULE_3__","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","logo","childImageSharp","float","_public_static_d_2369744027_json__WEBPACK_IMPORTED_MODULE_1__","Footer","ActFooter","social","copyright","icons","link","icon","key","icon_default","fontSize","marginLeft","color","textAlign","SiteFooter","gatsby_browser_entry","_ref3","_ref3$config","config","_2743462859","Header","NavigationBar","nav","menu_default","theme","mode","defaultSelectedKeys","filter","selected","text","lineHeight","i","SiteNavigationBar","_1250442554","Content","Sider","children","other","padding","PageLayout","_Object$assign","defaultLayoutOptions","footer","fullHeight","layoutStyle","height","pageClassName","layout_default","seo","SideMenuPanel","menu","background","minHeight","width","SyntaxHighlighter","registerLanguage","js","bash","markdown","yaml","dockerfile","defaults","code","length","light","language","MDX","distinct_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","distinct_colors__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","items","unique","reduce","count","palette","distinctColors","css","factory","modules","installedModules","moduleId","exports","module","id","loaded","m","c","p","_interopRequireDefault","obj","__esModule","default","defineProperty","value","_utils2","_moutLangDeepClone2","_moutLangDeepEquals2","_moutArrayUnique2","_chromaJs2","hueMin","hueMax","chromaMin","chromaMax","lightMin","lightMax","quality","samples","checkColor","lab","options","hcl","rgb","compLab","opts","arguments","undefined","mergeObj","colors","zonesProto","rangeDivider","Math","cbrt","hStep","cStep","lStep","h","l","push","b","toString","Error","sliceSize","floor","step","zones","minDist","Number","MAX_SAFE_INTEGER","nearest","j","sqrt","pow","abs","lastColors","zone","Ls","As","Bs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","sample","err","lAvg","sum","aAvg","bAvg","colorList","unsortedColors","slice","sortedColors","shift","lastColor","maxDist","MIN_SAFE_INTEGER","splice","sortByContrast","o1","o2","hasOwnProperty","clone","forOwn","kindOf","isPlainObject","deepClone","val","instanceClone","source","out","cloneObject","arr","cloneArray","mixIn","flags","r","multiline","global","ignoreCase","RegExp","Date","UNDEF","_rKind","_toString","prototype","exec","constructor","copyProp","target","objects","hasOwn","forIn","fn","thisObj","prop","_hasDontEnumBug","_dontEnums","checkDontEnum","ctor","isProto","is","isObject","isArray","objEquals","arrEquals","deepEquals","callback","bothObjects","bothArrays","x","y","isKind","kind","Array","every","checkProperties","makeCompare","makeIterator","result","identity","deepMatches","src","containsMatch","pattern","patternLength","matchArray","matchObject","len","isEqual","compare","results","__WEBPACK_AMD_DEFINE_RESULT__","Color","DEG2RAD","LAB_CONSTANTS","PI","PITHIRD","RAD2DEG","TWOPI","_guess_formats","_guess_formats_sorted","_input","_interpolators","atan2","_bezier","_blend","blend_f","burn","chroma","clip_rgb","cmyk2rgb","cos","css2rgb","darken","dodge","each","hex2rgb","hsi2rgb","hsl2css","hsl2rgb","hsv2rgb","interpolate","interpolate_hsx","interpolate_lab","interpolate_num","interpolate_rgb","lab2lch","lab2rgb","lab_xyz","lch2lab","lch2rgb","lighten","limit","log","luminance_x","max","multiply","num2rgb","overlay","rgb2cmyk","rgb2css","rgb2hex","rgb2hsi","rgb2hsl","rgb2hsv","rgb2lab","rgb2lch","rgb2luminance","rgb2num","rgb2temperature","rgb2xyz","rgb_xyz","rnd","round","screen","sin","temperature2rgb","unpack","w3cx11","xyz_lab","xyz_rgb","classToType","o","ref","toLowerCase","strType","min","args","func","child","apply","version","arg","chk","len1","me","w","_rgb","sort","test","console","warn","alpha","brewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","indigo","gold","hotpink","firebrick","indianred","yellow","mistyrose","darkolivegreen","olive","darkseagreen","pink","tomato","lightcoral","orangered","navajowhite","lime","palegreen","darkslategrey","greenyellow","burlywood","seashell","mediumspringgreen","fuchsia","papayawhip","blanchedalmond","chartreuse","dimgray","black","peachpuff","springgreen","aquamarine","white","orange","lightsalmon","darkslategray","brown","ivory","dodgerblue","peru","lawngreen","chocolate","crimson","forestgreen","darkgrey","lightseagreen","cyan","mintcream","silver","antiquewhite","mediumorchid","skyblue","gray","darkturquoise","goldenrod","darkgreen","floralwhite","darkviolet","darkgray","moccasin","saddlebrown","grey","darkslateblue","lightskyblue","lightpink","mediumvioletred","slategrey","red","deeppink","limegreen","darkmagenta","palegoldenrod","plum","turquoise","lightgrey","lightgoldenrodyellow","darkgoldenrod","lavender","maroon","yellowgreen","sandybrown","thistle","violet","navy","magenta","dimgrey","tan","rosybrown","olivedrab","blue","lightblue","ghostwhite","honeydew","cornflowerblue","slateblue","linen","darkblue","powderblue","seagreen","darkkhaki","snow","sienna","mediumblue","royalblue","lightcyan","green","mediumpurple","midnightblue","cornsilk","paleturquoise","bisque","slategray","darkcyan","khaki","wheat","teal","darkorchid","deepskyblue","salmon","darkred","steelblue","palevioletred","lightslategray","aliceblue","lightslategrey","lightgreen","orchid","gainsboro","mediumseagreen","lightgray","mediumturquoise","lemonchiffon","cadetblue","lightyellow","lavenderblush","coral","purple","aqua","whitesmoke","mediumslateblue","darkorange","mediumaquamarine","darksalmon","beige","blueviolet","azure","lightsteelblue","oldlace","rebeccapurple","g","z","isNaN","Yn","Xn","Zn","t","t1","t2","t0","Kn","t3","ref1","I","I0","I1","lab0","lab1","lab2","lab3","ref2","bezier","f","scale","cubehelix","start","rotations","hue","gamma","lightness","dh","dl","fract","amp","cos_a","sin_a","s","random","charAt","k","rgba","hex","u","match","substr","parseInt","channels","hxa","str","NaN","hsl","q","ref3","ref4","ref5","delta","hsv","num","aa","ab","named","L","lch","reverse","cmyk","gl","col1","col2","interpol","res","mix","xyz0","xyz1","luminance","lum","cur_lum","max_iter","_test","lm","kelvin","temp","maxTemp","minTemp","temperature","K","contrast","l1","l2","get","modechan","channel","indexOf","set","amount","brighten","darker","brighter","saturate","desaturate","premultiply","bottom","top","normal","c0","c1","blend","analyze","MAX_VALUE","values","domain","limits","positions","_classes","_colorCache","_colors","_correctLightness","_domain","_max","_min","_mode","_nacol","_out","_padding","_pos","_spread","getClass","getColor","resetCache","setColors","tmap","col","maxc","minc","bypassMap","classes","d","_m","range","_o","spread","correctLightness","L0","L1","L_actual","L_diff","L_ideal","pol","dd","dm","numColors","scales","cool","hot","add","visit","ac","ad","ae","af","ag","ah","ai","aj","ak","al","am","assignments","best","centroids","cluster","clusterSizes","kClusters","max_log","min_log","mindist","nb_iters","newCentroids","pb","pr","ref10","ref11","ref12","ref13","ref14","ref6","ref7","ref8","ref9","repeat","tmpKMeansBreaks","LOG10E","acos","hsi","hue0","hue1","lbv0","lbv1","sat","sat0","sat1","n1","n2","webpackPolyfill","deprecate","paths","$export","sign","S"],"mappings":"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","file":"component---src-pages-snippets-js-6d0f3f670db43ab2a5cb.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport { ImageMatrix } from \"actl\";\nimport { Row, Col } from 'antd';\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" components={components}>\n      <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n        <Col xs={24} sm={12}>\n          <ImageMatrix />\n        </Col>\n        <Col xs={24} sm={12}>\n          <MDXTag name=\"h3\" components={components}>{`Short extracts`}</MDXTag>\n          <MDXTag name=\"p\" components={components}>{`For fun and profit. An assortment of useful extracts, grouped by topics, with hierarchical menu for quick navigation.`}</MDXTag>\n        </Col>\n      </Row>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    ","import React from 'react'\r\n\r\nimport {Layout, Mdx, Link  } from \"actb\"\r\nimport {List, Avatar} from \"antd\"\r\nimport {distinctColors} from 'actl'\r\n\r\nimport SnippetsIntro from \"fragments/snippets.md\"\r\n\r\nconst Panel = Layout.Panel\r\nconst collections = distinctColors.distinctBackgroundColors([\r\n    {\r\n        keyword: \"Gatsby\",\r\n        slug:\"/snippets/main/static-intro/\",\r\n        title: \"Gatsby and ACT blog starter\",\r\n        description: `Gatsby is a static site generator, coming with a big ecosystem of tools to build efficient, SEO optimized sites. \r\n        This blog itself is built using Gatsby and ACT Gatsby starter. Snippets contain some useful extracts of configuration, GraphQL and information about files and directory structure`\r\n    },\r\n    {\r\n      keyword: \"AWS\",\r\n      slug:\"/snippets/serverless/aws-intro/\",\r\n      title: \"AWS and Serverless\",\r\n      description: `AWS is a popular cloud provider. Built around idea of serverless architecture, it may help significantly reduce the cost of infrastructure ownership. This collection of snippets \r\n      should help to accomplish common simple tasks, when working with service`\r\n    },      \r\n])\r\n\r\nfunction ItemAvatar({keyword, backgroundColor}){\r\n    return <Avatar size=\"large\" style={{backgroundColor}}>{ keyword }</Avatar>\r\n}\r\n\r\nexport default function SnippetsPage({pageContext:context}){\r\n  const props = Object.assign({}, {layout:context.layout, \r\n        title: \"Snippets. Short code extracts. Useful short side notes \"\r\n    }, context.frontmatter)\r\n\r\n  return (\r\n    <Layout {...props}>\r\n      <Panel className=\"snippets-page__content\">\r\n        <Mdx>\r\n            <SnippetsIntro/>\r\n        </Mdx>\r\n        <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={collections}\r\n            renderItem={item => (\r\n            <List.Item>\r\n                <List.Item.Meta\r\n                avatar={<ItemAvatar {...item}/>}\r\n                title={<Link to={item.slug}>{item.title}</Link>}\r\n                description={ item.description }\r\n                />\r\n            </List.Item>\r\n            )}\r\n        />             \r\n      </Panel>\r\n    </Layout>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        if (typeof keywords == \"string\"){\r\n          keywords = keywords.split(\",\").map(v => v.trim());\r\n        }\r\n        description = description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.project}`}\r\n            meta={[\r\n              {\r\n                name: 'description',\r\n                content: description,\r\n              },\r\n              {\r\n                property: 'og:title',\r\n                content: title,\r\n              },\r\n              {\r\n                property: 'og:description',\r\n                content: description,\r\n              },\r\n              {\r\n                property: 'og:type',\r\n                content: 'website',\r\n              },\r\n              {\r\n                name: 'twitter:card',\r\n                content: 'summary',\r\n              },\r\n              {\r\n                name: 'twitter:creator',\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: 'twitter:title',\r\n                content: title,\r\n              },\r\n              {\r\n                name: 'twitter:description',\r\n                content: description,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords\r\n                  ? {\r\n                      name: 'keywords',\r\n                      content: keywords.join(', '),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: 'en',\r\n  meta: [],\r\n  keywords: null,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.arrayOf(PropTypes.string)\r\n  ]),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        project\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\n\r\n\r\nexport default function Logo(){\r\n        return (<StaticQuery\r\n            query={graphql`\r\n                query {\r\n                    logo: file(relativePath: { eq: \"logo.png\" }) {\r\n                    childImageSharp {\r\n                        fixed(height: 60) {\r\n                        ...GatsbyImageSharpFixed\r\n                        }\r\n                    }\r\n                    }\r\n                }\r\n            `}\r\n            render={data => <Img fixed={data.logo.childImageSharp.fixed} style={{float:\"left\"}}/>}\r\n        />)\r\n    }\r\n\r\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport {Link} from \"actb\";\r\nimport {\r\n    Layout, Icon\r\n  } from 'antd';\r\n  \r\n  const {\r\n    Footer\r\n  } = Layout;\r\n\r\n\r\nexport function ActFooter({social, copyright}){\r\n    const icons = social.map(({link, icon})=><Link key={icon} to={link}><Icon type={icon}  style={{ fontSize: '24px', marginLeft:10, color: 'rgba(0, 0, 0, 0.65)'}} /></Link>)\r\n    return (\r\n        <Footer style={{ textAlign: 'center' }}>\r\n            <div>{copyright}<div style={{float:\"right\"}}>{icons}</div></div>\r\n        </Footer>\r\n    )\r\n}\r\n\r\nexport default function SiteFooter(props){\r\n  if (props.social){\r\n      return <ActFooter {...props}/>\r\n  }\r\n  return <StaticQuery\r\n  query={graphql`\r\n    query {\r\n      config: configYaml(fields:{slug: {eq:\"/config/main/\"}}){\r\n          copyright\r\n          social {\r\n              icon\r\n              link\r\n          }        \r\n      }\r\n    }\r\n  `}\r\n  render={({config:{social, copyright}}) => <ActFooter social={social} copyright={copyright} {...props} />}\r\n/>\r\n}  ","import React from \"react\";\r\nimport {Logo, Link} from \"actb\"\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport {\r\n  Layout, Menu\r\n} from 'antd';\r\n  \r\nconst {\r\n  Header\r\n} = Layout;\r\n\r\n\r\nexport function NavigationBar({nav}){  \r\n    return (\r\n      <Header className=\"navigation-bar\">\r\n        <Link to=\"/\" ><Logo/></Link>\r\n        <Menu\r\n            theme=\"dark\"\r\n            mode=\"horizontal\"\r\n            defaultSelectedKeys={ nav.filter(v=>v.selected).map(v=>v.text) }\r\n            style={{ lineHeight: '64px' }}\r\n        >\r\n          {\r\n            nav.map(({slug, text}, i)=>\r\n              <Menu.Item key={i}>\r\n                <Link to={slug || \"/\"} >{text}</Link>\r\n              </Menu.Item>\r\n            )\r\n          }  \r\n        </Menu>\r\n      </Header>\r\n    )\r\n} \r\n\r\nexport default function SiteNavigationBar(props){\r\n    if (props.nav){\r\n        return <NavigationBar {...props}/>\r\n    }\r\n    return <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        config: configYaml(fields:{slug: {eq:\"/config/main/\"}}){\r\n            nav {\r\n                text\r\n                slug\r\n            }        \r\n        }\r\n      }\r\n    `}\r\n    render={({config:{nav}}) => <NavigationBar nav={nav} {...props} />}\r\n  />\r\n}  ","import React from \"react\"\r\n\r\nimport {Seo, Footer, NavigationBar} from \"actb\";\r\n\r\nimport {\r\n    Layout\r\n  } from 'antd';\r\n  \r\nimport \"./layout.less\"\r\n\r\nconst {\r\n  Content, Sider\r\n} = Layout;\r\n\r\n\r\nexport function Panel(props){\r\n  const {style, children, ...other} = props\r\n    return (\r\n        <Content style={Object.assign({ padding: '5px 24px' }, style)} {...other}>\r\n            {children}                     \r\n        </Content>\r\n    )\r\n}\r\n\r\nexport function SideMenuPanel({children, menu}){\r\n    return (\r\n      <Layout style={{ padding: '1em 0', background: '#fff', minHeight: 1000 }}>\r\n        <Sider width={200}>\r\n          {menu}\r\n        </Sider>\r\n        <Panel>{children}</Panel>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\nexport default function PageLayout(props){\r\n  const {children, className, \r\n    title, description, keywords, style, layout} = props\r\n  const {footer, fullHeight} = Object.assign({}, defaultLayoutOptions, layout)\r\n  const layoutStyle = Object.assign({}, fullHeight?{height:\"100%\"}:null, style)\r\n  const pageClassName = (className? className + \" \" : \"\") + \"page-layout\"\r\n  return (\r\n    <Layout className={pageClassName} style={layoutStyle}>\r\n      <Seo title={title} keywords={keywords} description={description} />\r\n      <NavigationBar/>\r\n        {children}\r\n      {footer? <Footer/>:null}\r\n    </Layout>\r\n  );  \r\n}\r\n\r\nconst defaultLayoutOptions = {\r\n  footer: true\r\n}\r\n\r\nPageLayout.Panel = Panel;\r\nPageLayout.SideMenuPanel = SideMenuPanel; \r\n","import React from \"react\";\r\nimport { Light as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport bash from 'react-syntax-highlighter/dist/esm/languages/hljs/bash';\r\nimport markdown from 'react-syntax-highlighter/dist/esm/languages/hljs/markdown';\r\nimport yaml from 'react-syntax-highlighter/dist/esm/languages/hljs/yaml';\r\nimport dockerfile from 'react-syntax-highlighter/dist/esm/languages/hljs/dockerfile';\r\n\r\nimport { github as style } from 'react-syntax-highlighter/dist/styles/hljs';\r\n\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\nSyntaxHighlighter.registerLanguage('sh', bash);\r\nSyntaxHighlighter.registerLanguage('markdown', markdown);\r\nSyntaxHighlighter.registerLanguage('yaml', yaml);\r\nSyntaxHighlighter.registerLanguage('dockerfile', dockerfile);\r\n\r\nexport {SyntaxHighlighter};\r\n\r\nexport default function Code(props) {\r\n    let lang = 'bash'\r\n    if (props.className){\r\n      const name = props.className.split(\"-\");\r\n      if (name.length > 1){\r\n        lang = name[1]\r\n      }\r\n    }\r\n  \r\n    return <SyntaxHighlighter language={lang} style={style}>{props.children}</SyntaxHighlighter>\r\n}","import React from \"react\";\r\nimport { MDXProvider } from '@mdx-js/tag';\r\n\r\nimport {Code, Link} from \"actb\";\r\n\r\nexport const components = {\r\n    code: Code,\r\n    a: Link\r\n  };\r\n  \r\nconst defaults = {components}; \r\n\r\nexport default function MDX(props){\r\n    const {components, children} = Object.assign({}, defaults, props);\r\n\r\n    return (\r\n    <MDXProvider components={components}>\r\n        {children}\r\n    </MDXProvider>\r\n    )\r\n}\r\n","import distinctColors from 'distinct-colors'\r\n\r\nexport function distinctBackgroundColors(items){\r\n    const unique = items.reduce((context, v)=>{\r\n        if (v.keyword in context.keywords){\r\n        return context\r\n        }\r\n        context.keywords[v.keyword] = context.count++\r\n        return context\r\n    }, {count:0, keywords:{}})\r\n    const palette = distinctColors({count: unique.count > 5 ? unique.count:5})\r\n\r\n    return items.map(v=>{\r\n        v[\"backgroundColor\"] = palette[unique.keywords[v.keyword]].css()\r\n        return v\r\n    })\r\n}\r\n\r\nexport default {\r\n    distinctBackgroundColors\r\n}","require(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.number.max-safe-integer\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.math.cbrt\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.number.min-safe-integer\");\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(factory);else if (typeof exports === 'object') exports[\"DistinctColors\"] = factory();else root[\"DistinctColors\"] = factory();\n})(this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId])\n          /******/\n          return installedModules[moduleId].exports;\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n        var module = installedModules[moduleId] = {\n          /******/\n          exports: {},\n\n          /******/\n          id: moduleId,\n\n          /******/\n          loaded: false\n          /******/\n\n        };\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.loaded = true;\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n      __webpack_require__.p = \"\";\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(0);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          'default': obj\n        };\n      }\n\n      var _utils = __webpack_require__(1);\n\n      var _utils2 = _interopRequireDefault(_utils);\n\n      var _moutLangDeepClone = __webpack_require__(2);\n\n      var _moutLangDeepClone2 = _interopRequireDefault(_moutLangDeepClone);\n\n      var _moutLangDeepEquals = __webpack_require__(10);\n\n      var _moutLangDeepEquals2 = _interopRequireDefault(_moutLangDeepEquals);\n\n      var _moutArrayUnique = __webpack_require__(23);\n\n      var _moutArrayUnique2 = _interopRequireDefault(_moutArrayUnique);\n\n      var _chromaJs = __webpack_require__(25);\n\n      var _chromaJs2 = _interopRequireDefault(_chromaJs);\n\n      var defaults = {\n        count: 5,\n        hueMin: 0,\n        hueMax: 360,\n        chromaMin: 0,\n        chromaMax: 100,\n        lightMin: 0,\n        lightMax: 100,\n        quality: 50,\n        samples: 800\n      };\n\n      var checkColor = function checkColor(lab, options) {\n        var color = _chromaJs2['default'].lab(lab);\n\n        var hcl = color.hcl();\n        var rgb = color.rgb();\n\n        var compLab = _chromaJs2['default'].rgb(rgb).lab();\n\n        var labTolerance = 2;\n        return hcl[0] >= options.hueMin && hcl[0] <= options.hueMax && hcl[1] >= options.chromaMin && hcl[1] <= options.chromaMax && hcl[2] >= options.lightMin && hcl[2] <= options.lightMax && compLab[0] >= lab[0] - labTolerance && compLab[0] <= lab[0] + labTolerance && compLab[1] >= lab[1] - labTolerance && compLab[1] <= lab[1] + labTolerance && compLab[2] >= lab[2] - labTolerance && compLab[2] <= lab[2] + labTolerance;\n      };\n\n      var sortByContrast = function sortByContrast(colorList) {\n        var unsortedColors = colorList.slice(0);\n        var sortedColors = [unsortedColors.shift()];\n\n        while (unsortedColors.length > 0) {\n          var lastColor = sortedColors[sortedColors.length - 1];\n          var nearest = 0;\n          var maxDist = Number.MIN_SAFE_INTEGER;\n\n          for (var i = 0; i < unsortedColors.length; i++) {\n            var dist = Math.sqrt(Math.pow(Math.abs(lastColor[0] - unsortedColors[i][0]), 2) + Math.pow(Math.abs(lastColor[1] - unsortedColors[i][1]), 2) + Math.pow(Math.abs(lastColor[2] - unsortedColors[i][2]), 2));\n\n            if (dist > maxDist) {\n              maxDist = dist;\n              nearest = i;\n            }\n          }\n\n          sortedColors.push(unsortedColors.splice(nearest, 1)[0]);\n        }\n\n        return sortedColors;\n      };\n\n      var distinctColors = function distinctColors() {\n        var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var options = _utils2['default'].mergeObj(defaults, opts);\n\n        if (options.count <= 0) {\n          return [];\n        }\n\n        if (options.samples < options.count * 5) {\n          options.samples = options.count * 5;\n        }\n\n        var colors = [];\n        var zonesProto = [];\n        var samples = [];\n        var rangeDivider = Math.cbrt(options.samples);\n        rangeDivider *= 1.001;\n        var hStep = (options.hueMax - options.hueMin) / rangeDivider;\n        var cStep = (options.chromaMax - options.chromaMin) / rangeDivider;\n        var lStep = (options.lightMax - options.lightMin) / rangeDivider;\n\n        for (var h = options.hueMin; h <= options.hueMax; h += hStep) {\n          for (var c = options.chromaMin; c <= options.chromaMax; c += cStep) {\n            for (var l = options.lightMin; l <= options.lightMax; l += lStep) {\n              var color = _chromaJs2['default'].hcl(h, c, l).lab();\n\n              if (checkColor(color, options)) {\n                samples.push(color);\n              }\n            }\n          }\n        }\n\n        samples = (0, _moutArrayUnique2['default'])(samples, function (a, b) {\n          return a.toString() === b.toString();\n        });\n\n        if (samples.length < options.count) {\n          throw new Error('Not enough samples to generate palette, increase sample count.');\n        }\n\n        var sliceSize = Math.floor(samples.length / options.count);\n\n        for (var i = 0; i < samples.length; i += sliceSize) {\n          colors.push(samples[i]);\n          zonesProto.push([]);\n\n          if (colors.length >= options.count) {\n            break;\n          }\n        }\n\n        for (var step = 1; step <= options.quality; step++) {\n          var zones = (0, _moutLangDeepClone2['default'])(zonesProto); // Find closest color for each sample\n\n          for (var i = 0; i < samples.length; i++) {\n            var minDist = Number.MAX_SAFE_INTEGER;\n            var nearest = 0;\n\n            for (var j = 0; j < colors.length; j++) {\n              var dist = Math.sqrt(Math.pow(Math.abs(samples[i][0] - colors[j][0]), 2) + Math.pow(Math.abs(samples[i][1] - colors[j][1]), 2) + Math.pow(Math.abs(samples[i][2] - colors[j][2]), 2));\n\n              if (dist < minDist) {\n                minDist = dist;\n                nearest = j;\n              }\n            }\n\n            zones[nearest].push(samples[i]);\n          }\n\n          var lastColors = (0, _moutLangDeepClone2['default'])(colors);\n\n          for (var i = 0; i < zones.length; i++) {\n            var zone = zones[i];\n            var size = zone.length;\n            var Ls = [];\n            var As = [];\n            var Bs = [];\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = zone[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var sample = _step.value;\n                Ls.push(sample[0]);\n                As.push(sample[1]);\n                Bs.push(sample[2]);\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator['return']) {\n                  _iterator['return']();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n\n            var lAvg = _utils2['default'].sum(Ls) / size;\n            var aAvg = _utils2['default'].sum(As) / size;\n            var bAvg = _utils2['default'].sum(Bs) / size;\n            colors[i] = [lAvg, aAvg, bAvg];\n          }\n\n          if ((0, _moutLangDeepEquals2['default'])(lastColors, colors)) {\n            break;\n          }\n        }\n\n        colors = sortByContrast(colors);\n        return colors.map(function (lab) {\n          return _chromaJs2['default'].lab(lab);\n        });\n      };\n\n      exports['default'] = distinctColors;\n      module.exports = exports['default'];\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var utils = {\n        mergeObj: function mergeObj(o1, o2) {\n          if (o1 == null || o2 == null) {\n            return o1;\n          }\n\n          for (var key in o2) {\n            if (o2.hasOwnProperty(key)) {\n              o1[key] = o2[key];\n            }\n          }\n\n          return o1;\n        },\n        sum: function sum(array) {\n          return array.reduce(function (a, b) {\n            return a + b;\n          });\n        }\n      };\n      exports[\"default\"] = utils;\n      module.exports = exports[\"default\"];\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var clone = __webpack_require__(3);\n\n      var forOwn = __webpack_require__(7);\n\n      var kindOf = __webpack_require__(4);\n\n      var isPlainObject = __webpack_require__(5);\n      /**\n       * Recursively clone native types.\n       */\n\n\n      function deepClone(val, instanceClone) {\n        switch (kindOf(val)) {\n          case 'Object':\n            return cloneObject(val, instanceClone);\n\n          case 'Array':\n            return cloneArray(val, instanceClone);\n\n          default:\n            return clone(val);\n        }\n      }\n\n      function cloneObject(source, instanceClone) {\n        if (isPlainObject(source)) {\n          var out = {};\n          forOwn(source, function (val, key) {\n            this[key] = deepClone(val, instanceClone);\n          }, out);\n          return out;\n        } else if (instanceClone) {\n          return instanceClone(source);\n        } else {\n          return source;\n        }\n      }\n\n      function cloneArray(arr, instanceClone) {\n        var out = [],\n            i = -1,\n            n = arr.length,\n            val;\n\n        while (++i < n) {\n          out[i] = deepClone(arr[i], instanceClone);\n        }\n\n        return out;\n      }\n\n      module.exports = deepClone;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var kindOf = __webpack_require__(4);\n\n      var isPlainObject = __webpack_require__(5);\n\n      var mixIn = __webpack_require__(6);\n      /**\n       * Clone native types.\n       */\n\n\n      function clone(val) {\n        switch (kindOf(val)) {\n          case 'Object':\n            return cloneObject(val);\n\n          case 'Array':\n            return cloneArray(val);\n\n          case 'RegExp':\n            return cloneRegExp(val);\n\n          case 'Date':\n            return cloneDate(val);\n\n          default:\n            return val;\n        }\n      }\n\n      function cloneObject(source) {\n        if (isPlainObject(source)) {\n          return mixIn({}, source);\n        } else {\n          return source;\n        }\n      }\n\n      function cloneRegExp(r) {\n        var flags = '';\n        flags += r.multiline ? 'm' : '';\n        flags += r.global ? 'g' : '';\n        flags += r.ignoreCase ? 'i' : '';\n        return new RegExp(r.source, flags);\n      }\n\n      function cloneDate(date) {\n        return new Date(+date);\n      }\n\n      function cloneArray(arr) {\n        return arr.slice();\n      }\n\n      module.exports = clone;\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports) {\n      var _rKind = /^\\[object (.*)\\]$/,\n          _toString = Object.prototype.toString,\n          UNDEF;\n      /**\n       * Gets the \"kind\" of value. (e.g. \"String\", \"Number\", etc)\n       */\n\n      function kindOf(val) {\n        if (val === null) {\n          return 'Null';\n        } else if (val === UNDEF) {\n          return 'Undefined';\n        } else {\n          return _rKind.exec(_toString.call(val))[1];\n        }\n      }\n\n      module.exports = kindOf;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Checks if the value is created by the `Object` constructor.\n       */\n      function isPlainObject(value) {\n        return !!value && typeof value === 'object' && value.constructor === Object;\n      }\n\n      module.exports = isPlainObject;\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var forOwn = __webpack_require__(7);\n      /**\n      * Combine properties from all the objects into first one.\n      * - This method affects target object in place, if you want to create a new Object pass an empty object as first param.\n      * @param {object} target    Target Object\n      * @param {...object} objects    Objects to be combined (0...n objects).\n      * @return {object} Target Object.\n      */\n\n\n      function mixIn(target, objects) {\n        var i = 0,\n            n = arguments.length,\n            obj;\n\n        while (++i < n) {\n          obj = arguments[i];\n\n          if (obj != null) {\n            forOwn(obj, copyProp, target);\n          }\n        }\n\n        return target;\n      }\n\n      function copyProp(val, key) {\n        this[key] = val;\n      }\n\n      module.exports = mixIn;\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var hasOwn = __webpack_require__(8);\n\n      var forIn = __webpack_require__(9);\n      /**\n       * Similar to Array/forEach but works over object properties and fixes Don't\n       * Enum bug on IE.\n       * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n       */\n\n\n      function forOwn(obj, fn, thisObj) {\n        forIn(obj, function (val, key) {\n          if (hasOwn(obj, key)) {\n            return fn.call(thisObj, obj[key], key, obj);\n          }\n        });\n      }\n\n      module.exports = forOwn;\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Safer Object.hasOwnProperty\n       */\n      function hasOwn(obj, prop) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n      }\n\n      module.exports = hasOwn;\n      /***/\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var hasOwn = __webpack_require__(8);\n\n      var _hasDontEnumBug, _dontEnums;\n\n      function checkDontEnum() {\n        _dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];\n        _hasDontEnumBug = true;\n\n        for (var key in {\n          'toString': null\n        }) {\n          _hasDontEnumBug = false;\n        }\n      }\n      /**\n       * Similar to Array/forEach but works over object properties and fixes Don't\n       * Enum bug on IE.\n       * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n       */\n\n\n      function forIn(obj, fn, thisObj) {\n        var key,\n            i = 0; // no need to check if argument is a real object that way we can use\n        // it for arrays, functions, date, etc.\n        //post-pone check till needed\n\n        if (_hasDontEnumBug == null) checkDontEnum();\n\n        for (key in obj) {\n          if (exec(fn, obj, key, thisObj) === false) {\n            break;\n          }\n        }\n\n        if (_hasDontEnumBug) {\n          var ctor = obj.constructor,\n              isProto = !!ctor && obj === ctor.prototype;\n\n          while (key = _dontEnums[i++]) {\n            // For constructor, if it is a prototype object the constructor\n            // is always non-enumerable unless defined otherwise (and\n            // enumerated above).  For non-prototype objects, it will have\n            // to be defined on this object, since it cannot be defined on\n            // any prototype objects.\n            //\n            // For other [[DontEnum]] properties, check if the value is\n            // different than Object prototype value.\n            if ((key !== 'constructor' || !isProto && hasOwn(obj, key)) && obj[key] !== Object.prototype[key]) {\n              if (exec(fn, obj, key, thisObj) === false) {\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      function exec(fn, obj, key, thisObj) {\n        return fn.call(thisObj, obj[key], key, obj);\n      }\n\n      module.exports = forIn;\n      /***/\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var is = __webpack_require__(11);\n\n      var isObject = __webpack_require__(12);\n\n      var isArray = __webpack_require__(14);\n\n      var objEquals = __webpack_require__(15);\n\n      var arrEquals = __webpack_require__(21);\n      /**\n       * Recursively checks for same properties and values.\n       */\n\n\n      function deepEquals(a, b, callback) {\n        callback = callback || is;\n        var bothObjects = isObject(a) && isObject(b);\n        var bothArrays = !bothObjects && isArray(a) && isArray(b);\n\n        if (!bothObjects && !bothArrays) {\n          return callback(a, b);\n        }\n\n        function compare(a, b) {\n          return deepEquals(a, b, callback);\n        }\n\n        var method = bothObjects ? objEquals : arrEquals;\n        return method(a, b, compare);\n      }\n\n      module.exports = deepEquals;\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Check if both arguments are egal.\n       */\n      function is(x, y) {\n        // implementation borrowed from harmony:egal spec\n        if (x === y) {\n          // 0 === -0, but they are not identical\n          return x !== 0 || 1 / x === 1 / y;\n        } // NaN !== NaN, but they are identical.\n        // NaNs are the only non-reflexive value, i.e., if x !== x,\n        // then x is a NaN.\n        // isNaN is broken: it converts its argument to number, so\n        // isNaN(\"foo\") => true\n\n\n        return x !== x && y !== y;\n      }\n\n      module.exports = is;\n      /***/\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var isKind = __webpack_require__(13);\n      /**\n       */\n\n\n      function isObject(val) {\n        return isKind(val, 'Object');\n      }\n\n      module.exports = isObject;\n      /***/\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var kindOf = __webpack_require__(4);\n      /**\n       * Check if value is from a specific \"kind\".\n       */\n\n\n      function isKind(val, kind) {\n        return kindOf(val) === kind;\n      }\n\n      module.exports = isKind;\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var isKind = __webpack_require__(13);\n      /**\n       */\n\n\n      var isArray = Array.isArray || function (val) {\n        return isKind(val, 'Array');\n      };\n\n      module.exports = isArray;\n      /***/\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var hasOwn = __webpack_require__(8);\n\n      var every = __webpack_require__(16);\n\n      var isObject = __webpack_require__(12);\n\n      var is = __webpack_require__(11); // Makes a function to compare the object values from the specified compare\n      // operation callback.\n\n\n      function makeCompare(callback) {\n        return function (value, key) {\n          return hasOwn(this, key) && callback(value, this[key]);\n        };\n      }\n\n      function checkProperties(value, key) {\n        return hasOwn(this, key);\n      }\n      /**\n       * Checks if two objects have the same keys and values.\n       */\n\n\n      function equals(a, b, callback) {\n        callback = callback || is;\n\n        if (!isObject(a) || !isObject(b)) {\n          return callback(a, b);\n        }\n\n        return every(a, makeCompare(callback), b) && every(b, checkProperties, a);\n      }\n\n      module.exports = equals;\n      /***/\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var forOwn = __webpack_require__(7);\n\n      var makeIterator = __webpack_require__(17);\n      /**\n       * Object every\n       */\n\n\n      function every(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result = true;\n        forOwn(obj, function (val, key) {\n          // we consider any falsy values as \"false\" on purpose so shorthand\n          // syntax can be used to check property existence\n          if (!callback(val, key, obj)) {\n            result = false;\n            return false; // break\n          }\n        });\n        return result;\n      }\n\n      module.exports = every;\n      /***/\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var identity = __webpack_require__(18);\n\n      var prop = __webpack_require__(19);\n\n      var deepMatches = __webpack_require__(20);\n      /**\n       * Converts argument into a valid iterator.\n       * Used internally on most array/object/collection methods that receives a\n       * callback/iterator providing a shortcut syntax.\n       */\n\n\n      function makeIterator(src, thisObj) {\n        if (src == null) {\n          return identity;\n        }\n\n        switch (typeof src) {\n          case 'function':\n            // function is the first to improve perf (most common case)\n            // also avoid using `Function#call` if not needed, which boosts\n            // perf a lot in some cases\n            return typeof thisObj !== 'undefined' ? function (val, i, arr) {\n              return src.call(thisObj, val, i, arr);\n            } : src;\n\n          case 'object':\n            return function (val) {\n              return deepMatches(val, src);\n            };\n\n          case 'string':\n          case 'number':\n            return prop(src);\n        }\n      }\n\n      module.exports = makeIterator;\n      /***/\n    },\n    /* 18 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Returns the first argument provided to it.\n       */\n      function identity(val) {\n        return val;\n      }\n\n      module.exports = identity;\n      /***/\n    },\n    /* 19 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Returns a function that gets a property of the passed object\n       */\n      function prop(name) {\n        return function (obj) {\n          return obj[name];\n        };\n      }\n\n      module.exports = prop;\n      /***/\n    },\n    /* 20 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var forOwn = __webpack_require__(7);\n\n      var isArray = __webpack_require__(14);\n\n      function containsMatch(array, pattern) {\n        var i = -1,\n            length = array.length;\n\n        while (++i < length) {\n          if (deepMatches(array[i], pattern)) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      function matchArray(target, pattern) {\n        var i = -1,\n            patternLength = pattern.length;\n\n        while (++i < patternLength) {\n          if (!containsMatch(target, pattern[i])) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      function matchObject(target, pattern) {\n        var result = true;\n        forOwn(pattern, function (val, key) {\n          if (!deepMatches(target[key], val)) {\n            // Return false to break out of forOwn early\n            return result = false;\n          }\n        });\n        return result;\n      }\n      /**\n       * Recursively check if the objects match.\n       */\n\n\n      function deepMatches(target, pattern) {\n        if (target && typeof target === 'object') {\n          if (isArray(target) && isArray(pattern)) {\n            return matchArray(target, pattern);\n          } else {\n            return matchObject(target, pattern);\n          }\n        } else {\n          return target === pattern;\n        }\n      }\n\n      module.exports = deepMatches;\n      /***/\n    },\n    /* 21 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var is = __webpack_require__(11);\n\n      var isArray = __webpack_require__(14);\n\n      var every = __webpack_require__(22);\n      /**\n       * Compares if both arrays have the same elements\n       */\n\n\n      function equals(a, b, callback) {\n        callback = callback || is;\n\n        if (!isArray(a) || !isArray(b)) {\n          return callback(a, b);\n        }\n\n        if (a.length !== b.length) {\n          return false;\n        }\n\n        return every(a, makeCompare(callback), b);\n      }\n\n      function makeCompare(callback) {\n        return function (value, i) {\n          return i in this && callback(value, this[i]);\n        };\n      }\n\n      module.exports = equals;\n      /***/\n    },\n    /* 22 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var makeIterator = __webpack_require__(17);\n      /**\n       * Array every\n       */\n\n\n      function every(arr, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result = true;\n\n        if (arr == null) {\n          return result;\n        }\n\n        var i = -1,\n            len = arr.length;\n\n        while (++i < len) {\n          // we iterate over sparse items since there is no way to make it\n          // work properly on IE 7-8. see #64\n          if (!callback(arr[i], i, arr)) {\n            result = false;\n            break;\n          }\n        }\n\n        return result;\n      }\n\n      module.exports = every;\n      /***/\n    },\n    /* 23 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var filter = __webpack_require__(24);\n      /**\n       * @return {array} Array of unique items\n       */\n\n\n      function unique(arr, compare) {\n        compare = compare || isEqual;\n        return filter(arr, function (item, i, arr) {\n          var n = arr.length;\n\n          while (++i < n) {\n            if (compare(item, arr[i])) {\n              return false;\n            }\n          }\n\n          return true;\n        });\n      }\n\n      function isEqual(a, b) {\n        return a === b;\n      }\n\n      module.exports = unique;\n      /***/\n    },\n    /* 24 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var makeIterator = __webpack_require__(17);\n      /**\n       * Array filter\n       */\n\n\n      function filter(arr, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var results = [];\n\n        if (arr == null) {\n          return results;\n        }\n\n        var i = -1,\n            len = arr.length,\n            value;\n\n        while (++i < len) {\n          value = arr[i];\n\n          if (callback(value, i, arr)) {\n            results.push(value);\n          }\n        }\n\n        return results;\n      }\n\n      module.exports = filter;\n      /***/\n    },\n    /* 25 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n      /* WEBPACK VAR INJECTION */\n\n\n      (function (module) {\n        /**\n         * @license\n         *\n         * chroma.js - JavaScript library for color conversions\n         * \n         * Copyright (c) 2011-2015, Gregor Aisch\n         * All rights reserved.\n         * \n         * Redistribution and use in source and binary forms, with or without\n         * modification, are permitted provided that the following conditions are met:\n         * \n         * 1. Redistributions of source code must retain the above copyright notice, this\n         *    list of conditions and the following disclaimer.\n         * \n         * 2. Redistributions in binary form must reproduce the above copyright notice,\n         *    this list of conditions and the following disclaimer in the documentation\n         *    and/or other materials provided with the distribution.\n         * \n         * 3. The name Gregor Aisch may not be used to endorse or promote products\n         *    derived from this software without specific prior written permission.\n         * \n         * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n         * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n         * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n         * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n         * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n         * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n         * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n         * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n         * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n         * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n         *\n         */\n        (function () {\n          var Color,\n              DEG2RAD,\n              LAB_CONSTANTS,\n              PI,\n              PITHIRD,\n              RAD2DEG,\n              TWOPI,\n              _guess_formats,\n              _guess_formats_sorted,\n              _input,\n              _interpolators,\n              abs,\n              atan2,\n              _bezier,\n              _blend,\n              blend_f,\n              brewer,\n              burn,\n              chroma,\n              clip_rgb,\n              cmyk2rgb,\n              colors,\n              cos,\n              css2rgb,\n              darken,\n              dodge,\n              each,\n              floor,\n              hex2rgb,\n              hsi2rgb,\n              hsl2css,\n              hsl2rgb,\n              hsv2rgb,\n              interpolate,\n              interpolate_hsx,\n              interpolate_lab,\n              interpolate_num,\n              interpolate_rgb,\n              lab2lch,\n              lab2rgb,\n              lab_xyz,\n              lch2lab,\n              lch2rgb,\n              lighten,\n              limit,\n              log,\n              luminance_x,\n              m,\n              max,\n              multiply,\n              normal,\n              num2rgb,\n              overlay,\n              pow,\n              rgb2cmyk,\n              rgb2css,\n              rgb2hex,\n              rgb2hsi,\n              rgb2hsl,\n              rgb2hsv,\n              rgb2lab,\n              rgb2lch,\n              rgb2luminance,\n              rgb2num,\n              rgb2temperature,\n              rgb2xyz,\n              rgb_xyz,\n              rnd,\n              root,\n              round,\n              screen,\n              sin,\n              sqrt,\n              temperature2rgb,\n              type,\n              unpack,\n              w3cx11,\n              xyz_lab,\n              xyz_rgb,\n              slice = [].slice;\n\n          type = function () {\n            /*\n            for browser-safe type checking+\n            ported from jQuery's $.type\n             */\n            var classToType, len, name, o, ref;\n            classToType = {};\n            ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n\n            for (o = 0, len = ref.length; o < len; o++) {\n              name = ref[o];\n              classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n            }\n\n            return function (obj) {\n              var strType;\n              strType = Object.prototype.toString.call(obj);\n              return classToType[strType] || \"object\";\n            };\n          }();\n\n          limit = function limit(x, min, max) {\n            if (min == null) {\n              min = 0;\n            }\n\n            if (max == null) {\n              max = 1;\n            }\n\n            if (x < min) {\n              x = min;\n            }\n\n            if (x > max) {\n              x = max;\n            }\n\n            return x;\n          };\n\n          unpack = function unpack(args) {\n            if (args.length >= 3) {\n              return [].slice.call(args);\n            } else {\n              return args[0];\n            }\n          };\n\n          clip_rgb = function clip_rgb(rgb) {\n            var i;\n\n            for (i in rgb) {\n              if (i < 3) {\n                if (rgb[i] < 0) {\n                  rgb[i] = 0;\n                }\n\n                if (rgb[i] > 255) {\n                  rgb[i] = 255;\n                }\n              } else if (i === 3) {\n                if (rgb[i] < 0) {\n                  rgb[i] = 0;\n                }\n\n                if (rgb[i] > 1) {\n                  rgb[i] = 1;\n                }\n              }\n            }\n\n            return rgb;\n          };\n\n          PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n          TWOPI = PI * 2;\n          PITHIRD = PI / 3;\n          DEG2RAD = PI / 180;\n          RAD2DEG = 180 / PI;\n\n          chroma = function chroma() {\n            if (arguments[0] instanceof Color) {\n              return arguments[0];\n            }\n\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, arguments, function () {});\n          };\n\n          _interpolators = [];\n\n          if (typeof module !== \"undefined\" && module !== null && module.exports != null) {\n            module.exports = chroma;\n          }\n\n          if (true) {\n            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n              return chroma;\n            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n          } else {\n            root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n            root.chroma = chroma;\n          }\n\n          chroma.version = '1.1.1';\n          /**\n              chroma.js\n          \n              Copyright (c) 2011-2013, Gregor Aisch\n              All rights reserved.\n          \n              Redistribution and use in source and binary forms, with or without\n              modification, are permitted provided that the following conditions are met:\n          \n              * Redistributions of source code must retain the above copyright notice, this\n                list of conditions and the following disclaimer.\n          \n              * Redistributions in binary form must reproduce the above copyright notice,\n                this list of conditions and the following disclaimer in the documentation\n                and/or other materials provided with the distribution.\n          \n              * The name Gregor Aisch may not be used to endorse or promote products\n                derived from this software without specific prior written permission.\n          \n              THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n              AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n              IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n              DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n              INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n              BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n              DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n              OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n              NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n              EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n          \n              @source: https://github.com/gka/chroma.js\n           */\n\n          _input = {};\n          _guess_formats = [];\n          _guess_formats_sorted = false;\n\n          Color = function () {\n            function Color() {\n              var arg, args, chk, len, len1, me, mode, o, w;\n              me = this;\n              args = [];\n\n              for (o = 0, len = arguments.length; o < len; o++) {\n                arg = arguments[o];\n\n                if (arg != null) {\n                  args.push(arg);\n                }\n              }\n\n              mode = args[args.length - 1];\n\n              if (_input[mode] != null) {\n                me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n              } else {\n                if (!_guess_formats_sorted) {\n                  _guess_formats = _guess_formats.sort(function (a, b) {\n                    return b.p - a.p;\n                  });\n                  _guess_formats_sorted = true;\n                }\n\n                for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n                  chk = _guess_formats[w];\n                  mode = chk.test.apply(chk, args);\n\n                  if (mode) {\n                    break;\n                  }\n                }\n\n                if (mode) {\n                  me._rgb = clip_rgb(_input[mode].apply(_input, args));\n                }\n              }\n\n              if (me._rgb == null) {\n                console.warn('unknown format: ' + args);\n              }\n\n              if (me._rgb == null) {\n                me._rgb = [0, 0, 0];\n              }\n\n              if (me._rgb.length === 3) {\n                me._rgb.push(1);\n              }\n            }\n\n            Color.prototype.alpha = function (alpha) {\n              if (arguments.length) {\n                this._rgb[3] = alpha;\n                return this;\n              }\n\n              return this._rgb[3];\n            };\n\n            Color.prototype.toString = function () {\n              return this.name();\n            };\n\n            return Color;\n          }();\n\n          chroma._input = _input;\n          /**\n          \tColorBrewer colors for chroma.js\n          \n          \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n          \tPennsylvania State University.\n          \n          \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n          \tyou may not use this file except in compliance with the License.\n          \tYou may obtain a copy of the License at\t\n          \thttp://www.apache.org/licenses/LICENSE-2.0\n          \n          \tUnless required by applicable law or agreed to in writing, software distributed\n          \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n          \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n          \tspecific language governing permissions and limitations under the License.\n          \n              @preserve\n           */\n\n          chroma.brewer = brewer = {\n            OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n            PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n            BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n            Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n            BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n            YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n            YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n            Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n            RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n            Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n            YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n            Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n            GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n            Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n            YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n            PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n            Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n            PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n            Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n            RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n            RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n            PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n            PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n            RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n            BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n            RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n            PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n            Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n            Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n            Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n            Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n            Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n            Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n            Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n            Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n          };\n          /**\n          \tX11 color names\n          \n          \thttp://www.w3.org/TR/css3-color/#svg-color\n           */\n\n          w3cx11 = {\n            indigo: \"#4b0082\",\n            gold: \"#ffd700\",\n            hotpink: \"#ff69b4\",\n            firebrick: \"#b22222\",\n            indianred: \"#cd5c5c\",\n            yellow: \"#ffff00\",\n            mistyrose: \"#ffe4e1\",\n            darkolivegreen: \"#556b2f\",\n            olive: \"#808000\",\n            darkseagreen: \"#8fbc8f\",\n            pink: \"#ffc0cb\",\n            tomato: \"#ff6347\",\n            lightcoral: \"#f08080\",\n            orangered: \"#ff4500\",\n            navajowhite: \"#ffdead\",\n            lime: \"#00ff00\",\n            palegreen: \"#98fb98\",\n            darkslategrey: \"#2f4f4f\",\n            greenyellow: \"#adff2f\",\n            burlywood: \"#deb887\",\n            seashell: \"#fff5ee\",\n            mediumspringgreen: \"#00fa9a\",\n            fuchsia: \"#ff00ff\",\n            papayawhip: \"#ffefd5\",\n            blanchedalmond: \"#ffebcd\",\n            chartreuse: \"#7fff00\",\n            dimgray: \"#696969\",\n            black: \"#000000\",\n            peachpuff: \"#ffdab9\",\n            springgreen: \"#00ff7f\",\n            aquamarine: \"#7fffd4\",\n            white: \"#ffffff\",\n            orange: \"#ffa500\",\n            lightsalmon: \"#ffa07a\",\n            darkslategray: \"#2f4f4f\",\n            brown: \"#a52a2a\",\n            ivory: \"#fffff0\",\n            dodgerblue: \"#1e90ff\",\n            peru: \"#cd853f\",\n            lawngreen: \"#7cfc00\",\n            chocolate: \"#d2691e\",\n            crimson: \"#dc143c\",\n            forestgreen: \"#228b22\",\n            darkgrey: \"#a9a9a9\",\n            lightseagreen: \"#20b2aa\",\n            cyan: \"#00ffff\",\n            mintcream: \"#f5fffa\",\n            silver: \"#c0c0c0\",\n            antiquewhite: \"#faebd7\",\n            mediumorchid: \"#ba55d3\",\n            skyblue: \"#87ceeb\",\n            gray: \"#808080\",\n            darkturquoise: \"#00ced1\",\n            goldenrod: \"#daa520\",\n            darkgreen: \"#006400\",\n            floralwhite: \"#fffaf0\",\n            darkviolet: \"#9400d3\",\n            darkgray: \"#a9a9a9\",\n            moccasin: \"#ffe4b5\",\n            saddlebrown: \"#8b4513\",\n            grey: \"#808080\",\n            darkslateblue: \"#483d8b\",\n            lightskyblue: \"#87cefa\",\n            lightpink: \"#ffb6c1\",\n            mediumvioletred: \"#c71585\",\n            slategrey: \"#708090\",\n            red: \"#ff0000\",\n            deeppink: \"#ff1493\",\n            limegreen: \"#32cd32\",\n            darkmagenta: \"#8b008b\",\n            palegoldenrod: \"#eee8aa\",\n            plum: \"#dda0dd\",\n            turquoise: \"#40e0d0\",\n            lightgrey: \"#d3d3d3\",\n            lightgoldenrodyellow: \"#fafad2\",\n            darkgoldenrod: \"#b8860b\",\n            lavender: \"#e6e6fa\",\n            maroon: \"#800000\",\n            yellowgreen: \"#9acd32\",\n            sandybrown: \"#f4a460\",\n            thistle: \"#d8bfd8\",\n            violet: \"#ee82ee\",\n            navy: \"#000080\",\n            magenta: \"#ff00ff\",\n            dimgrey: \"#696969\",\n            tan: \"#d2b48c\",\n            rosybrown: \"#bc8f8f\",\n            olivedrab: \"#6b8e23\",\n            blue: \"#0000ff\",\n            lightblue: \"#add8e6\",\n            ghostwhite: \"#f8f8ff\",\n            honeydew: \"#f0fff0\",\n            cornflowerblue: \"#6495ed\",\n            slateblue: \"#6a5acd\",\n            linen: \"#faf0e6\",\n            darkblue: \"#00008b\",\n            powderblue: \"#b0e0e6\",\n            seagreen: \"#2e8b57\",\n            darkkhaki: \"#bdb76b\",\n            snow: \"#fffafa\",\n            sienna: \"#a0522d\",\n            mediumblue: \"#0000cd\",\n            royalblue: \"#4169e1\",\n            lightcyan: \"#e0ffff\",\n            green: \"#008000\",\n            mediumpurple: \"#9370db\",\n            midnightblue: \"#191970\",\n            cornsilk: \"#fff8dc\",\n            paleturquoise: \"#afeeee\",\n            bisque: \"#ffe4c4\",\n            slategray: \"#708090\",\n            darkcyan: \"#008b8b\",\n            khaki: \"#f0e68c\",\n            wheat: \"#f5deb3\",\n            teal: \"#008080\",\n            darkorchid: \"#9932cc\",\n            deepskyblue: \"#00bfff\",\n            salmon: \"#fa8072\",\n            darkred: \"#8b0000\",\n            steelblue: \"#4682b4\",\n            palevioletred: \"#db7093\",\n            lightslategray: \"#778899\",\n            aliceblue: \"#f0f8ff\",\n            lightslategrey: \"#778899\",\n            lightgreen: \"#90ee90\",\n            orchid: \"#da70d6\",\n            gainsboro: \"#dcdcdc\",\n            mediumseagreen: \"#3cb371\",\n            lightgray: \"#d3d3d3\",\n            mediumturquoise: \"#48d1cc\",\n            lemonchiffon: \"#fffacd\",\n            cadetblue: \"#5f9ea0\",\n            lightyellow: \"#ffffe0\",\n            lavenderblush: \"#fff0f5\",\n            coral: \"#ff7f50\",\n            purple: \"#800080\",\n            aqua: \"#00ffff\",\n            whitesmoke: \"#f5f5f5\",\n            mediumslateblue: \"#7b68ee\",\n            darkorange: \"#ff8c00\",\n            mediumaquamarine: \"#66cdaa\",\n            darksalmon: \"#e9967a\",\n            beige: \"#f5f5dc\",\n            blueviolet: \"#8a2be2\",\n            azure: \"#f0ffff\",\n            lightsteelblue: \"#b0c4de\",\n            oldlace: \"#fdf5e6\",\n            rebeccapurple: \"#663399\"\n          };\n          chroma.colors = colors = w3cx11;\n\n          lab2rgb = function lab2rgb() {\n            var a, args, b, g, l, r, x, y, z;\n            args = unpack(arguments);\n            l = args[0], a = args[1], b = args[2];\n            y = (l + 16) / 116;\n            x = isNaN(a) ? y : y + a / 500;\n            z = isNaN(b) ? y : y - b / 200;\n            y = LAB_CONSTANTS.Yn * lab_xyz(y);\n            x = LAB_CONSTANTS.Xn * lab_xyz(x);\n            z = LAB_CONSTANTS.Zn * lab_xyz(z);\n            r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n            g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n            b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n            r = limit(r, 0, 255);\n            g = limit(g, 0, 255);\n            b = limit(b, 0, 255);\n            return [r, g, b, args.length > 3 ? args[3] : 1];\n          };\n\n          xyz_rgb = function xyz_rgb(r) {\n            return round(255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055));\n          };\n\n          lab_xyz = function lab_xyz(t) {\n            if (t > LAB_CONSTANTS.t1) {\n              return t * t * t;\n            } else {\n              return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n            }\n          };\n\n          LAB_CONSTANTS = {\n            Kn: 18,\n            Xn: 0.950470,\n            Yn: 1,\n            Zn: 1.088830,\n            t0: 0.137931034,\n            t1: 0.206896552,\n            t2: 0.12841855,\n            t3: 0.008856452\n          };\n\n          rgb2lab = function rgb2lab() {\n            var b, g, r, ref, ref1, x, y, z;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n            return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n          };\n\n          rgb_xyz = function rgb_xyz(r) {\n            if ((r /= 255) <= 0.04045) {\n              return r / 12.92;\n            } else {\n              return pow((r + 0.055) / 1.055, 2.4);\n            }\n          };\n\n          xyz_lab = function xyz_lab(t) {\n            if (t > LAB_CONSTANTS.t3) {\n              return pow(t, 1 / 3);\n            } else {\n              return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n            }\n          };\n\n          rgb2xyz = function rgb2xyz() {\n            var b, g, r, ref, x, y, z;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            r = rgb_xyz(r);\n            g = rgb_xyz(g);\n            b = rgb_xyz(b);\n            x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n            y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n            z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n            return [x, y, z];\n          };\n\n          chroma.lab = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['lab']), function () {});\n          };\n\n          _input.lab = lab2rgb;\n\n          Color.prototype.lab = function () {\n            return rgb2lab(this._rgb);\n          };\n\n          _bezier = function bezier(colors) {\n            var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n\n            colors = function () {\n              var len, o, results;\n              results = [];\n\n              for (o = 0, len = colors.length; o < len; o++) {\n                c = colors[o];\n                results.push(chroma(c));\n              }\n\n              return results;\n            }();\n\n            if (colors.length === 2) {\n              ref = function () {\n                var len, o, results;\n                results = [];\n\n                for (o = 0, len = colors.length; o < len; o++) {\n                  c = colors[o];\n                  results.push(c.lab());\n                }\n\n                return results;\n              }(), lab0 = ref[0], lab1 = ref[1];\n\n              I = function I(t) {\n                var i, lab;\n\n                lab = function () {\n                  var o, results;\n                  results = [];\n\n                  for (i = o = 0; o <= 2; i = ++o) {\n                    results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n                  }\n\n                  return results;\n                }();\n\n                return chroma.lab.apply(chroma, lab);\n              };\n            } else if (colors.length === 3) {\n              ref1 = function () {\n                var len, o, results;\n                results = [];\n\n                for (o = 0, len = colors.length; o < len; o++) {\n                  c = colors[o];\n                  results.push(c.lab());\n                }\n\n                return results;\n              }(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n\n              I = function I(t) {\n                var i, lab;\n\n                lab = function () {\n                  var o, results;\n                  results = [];\n\n                  for (i = o = 0; o <= 2; i = ++o) {\n                    results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n                  }\n\n                  return results;\n                }();\n\n                return chroma.lab.apply(chroma, lab);\n              };\n            } else if (colors.length === 4) {\n              ref2 = function () {\n                var len, o, results;\n                results = [];\n\n                for (o = 0, len = colors.length; o < len; o++) {\n                  c = colors[o];\n                  results.push(c.lab());\n                }\n\n                return results;\n              }(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n\n              I = function I(t) {\n                var i, lab;\n\n                lab = function () {\n                  var o, results;\n                  results = [];\n\n                  for (i = o = 0; o <= 2; i = ++o) {\n                    results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n                  }\n\n                  return results;\n                }();\n\n                return chroma.lab.apply(chroma, lab);\n              };\n            } else if (colors.length === 5) {\n              I0 = _bezier(colors.slice(0, 3));\n              I1 = _bezier(colors.slice(2, 5));\n\n              I = function I(t) {\n                if (t < 0.5) {\n                  return I0(t * 2);\n                } else {\n                  return I1((t - 0.5) * 2);\n                }\n              };\n            }\n\n            return I;\n          };\n\n          chroma.bezier = function (colors) {\n            var f;\n            f = _bezier(colors);\n\n            f.scale = function () {\n              return chroma.scale(f);\n            };\n\n            return f;\n          };\n          /*\n              chroma.js\n          \n              Copyright (c) 2011-2013, Gregor Aisch\n              All rights reserved.\n          \n              Redistribution and use in source and binary forms, with or without\n              modification, are permitted provided that the following conditions are met:\n          \n              * Redistributions of source code must retain the above copyright notice, this\n                list of conditions and the following disclaimer.\n          \n              * Redistributions in binary form must reproduce the above copyright notice,\n                this list of conditions and the following disclaimer in the documentation\n                and/or other materials provided with the distribution.\n          \n              * The name Gregor Aisch may not be used to endorse or promote products\n                derived from this software without specific prior written permission.\n          \n              THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n              AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n              IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n              DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n              INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n              BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n              DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n              OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n              NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n              EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n          \n              @source: https://github.com/gka/chroma.js\n           */\n\n\n          chroma.cubehelix = function (start, rotations, hue, gamma, lightness) {\n            var dh, dl, f;\n\n            if (start == null) {\n              start = 300;\n            }\n\n            if (rotations == null) {\n              rotations = -1.5;\n            }\n\n            if (hue == null) {\n              hue = 1;\n            }\n\n            if (gamma == null) {\n              gamma = 1;\n            }\n\n            if (lightness == null) {\n              lightness = [0, 1];\n            }\n\n            dl = lightness[1] - lightness[0];\n            dh = 0;\n\n            f = function f(fract) {\n              var a, amp, b, cos_a, g, h, l, r, sin_a;\n              a = TWOPI * ((start + 120) / 360 + rotations * fract);\n              l = pow(lightness[0] + dl * fract, gamma);\n              h = dh !== 0 ? hue[0] + fract * dh : hue;\n              amp = h * l * (1 - l) / 2;\n              cos_a = cos(a);\n              sin_a = sin(a);\n              r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n              g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n              b = l + amp * (+1.97294 * cos_a);\n              return chroma(clip_rgb([r * 255, g * 255, b * 255]));\n            };\n\n            f.start = function (s) {\n              if (s == null) {\n                return start;\n              }\n\n              start = s;\n              return f;\n            };\n\n            f.rotations = function (r) {\n              if (r == null) {\n                return rotations;\n              }\n\n              rotations = r;\n              return f;\n            };\n\n            f.gamma = function (g) {\n              if (g == null) {\n                return gamma;\n              }\n\n              gamma = g;\n              return f;\n            };\n\n            f.hue = function (h) {\n              if (h == null) {\n                return hue;\n              }\n\n              hue = h;\n\n              if (type(hue) === 'array') {\n                dh = hue[1] - hue[0];\n\n                if (dh === 0) {\n                  hue = hue[1];\n                }\n              } else {\n                dh = 0;\n              }\n\n              return f;\n            };\n\n            f.lightness = function (h) {\n              if (h == null) {\n                return lightness;\n              }\n\n              lightness = h;\n\n              if (type(lightness) === 'array') {\n                dl = lightness[1] - lightness[0];\n\n                if (dl === 0) {\n                  lightness = lightness[1];\n                }\n              } else {\n                dl = 0;\n              }\n\n              return f;\n            };\n\n            f.scale = function () {\n              return chroma.scale(f);\n            };\n\n            f.hue(hue);\n            return f;\n          };\n\n          chroma.random = function () {\n            var code, digits, i, o;\n            digits = '0123456789abcdef';\n            code = '#';\n\n            for (i = o = 0; o < 6; i = ++o) {\n              code += digits.charAt(floor(Math.random() * 16));\n            }\n\n            return new Color(code);\n          };\n\n          _input.rgb = function () {\n            var k, ref, results, v;\n            ref = unpack(arguments);\n            results = [];\n\n            for (k in ref) {\n              v = ref[k];\n              results.push(v);\n            }\n\n            return results;\n          };\n\n          chroma.rgb = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['rgb']), function () {});\n          };\n\n          Color.prototype.rgb = function () {\n            return this._rgb.slice(0, 3);\n          };\n\n          Color.prototype.rgba = function () {\n            return this._rgb;\n          };\n\n          _guess_formats.push({\n            p: 15,\n            test: function test(n) {\n              var a;\n              a = unpack(arguments);\n\n              if (type(a) === 'array' && a.length === 3) {\n                return 'rgb';\n              }\n\n              if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n                return 'rgb';\n              }\n            }\n          });\n\n          hex2rgb = function hex2rgb(hex) {\n            var a, b, g, r, rgb, u;\n\n            if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n              if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n              }\n\n              if (hex.length === 3) {\n                hex = hex.split(\"\");\n                hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n              }\n\n              u = parseInt(hex, 16);\n              r = u >> 16;\n              g = u >> 8 & 0xFF;\n              b = u & 0xFF;\n              return [r, g, b, 1];\n            }\n\n            if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n              if (hex.length === 9) {\n                hex = hex.substr(1);\n              }\n\n              u = parseInt(hex, 16);\n              r = u >> 24 & 0xFF;\n              g = u >> 16 & 0xFF;\n              b = u >> 8 & 0xFF;\n              a = round((u & 0xFF) / 0xFF * 100) / 100;\n              return [r, g, b, a];\n            }\n\n            if (_input.css != null && (rgb = _input.css(hex))) {\n              return rgb;\n            }\n\n            throw \"unknown color: \" + hex;\n          };\n\n          rgb2hex = function rgb2hex(channels, mode) {\n            var a, b, g, hxa, r, str, u;\n\n            if (mode == null) {\n              mode = 'rgb';\n            }\n\n            r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n            u = r << 16 | g << 8 | b;\n            str = \"000000\" + u.toString(16);\n            str = str.substr(str.length - 6);\n            hxa = '0' + round(a * 255).toString(16);\n            hxa = hxa.substr(hxa.length - 2);\n            return \"#\" + function () {\n              switch (mode.toLowerCase()) {\n                case 'rgba':\n                  return str + hxa;\n\n                case 'argb':\n                  return hxa + str;\n\n                default:\n                  return str;\n              }\n            }();\n          };\n\n          _input.hex = function (h) {\n            return hex2rgb(h);\n          };\n\n          chroma.hex = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['hex']), function () {});\n          };\n\n          Color.prototype.hex = function (mode) {\n            if (mode == null) {\n              mode = 'rgb';\n            }\n\n            return rgb2hex(this._rgb, mode);\n          };\n\n          _guess_formats.push({\n            p: 10,\n            test: function test(n) {\n              if (arguments.length === 1 && type(n) === \"string\") {\n                return 'hex';\n              }\n            }\n          });\n\n          hsl2rgb = function hsl2rgb() {\n            var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n            args = unpack(arguments);\n            h = args[0], s = args[1], l = args[2];\n\n            if (s === 0) {\n              r = g = b = l * 255;\n            } else {\n              t3 = [0, 0, 0];\n              c = [0, 0, 0];\n              t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n              t1 = 2 * l - t2;\n              h /= 360;\n              t3[0] = h + 1 / 3;\n              t3[1] = h;\n              t3[2] = h - 1 / 3;\n\n              for (i = o = 0; o <= 2; i = ++o) {\n                if (t3[i] < 0) {\n                  t3[i] += 1;\n                }\n\n                if (t3[i] > 1) {\n                  t3[i] -= 1;\n                }\n\n                if (6 * t3[i] < 1) {\n                  c[i] = t1 + (t2 - t1) * 6 * t3[i];\n                } else if (2 * t3[i] < 1) {\n                  c[i] = t2;\n                } else if (3 * t3[i] < 2) {\n                  c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6;\n                } else {\n                  c[i] = t1;\n                }\n              }\n\n              ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n            }\n\n            if (args.length > 3) {\n              return [r, g, b, args[3]];\n            } else {\n              return [r, g, b];\n            }\n          };\n\n          rgb2hsl = function rgb2hsl(r, g, b) {\n            var h, l, min, ref, s;\n\n            if (r !== void 0 && r.length >= 3) {\n              ref = r, r = ref[0], g = ref[1], b = ref[2];\n            }\n\n            r /= 255;\n            g /= 255;\n            b /= 255;\n            min = Math.min(r, g, b);\n            max = Math.max(r, g, b);\n            l = (max + min) / 2;\n\n            if (max === min) {\n              s = 0;\n              h = Number.NaN;\n            } else {\n              s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n            }\n\n            if (r === max) {\n              h = (g - b) / (max - min);\n            } else if (g === max) {\n              h = 2 + (b - r) / (max - min);\n            } else if (b === max) {\n              h = 4 + (r - g) / (max - min);\n            }\n\n            h *= 60;\n\n            if (h < 0) {\n              h += 360;\n            }\n\n            return [h, s, l];\n          };\n\n          chroma.hsl = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['hsl']), function () {});\n          };\n\n          _input.hsl = hsl2rgb;\n\n          Color.prototype.hsl = function () {\n            return rgb2hsl(this._rgb);\n          };\n\n          hsv2rgb = function hsv2rgb() {\n            var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n            args = unpack(arguments);\n            h = args[0], s = args[1], v = args[2];\n            v *= 255;\n\n            if (s === 0) {\n              r = g = b = v;\n            } else {\n              if (h === 360) {\n                h = 0;\n              }\n\n              if (h > 360) {\n                h -= 360;\n              }\n\n              if (h < 0) {\n                h += 360;\n              }\n\n              h /= 60;\n              i = floor(h);\n              f = h - i;\n              p = v * (1 - s);\n              q = v * (1 - s * f);\n              t = v * (1 - s * (1 - f));\n\n              switch (i) {\n                case 0:\n                  ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n                  break;\n\n                case 1:\n                  ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n                  break;\n\n                case 2:\n                  ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n                  break;\n\n                case 3:\n                  ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n                  break;\n\n                case 4:\n                  ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n                  break;\n\n                case 5:\n                  ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n              }\n            }\n\n            r = round(r);\n            g = round(g);\n            b = round(b);\n            return [r, g, b, args.length > 3 ? args[3] : 1];\n          };\n\n          rgb2hsv = function rgb2hsv() {\n            var b, delta, g, h, min, r, ref, s, v;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            min = Math.min(r, g, b);\n            max = Math.max(r, g, b);\n            delta = max - min;\n            v = max / 255.0;\n\n            if (max === 0) {\n              h = Number.NaN;\n              s = 0;\n            } else {\n              s = delta / max;\n\n              if (r === max) {\n                h = (g - b) / delta;\n              }\n\n              if (g === max) {\n                h = 2 + (b - r) / delta;\n              }\n\n              if (b === max) {\n                h = 4 + (r - g) / delta;\n              }\n\n              h *= 60;\n\n              if (h < 0) {\n                h += 360;\n              }\n            }\n\n            return [h, s, v];\n          };\n\n          chroma.hsv = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['hsv']), function () {});\n          };\n\n          _input.hsv = hsv2rgb;\n\n          Color.prototype.hsv = function () {\n            return rgb2hsv(this._rgb);\n          };\n\n          num2rgb = function num2rgb(num) {\n            var b, g, r;\n\n            if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n              r = num >> 16;\n              g = num >> 8 & 0xFF;\n              b = num & 0xFF;\n              return [r, g, b, 1];\n            }\n\n            console.warn(\"unknown num color: \" + num);\n            return [0, 0, 0, 1];\n          };\n\n          rgb2num = function rgb2num() {\n            var b, g, r, ref;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            return (r << 16) + (g << 8) + b;\n          };\n\n          chroma.num = function (num) {\n            return new Color(num, 'num');\n          };\n\n          Color.prototype.num = function (mode) {\n            if (mode == null) {\n              mode = 'rgb';\n            }\n\n            return rgb2num(this._rgb, mode);\n          };\n\n          _input.num = num2rgb;\n\n          _guess_formats.push({\n            p: 10,\n            test: function test(n) {\n              if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n                return 'num';\n              }\n            }\n          });\n\n          css2rgb = function css2rgb(css) {\n            var aa, ab, hsl, i, m, o, rgb, w;\n            css = css.toLowerCase();\n\n            if (chroma.colors != null && chroma.colors[css]) {\n              return hex2rgb(chroma.colors[css]);\n            }\n\n            if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n              rgb = m.slice(1, 4);\n\n              for (i = o = 0; o <= 2; i = ++o) {\n                rgb[i] = +rgb[i];\n              }\n\n              rgb[3] = 1;\n            } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n              rgb = m.slice(1, 5);\n\n              for (i = w = 0; w <= 3; i = ++w) {\n                rgb[i] = +rgb[i];\n              }\n            } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n              rgb = m.slice(1, 4);\n\n              for (i = aa = 0; aa <= 2; i = ++aa) {\n                rgb[i] = round(rgb[i] * 2.55);\n              }\n\n              rgb[3] = 1;\n            } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n              rgb = m.slice(1, 5);\n\n              for (i = ab = 0; ab <= 2; i = ++ab) {\n                rgb[i] = round(rgb[i] * 2.55);\n              }\n\n              rgb[3] = +rgb[3];\n            } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n              hsl = m.slice(1, 4);\n              hsl[1] *= 0.01;\n              hsl[2] *= 0.01;\n              rgb = hsl2rgb(hsl);\n              rgb[3] = 1;\n            } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n              hsl = m.slice(1, 4);\n              hsl[1] *= 0.01;\n              hsl[2] *= 0.01;\n              rgb = hsl2rgb(hsl);\n              rgb[3] = +m[4];\n            }\n\n            return rgb;\n          };\n\n          rgb2css = function rgb2css(rgba) {\n            var mode;\n            mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n\n            if (mode === 'rgb') {\n              return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n            } else if (mode === 'rgba') {\n              return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n            } else {}\n          };\n\n          rnd = function rnd(a) {\n            return round(a * 100) / 100;\n          };\n\n          hsl2css = function hsl2css(hsl, alpha) {\n            var mode;\n            mode = alpha < 1 ? 'hsla' : 'hsl';\n            hsl[0] = rnd(hsl[0] || 0);\n            hsl[1] = rnd(hsl[1] * 100) + '%';\n            hsl[2] = rnd(hsl[2] * 100) + '%';\n\n            if (mode === 'hsla') {\n              hsl[3] = alpha;\n            }\n\n            return mode + '(' + hsl.join(',') + ')';\n          };\n\n          _input.css = function (h) {\n            return css2rgb(h);\n          };\n\n          chroma.css = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['css']), function () {});\n          };\n\n          Color.prototype.css = function (mode) {\n            if (mode == null) {\n              mode = 'rgb';\n            }\n\n            if (mode.slice(0, 3) === 'rgb') {\n              return rgb2css(this._rgb);\n            } else if (mode.slice(0, 3) === 'hsl') {\n              return hsl2css(this.hsl(), this.alpha());\n            }\n          };\n\n          _input.named = function (name) {\n            return hex2rgb(w3cx11[name]);\n          };\n\n          _guess_formats.push({\n            p: 20,\n            test: function test(n) {\n              if (arguments.length === 1 && w3cx11[n] != null) {\n                return 'named';\n              }\n            }\n          });\n\n          Color.prototype.name = function (n) {\n            var h, k;\n\n            if (arguments.length) {\n              if (w3cx11[n]) {\n                this._rgb = hex2rgb(w3cx11[n]);\n              }\n\n              this._rgb[3] = 1;\n              this;\n            }\n\n            h = this.hex();\n\n            for (k in w3cx11) {\n              if (h === w3cx11[k]) {\n                return k;\n              }\n            }\n\n            return h;\n          };\n\n          lch2lab = function lch2lab() {\n            /*\n            Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n            These formulas were invented by David Dalrymple to obtain maximum contrast without going\n            out of gamut if the parameters are in the range 0-1.\n            \n            A saturation multiplier was added by Gregor Aisch\n             */\n            var c, h, l, ref;\n            ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n            h = h * DEG2RAD;\n            return [l, cos(h) * c, sin(h) * c];\n          };\n\n          lch2rgb = function lch2rgb() {\n            var L, a, args, b, c, g, h, l, r, ref, ref1;\n            args = unpack(arguments);\n            l = args[0], c = args[1], h = args[2];\n            ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n            ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n            return [limit(r, 0, 255), limit(g, 0, 255), limit(b, 0, 255), args.length > 3 ? args[3] : 1];\n          };\n\n          lab2lch = function lab2lch() {\n            var a, b, c, h, l, ref;\n            ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n            c = sqrt(a * a + b * b);\n            h = (atan2(b, a) * RAD2DEG + 360) % 360;\n\n            if (round(c * 10000) === 0) {\n              h = Number.NaN;\n            }\n\n            return [l, c, h];\n          };\n\n          rgb2lch = function rgb2lch() {\n            var a, b, g, l, r, ref, ref1;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n            return lab2lch(l, a, b);\n          };\n\n          chroma.lch = function () {\n            var args;\n            args = unpack(arguments);\n            return new Color(args, 'lch');\n          };\n\n          chroma.hcl = function () {\n            var args;\n            args = unpack(arguments);\n            return new Color(args, 'hcl');\n          };\n\n          _input.lch = lch2rgb;\n\n          _input.hcl = function () {\n            var c, h, l, ref;\n            ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n            return lch2rgb([l, c, h]);\n          };\n\n          Color.prototype.lch = function () {\n            return rgb2lch(this._rgb);\n          };\n\n          Color.prototype.hcl = function () {\n            return rgb2lch(this._rgb).reverse();\n          };\n\n          rgb2cmyk = function rgb2cmyk(mode) {\n            var b, c, f, g, k, m, r, ref, y;\n\n            if (mode == null) {\n              mode = 'rgb';\n            }\n\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            r = r / 255;\n            g = g / 255;\n            b = b / 255;\n            k = 1 - Math.max(r, Math.max(g, b));\n            f = k < 1 ? 1 / (1 - k) : 0;\n            c = (1 - r - k) * f;\n            m = (1 - g - k) * f;\n            y = (1 - b - k) * f;\n            return [c, m, y, k];\n          };\n\n          cmyk2rgb = function cmyk2rgb() {\n            var alpha, args, b, c, g, k, m, r, y;\n            args = unpack(arguments);\n            c = args[0], m = args[1], y = args[2], k = args[3];\n            alpha = args.length > 4 ? args[4] : 1;\n\n            if (k === 1) {\n              return [0, 0, 0, alpha];\n            }\n\n            r = c >= 1 ? 0 : round(255 * (1 - c) * (1 - k));\n            g = m >= 1 ? 0 : round(255 * (1 - m) * (1 - k));\n            b = y >= 1 ? 0 : round(255 * (1 - y) * (1 - k));\n            return [r, g, b, alpha];\n          };\n\n          _input.cmyk = function () {\n            return cmyk2rgb(unpack(arguments));\n          };\n\n          chroma.cmyk = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['cmyk']), function () {});\n          };\n\n          Color.prototype.cmyk = function () {\n            return rgb2cmyk(this._rgb);\n          };\n\n          _input.gl = function () {\n            var i, k, o, rgb, v;\n\n            rgb = function () {\n              var ref, results;\n              ref = unpack(arguments);\n              results = [];\n\n              for (k in ref) {\n                v = ref[k];\n                results.push(v);\n              }\n\n              return results;\n            }.apply(this, arguments);\n\n            for (i = o = 0; o <= 2; i = ++o) {\n              rgb[i] *= 255;\n            }\n\n            return rgb;\n          };\n\n          chroma.gl = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['gl']), function () {});\n          };\n\n          Color.prototype.gl = function () {\n            var rgb;\n            rgb = this._rgb;\n            return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n          };\n\n          rgb2luminance = function rgb2luminance(r, g, b) {\n            var ref;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            r = luminance_x(r);\n            g = luminance_x(g);\n            b = luminance_x(b);\n            return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n          };\n\n          luminance_x = function luminance_x(x) {\n            x /= 255;\n\n            if (x <= 0.03928) {\n              return x / 12.92;\n            } else {\n              return pow((x + 0.055) / 1.055, 2.4);\n            }\n          };\n\n          _interpolators = [];\n\n          interpolate = function interpolate(col1, col2, f, m) {\n            var interpol, len, o, res;\n\n            if (f == null) {\n              f = 0.5;\n            }\n\n            if (m == null) {\n              m = 'rgb';\n            }\n            /*\n            interpolates between colors\n            f = 0 --> me\n            f = 1 --> col\n             */\n\n\n            if (type(col1) !== 'object') {\n              col1 = chroma(col1);\n            }\n\n            if (type(col2) !== 'object') {\n              col2 = chroma(col2);\n            }\n\n            for (o = 0, len = _interpolators.length; o < len; o++) {\n              interpol = _interpolators[o];\n\n              if (m === interpol[0]) {\n                res = interpol[1](col1, col2, f, m);\n                break;\n              }\n            }\n\n            if (res == null) {\n              throw \"color mode \" + m + \" is not supported\";\n            }\n\n            res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n            return res;\n          };\n\n          chroma.interpolate = interpolate;\n\n          Color.prototype.interpolate = function (col2, f, m) {\n            return interpolate(this, col2, f, m);\n          };\n\n          chroma.mix = interpolate;\n          Color.prototype.mix = Color.prototype.interpolate;\n\n          interpolate_rgb = function interpolate_rgb(col1, col2, f, m) {\n            var xyz0, xyz1;\n            xyz0 = col1._rgb;\n            xyz1 = col2._rgb;\n            return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n          };\n\n          _interpolators.push(['rgb', interpolate_rgb]);\n\n          Color.prototype.luminance = function (lum, mode) {\n            var cur_lum, eps, max_iter, _test;\n\n            if (mode == null) {\n              mode = 'rgb';\n            }\n\n            if (!arguments.length) {\n              return rgb2luminance(this._rgb);\n            }\n\n            if (lum === 0) {\n              this._rgb = [0, 0, 0, this._rgb[3]];\n            } else if (lum === 1) {\n              this._rgb = [255, 255, 255, this._rgb[3]];\n            } else {\n              eps = 1e-7;\n              max_iter = 20;\n\n              _test = function test(l, h) {\n                var lm, m;\n                m = l.interpolate(h, 0.5, mode);\n                lm = m.luminance();\n\n                if (Math.abs(lum - lm) < eps || !max_iter--) {\n                  return m;\n                }\n\n                if (lm > lum) {\n                  return _test(l, m);\n                }\n\n                return _test(m, h);\n              };\n\n              cur_lum = rgb2luminance(this._rgb);\n              this._rgb = (cur_lum > lum ? _test(chroma('black'), this) : _test(this, chroma('white'))).rgba();\n            }\n\n            return this;\n          };\n\n          temperature2rgb = function temperature2rgb(kelvin) {\n            var b, g, r, temp;\n            temp = kelvin / 100;\n\n            if (temp < 66) {\n              r = 255;\n              g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n              b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n            } else {\n              r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n              g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n              b = 255;\n            }\n\n            return clip_rgb([r, g, b]);\n          };\n\n          rgb2temperature = function rgb2temperature() {\n            var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            minTemp = 1000;\n            maxTemp = 40000;\n            eps = 0.4;\n\n            while (maxTemp - minTemp > eps) {\n              temp = (maxTemp + minTemp) * 0.5;\n              rgb = temperature2rgb(temp);\n\n              if (rgb[2] / rgb[0] >= b / r) {\n                maxTemp = temp;\n              } else {\n                minTemp = temp;\n              }\n            }\n\n            return round(temp);\n          };\n\n          chroma.temperature = chroma.kelvin = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['temperature']), function () {});\n          };\n\n          _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n          Color.prototype.temperature = function () {\n            return rgb2temperature(this._rgb);\n          };\n\n          Color.prototype.kelvin = Color.prototype.temperature;\n\n          chroma.contrast = function (a, b) {\n            var l1, l2, ref, ref1;\n\n            if ((ref = type(a)) === 'string' || ref === 'number') {\n              a = new Color(a);\n            }\n\n            if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n              b = new Color(b);\n            }\n\n            l1 = a.luminance();\n            l2 = b.luminance();\n\n            if (l1 > l2) {\n              return (l1 + 0.05) / (l2 + 0.05);\n            } else {\n              return (l2 + 0.05) / (l1 + 0.05);\n            }\n          };\n\n          Color.prototype.get = function (modechan) {\n            var channel, i, me, mode, ref, src;\n            me = this;\n            ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n            src = me[mode]();\n\n            if (channel) {\n              i = mode.indexOf(channel);\n\n              if (i > -1) {\n                return src[i];\n              } else {\n                return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n              }\n            } else {\n              return src;\n            }\n          };\n\n          Color.prototype.set = function (modechan, value) {\n            var channel, i, me, mode, ref, src;\n            me = this;\n            ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n\n            if (channel) {\n              src = me[mode]();\n              i = mode.indexOf(channel);\n\n              if (i > -1) {\n                if (type(value) === 'string') {\n                  switch (value.charAt(0)) {\n                    case '+':\n                      src[i] += +value;\n                      break;\n\n                    case '-':\n                      src[i] += +value;\n                      break;\n\n                    case '*':\n                      src[i] *= +value.substr(1);\n                      break;\n\n                    case '/':\n                      src[i] /= +value.substr(1);\n                      break;\n\n                    default:\n                      src[i] = +value;\n                  }\n                } else {\n                  src[i] = value;\n                }\n              } else {\n                console.warn('unknown channel ' + channel + ' in mode ' + mode);\n              }\n            } else {\n              src = value;\n            }\n\n            me._rgb = chroma(src, mode).alpha(me.alpha())._rgb;\n            return me;\n          };\n\n          Color.prototype.darken = function (amount) {\n            var lab, me;\n\n            if (amount == null) {\n              amount = 1;\n            }\n\n            me = this;\n            lab = me.lab();\n            lab[0] -= LAB_CONSTANTS.Kn * amount;\n            return chroma.lab(lab).alpha(me.alpha());\n          };\n\n          Color.prototype.brighten = function (amount) {\n            if (amount == null) {\n              amount = 1;\n            }\n\n            return this.darken(-amount);\n          };\n\n          Color.prototype.darker = Color.prototype.darken;\n          Color.prototype.brighter = Color.prototype.brighten;\n\n          Color.prototype.saturate = function (amount) {\n            var lch, me;\n\n            if (amount == null) {\n              amount = 1;\n            }\n\n            me = this;\n            lch = me.lch();\n            lch[1] += amount * LAB_CONSTANTS.Kn;\n\n            if (lch[1] < 0) {\n              lch[1] = 0;\n            }\n\n            return chroma.lch(lch).alpha(me.alpha());\n          };\n\n          Color.prototype.desaturate = function (amount) {\n            if (amount == null) {\n              amount = 1;\n            }\n\n            return this.saturate(-amount);\n          };\n\n          Color.prototype.premultiply = function () {\n            var a, rgb;\n            rgb = this.rgb();\n            a = this.alpha();\n            return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n          };\n\n          _blend = function blend(bottom, top, mode) {\n            if (!_blend[mode]) {\n              throw 'unknown blend mode ' + mode;\n            }\n\n            return _blend[mode](bottom, top);\n          };\n\n          blend_f = function blend_f(f) {\n            return function (bottom, top) {\n              var c0, c1;\n              c0 = chroma(top).rgb();\n              c1 = chroma(bottom).rgb();\n              return chroma(f(c0, c1), 'rgb');\n            };\n          };\n\n          each = function each(f) {\n            return function (c0, c1) {\n              var i, o, out;\n              out = [];\n\n              for (i = o = 0; o <= 3; i = ++o) {\n                out[i] = f(c0[i], c1[i]);\n              }\n\n              return out;\n            };\n          };\n\n          normal = function normal(a, b) {\n            return a;\n          };\n\n          multiply = function multiply(a, b) {\n            return a * b / 255;\n          };\n\n          darken = function darken(a, b) {\n            if (a > b) {\n              return b;\n            } else {\n              return a;\n            }\n          };\n\n          lighten = function lighten(a, b) {\n            if (a > b) {\n              return a;\n            } else {\n              return b;\n            }\n          };\n\n          screen = function screen(a, b) {\n            return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n          };\n\n          overlay = function overlay(a, b) {\n            if (b < 128) {\n              return 2 * a * b / 255;\n            } else {\n              return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n            }\n          };\n\n          burn = function burn(a, b) {\n            return 255 * (1 - (1 - b / 255) / (a / 255));\n          };\n\n          dodge = function dodge(a, b) {\n            if (a === 255) {\n              return 255;\n            }\n\n            a = 255 * (b / 255) / (1 - a / 255);\n\n            if (a > 255) {\n              return 255;\n            } else {\n              return a;\n            }\n          };\n\n          _blend.normal = blend_f(each(normal));\n          _blend.multiply = blend_f(each(multiply));\n          _blend.screen = blend_f(each(screen));\n          _blend.overlay = blend_f(each(overlay));\n          _blend.darken = blend_f(each(darken));\n          _blend.lighten = blend_f(each(lighten));\n          _blend.dodge = blend_f(each(dodge));\n          _blend.burn = blend_f(each(burn));\n          chroma.blend = _blend;\n\n          chroma.analyze = function (data) {\n            var len, o, r, val;\n            r = {\n              min: Number.MAX_VALUE,\n              max: Number.MAX_VALUE * -1,\n              sum: 0,\n              values: [],\n              count: 0\n            };\n\n            for (o = 0, len = data.length; o < len; o++) {\n              val = data[o];\n\n              if (val != null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n\n                if (val < r.min) {\n                  r.min = val;\n                }\n\n                if (val > r.max) {\n                  r.max = val;\n                }\n\n                r.count += 1;\n              }\n            }\n\n            r.domain = [r.min, r.max];\n\n            r.limits = function (mode, num) {\n              return chroma.limits(r, mode, num);\n            };\n\n            return r;\n          };\n\n          chroma.scale = function (colors, positions) {\n            var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n\n            _mode = 'rgb';\n            _nacol = chroma('#ccc');\n            _spread = 0;\n            _fixed = false;\n            _domain = [0, 1];\n            _pos = [];\n            _padding = [0, 0];\n            _classes = false;\n            _colors = [];\n            _out = false;\n            _min = 0;\n            _max = 1;\n            _correctLightness = false;\n            _colorCache = {};\n\n            setColors = function setColors(colors) {\n              var c, col, o, ref, ref1, ref2, w;\n\n              if (colors == null) {\n                colors = ['#fff', '#000'];\n              }\n\n              if (colors != null && type(colors) === 'string' && ((ref = chroma.brewer) != null ? ref[colors] : void 0) != null) {\n                colors = chroma.brewer[colors];\n              }\n\n              if (type(colors) === 'array') {\n                colors = colors.slice(0);\n\n                for (c = o = 0, ref1 = colors.length - 1; 0 <= ref1 ? o <= ref1 : o >= ref1; c = 0 <= ref1 ? ++o : --o) {\n                  col = colors[c];\n\n                  if (type(col) === \"string\") {\n                    colors[c] = chroma(col);\n                  }\n                }\n\n                _pos.length = 0;\n\n                for (c = w = 0, ref2 = colors.length - 1; 0 <= ref2 ? w <= ref2 : w >= ref2; c = 0 <= ref2 ? ++w : --w) {\n                  _pos.push(c / (colors.length - 1));\n                }\n              }\n\n              resetCache();\n              return _colors = colors;\n            };\n\n            getClass = function getClass(value) {\n              var i, n;\n\n              if (_classes != null) {\n                n = _classes.length - 1;\n                i = 0;\n\n                while (i < n && value >= _classes[i]) {\n                  i++;\n                }\n\n                return i - 1;\n              }\n\n              return 0;\n            };\n\n            tmap = function tmap(t) {\n              return t;\n            };\n\n            classifyValue = function classifyValue(value) {\n              var i, maxc, minc, n, val;\n              val = value;\n\n              if (_classes.length > 2) {\n                n = _classes.length - 1;\n                i = getClass(value);\n                minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n                maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n                val = _min + (_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc) * (_max - _min);\n              }\n\n              return val;\n            };\n\n            getColor = function getColor(val, bypassMap) {\n              var c, col, i, k, o, p, ref, t;\n\n              if (bypassMap == null) {\n                bypassMap = false;\n              }\n\n              if (isNaN(val)) {\n                return _nacol;\n              }\n\n              if (!bypassMap) {\n                if (_classes && _classes.length > 2) {\n                  c = getClass(val);\n                  t = c / (_classes.length - 2);\n                  t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\n                } else if (_max !== _min) {\n                  t = (val - _min) / (_max - _min);\n                  t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\n                  t = Math.min(1, Math.max(0, t));\n                } else {\n                  t = 1;\n                }\n              } else {\n                t = val;\n              }\n\n              if (!bypassMap) {\n                t = tmap(t);\n              }\n\n              k = Math.floor(t * 10000);\n\n              if (_colorCache[k]) {\n                col = _colorCache[k];\n              } else {\n                if (type(_colors) === 'array') {\n                  for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n                    p = _pos[i];\n\n                    if (t <= p) {\n                      col = _colors[i];\n                      break;\n                    }\n\n                    if (t >= p && i === _pos.length - 1) {\n                      col = _colors[i];\n                      break;\n                    }\n\n                    if (t > p && t < _pos[i + 1]) {\n                      t = (t - p) / (_pos[i + 1] - p);\n                      col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n                      break;\n                    }\n                  }\n                } else if (type(_colors) === 'function') {\n                  col = _colors(t);\n                }\n\n                _colorCache[k] = col;\n              }\n\n              return col;\n            };\n\n            resetCache = function resetCache() {\n              return _colorCache = {};\n            };\n\n            setColors(colors);\n\n            f = function f(v) {\n              var c;\n              c = chroma(getColor(v));\n\n              if (_out && c[_out]) {\n                return c[_out]();\n              } else {\n                return c;\n              }\n            };\n\n            f.classes = function (classes) {\n              var d;\n\n              if (classes != null) {\n                if (type(classes) === 'array') {\n                  _classes = classes;\n                  _domain = [classes[0], classes[classes.length - 1]];\n                } else {\n                  d = chroma.analyze(_domain);\n\n                  if (classes === 0) {\n                    _classes = [d.min, d.max];\n                  } else {\n                    _classes = chroma.limits(d, 'e', classes);\n                  }\n                }\n\n                return f;\n              }\n\n              return _classes;\n            };\n\n            f.domain = function (domain) {\n              var c, d, k, len, o, ref, w;\n\n              if (!arguments.length) {\n                return _domain;\n              }\n\n              _min = domain[0];\n              _max = domain[domain.length - 1];\n              _pos = [];\n              k = _colors.length;\n\n              if (domain.length === k && _min !== _max) {\n                for (o = 0, len = domain.length; o < len; o++) {\n                  d = domain[o];\n\n                  _pos.push((d - _min) / (_max - _min));\n                }\n              } else {\n                for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n                  _pos.push(c / (k - 1));\n                }\n              }\n\n              _domain = [_min, _max];\n              return f;\n            };\n\n            f.mode = function (_m) {\n              if (!arguments.length) {\n                return _mode;\n              }\n\n              _mode = _m;\n              resetCache();\n              return f;\n            };\n\n            f.range = function (colors, _pos) {\n              setColors(colors, _pos);\n              return f;\n            };\n\n            f.out = function (_o) {\n              _out = _o;\n              return f;\n            };\n\n            f.spread = function (val) {\n              if (!arguments.length) {\n                return _spread;\n              }\n\n              _spread = val;\n              return f;\n            };\n\n            f.correctLightness = function (v) {\n              if (v == null) {\n                v = true;\n              }\n\n              _correctLightness = v;\n              resetCache();\n\n              if (_correctLightness) {\n                tmap = function tmap(t) {\n                  var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n                  L0 = getColor(0, true).lab()[0];\n                  L1 = getColor(1, true).lab()[0];\n                  pol = L0 > L1;\n                  L_actual = getColor(t, true).lab()[0];\n                  L_ideal = L0 + (L1 - L0) * t;\n                  L_diff = L_actual - L_ideal;\n                  t0 = 0;\n                  t1 = 1;\n                  max_iter = 20;\n\n                  while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n                    (function () {\n                      if (pol) {\n                        L_diff *= -1;\n                      }\n\n                      if (L_diff < 0) {\n                        t0 = t;\n                        t += (t1 - t) * 0.5;\n                      } else {\n                        t1 = t;\n                        t += (t0 - t) * 0.5;\n                      }\n\n                      L_actual = getColor(t, true).lab()[0];\n                      return L_diff = L_actual - L_ideal;\n                    })();\n                  }\n\n                  return t;\n                };\n              } else {\n                tmap = function tmap(t) {\n                  return t;\n                };\n              }\n\n              return f;\n            };\n\n            f.padding = function (p) {\n              if (p != null) {\n                if (type(p) === 'number') {\n                  p = [p, p];\n                }\n\n                _padding = p;\n                return f;\n              } else {\n                return _padding;\n              }\n            };\n\n            f.colors = function () {\n              var dd, dm, i, numColors, o, out, ref, results, samples, w;\n              numColors = 0;\n              out = 'hex';\n\n              if (arguments.length === 1) {\n                if (type(arguments[0]) === 'string') {\n                  out = arguments[0];\n                } else {\n                  numColors = arguments[0];\n                }\n              }\n\n              if (arguments.length === 2) {\n                numColors = arguments[0], out = arguments[1];\n              }\n\n              if (numColors) {\n                dm = _domain[0];\n                dd = _domain[1] - dm;\n                return function () {\n                  results = [];\n\n                  for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--) {\n                    results.push(o);\n                  }\n\n                  return results;\n                }.apply(this).map(function (i) {\n                  return f(dm + i / (numColors - 1) * dd)[out]();\n                });\n              }\n\n              colors = [];\n              samples = [];\n\n              if (_classes && _classes.length > 2) {\n                for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n                  samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n                }\n              } else {\n                samples = _domain;\n              }\n\n              return samples.map(function (v) {\n                return f(v)[out]();\n              });\n            };\n\n            return f;\n          };\n\n          if (chroma.scales == null) {\n            chroma.scales = {};\n          }\n\n          chroma.scales.cool = function () {\n            return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n          };\n\n          chroma.scales.hot = function () {\n            return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n          };\n\n          chroma.analyze = function (data, key, filter) {\n            var add, k, len, o, r, val, visit;\n            r = {\n              min: Number.MAX_VALUE,\n              max: Number.MAX_VALUE * -1,\n              sum: 0,\n              values: [],\n              count: 0\n            };\n\n            if (filter == null) {\n              filter = function filter() {\n                return true;\n              };\n            }\n\n            add = function add(val) {\n              if (val != null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n\n                if (val < r.min) {\n                  r.min = val;\n                }\n\n                if (val > r.max) {\n                  r.max = val;\n                }\n\n                r.count += 1;\n              }\n            };\n\n            visit = function visit(val, k) {\n              if (filter(val, k)) {\n                if (key != null && type(key) === 'function') {\n                  return add(key(val));\n                } else if (key != null && type(key) === 'string' || type(key) === 'number') {\n                  return add(val[key]);\n                } else {\n                  return add(val);\n                }\n              }\n            };\n\n            if (type(data) === 'array') {\n              for (o = 0, len = data.length; o < len; o++) {\n                val = data[o];\n                visit(val);\n              }\n            } else {\n              for (k in data) {\n                val = data[k];\n                visit(val, k);\n              }\n            }\n\n            r.domain = [r.min, r.max];\n\n            r.limits = function (mode, num) {\n              return chroma.limits(r, mode, num);\n            };\n\n            return r;\n          };\n\n          chroma.limits = function (data, mode, num) {\n            var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, value, values, w;\n\n            if (mode == null) {\n              mode = 'equal';\n            }\n\n            if (num == null) {\n              num = 7;\n            }\n\n            if (type(data) === 'array') {\n              data = chroma.analyze(data);\n            }\n\n            min = data.min;\n            max = data.max;\n            sum = data.sum;\n            values = data.values.sort(function (a, b) {\n              return a - b;\n            });\n            limits = [];\n\n            if (mode.substr(0, 1) === 'c') {\n              limits.push(min);\n              limits.push(max);\n            }\n\n            if (mode.substr(0, 1) === 'e') {\n              limits.push(min);\n\n              for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n                limits.push(min + i / num * (max - min));\n              }\n\n              limits.push(max);\n            } else if (mode.substr(0, 1) === 'l') {\n              if (min <= 0) {\n                throw 'Logarithmic scales are only possible for values > 0';\n              }\n\n              min_log = Math.LOG10E * log(min);\n              max_log = Math.LOG10E * log(max);\n              limits.push(min);\n\n              for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n                limits.push(pow(10, min_log + i / num * (max_log - min_log)));\n              }\n\n              limits.push(max);\n            } else if (mode.substr(0, 1) === 'q') {\n              limits.push(min);\n\n              for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n                p = values.length * i / num;\n                pb = floor(p);\n\n                if (pb === p) {\n                  limits.push(values[pb]);\n                } else {\n                  pr = p - pb;\n                  limits.push(values[pb] * pr + values[pb + 1] * (1 - pr));\n                }\n              }\n\n              limits.push(max);\n            } else if (mode.substr(0, 1) === 'k') {\n              /*\n              implementation based on\n              http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n              simplified for 1-d input values\n               */\n              n = values.length;\n              assignments = new Array(n);\n              clusterSizes = new Array(num);\n              repeat = true;\n              nb_iters = 0;\n              centroids = null;\n              centroids = [];\n              centroids.push(min);\n\n              for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n                centroids.push(min + i / num * (max - min));\n              }\n\n              centroids.push(max);\n\n              while (repeat) {\n                for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n                  clusterSizes[j] = 0;\n                }\n\n                for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n                  value = values[i];\n                  mindist = Number.MAX_VALUE;\n\n                  for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n                    dist = abs(centroids[j] - value);\n\n                    if (dist < mindist) {\n                      mindist = dist;\n                      best = j;\n                    }\n                  }\n\n                  clusterSizes[best]++;\n                  assignments[i] = best;\n                }\n\n                newCentroids = new Array(num);\n\n                for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n                  newCentroids[j] = null;\n                }\n\n                for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n                  cluster = assignments[i];\n\n                  if (newCentroids[cluster] === null) {\n                    newCentroids[cluster] = values[i];\n                  } else {\n                    newCentroids[cluster] += values[i];\n                  }\n                }\n\n                for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n                  newCentroids[j] *= 1 / clusterSizes[j];\n                }\n\n                repeat = false;\n\n                for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n                  if (newCentroids[j] !== centroids[i]) {\n                    repeat = true;\n                    break;\n                  }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                  repeat = false;\n                }\n              }\n\n              kClusters = {};\n\n              for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n                kClusters[j] = [];\n              }\n\n              for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n                cluster = assignments[i];\n                kClusters[cluster].push(values[i]);\n              }\n\n              tmpKMeansBreaks = [];\n\n              for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n                tmpKMeansBreaks.push(kClusters[j][0]);\n                tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n              }\n\n              tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a, b) {\n                return a - b;\n              });\n              limits.push(tmpKMeansBreaks[0]);\n\n              for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n                if (!isNaN(tmpKMeansBreaks[i])) {\n                  limits.push(tmpKMeansBreaks[i]);\n                }\n              }\n            }\n\n            return limits;\n          };\n\n          hsi2rgb = function hsi2rgb(h, s, i) {\n            /*\n            borrowed from here:\n            http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n             */\n            var args, b, g, r;\n            args = unpack(arguments);\n            h = args[0], s = args[1], i = args[2];\n            h /= 360;\n\n            if (h < 1 / 3) {\n              b = (1 - s) / 3;\n              r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n              g = 1 - (b + r);\n            } else if (h < 2 / 3) {\n              h -= 1 / 3;\n              r = (1 - s) / 3;\n              g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n              b = 1 - (r + g);\n            } else {\n              h -= 2 / 3;\n              g = (1 - s) / 3;\n              b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n              r = 1 - (g + b);\n            }\n\n            r = limit(i * r * 3);\n            g = limit(i * g * 3);\n            b = limit(i * b * 3);\n            return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n          };\n\n          rgb2hsi = function rgb2hsi() {\n            /*\n            borrowed from here:\n            http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n             */\n            var b, g, h, i, min, r, ref, s;\n            ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n            TWOPI = Math.PI * 2;\n            r /= 255;\n            g /= 255;\n            b /= 255;\n            min = Math.min(r, g, b);\n            i = (r + g + b) / 3;\n            s = 1 - min / i;\n\n            if (s === 0) {\n              h = 0;\n            } else {\n              h = (r - g + (r - b)) / 2;\n              h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n              h = Math.acos(h);\n\n              if (b > g) {\n                h = TWOPI - h;\n              }\n\n              h /= TWOPI;\n            }\n\n            return [h * 360, s, i];\n          };\n\n          chroma.hsi = function () {\n            return function (func, args, ctor) {\n              ctor.prototype = func.prototype;\n              var child = new ctor(),\n                  result = func.apply(child, args);\n              return Object(result) === result ? result : child;\n            }(Color, slice.call(arguments).concat(['hsi']), function () {});\n          };\n\n          _input.hsi = hsi2rgb;\n\n          Color.prototype.hsi = function () {\n            return rgb2hsi(this._rgb);\n          };\n\n          interpolate_hsx = function interpolate_hsx(col1, col2, f, m) {\n            var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n\n            if (m === 'hsl') {\n              xyz0 = col1.hsl();\n              xyz1 = col2.hsl();\n            } else if (m === 'hsv') {\n              xyz0 = col1.hsv();\n              xyz1 = col2.hsv();\n            } else if (m === 'hsi') {\n              xyz0 = col1.hsi();\n              xyz1 = col2.hsi();\n            } else if (m === 'lch' || m === 'hcl') {\n              m = 'hcl';\n              xyz0 = col1.hcl();\n              xyz1 = col2.hcl();\n            }\n\n            if (m.substr(0, 1) === 'h') {\n              hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n              hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n            }\n\n            if (!isNaN(hue0) && !isNaN(hue1)) {\n              if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1 - (hue0 + 360);\n              } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1 + 360 - hue0;\n              } else {\n                dh = hue1 - hue0;\n              }\n\n              hue = hue0 + f * dh;\n            } else if (!isNaN(hue0)) {\n              hue = hue0;\n\n              if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n                sat = sat0;\n              }\n            } else if (!isNaN(hue1)) {\n              hue = hue1;\n\n              if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n                sat = sat1;\n              }\n            } else {\n              hue = Number.NaN;\n            }\n\n            if (sat == null) {\n              sat = sat0 + f * (sat1 - sat0);\n            }\n\n            lbv = lbv0 + f * (lbv1 - lbv0);\n            return res = chroma[m](hue, sat, lbv);\n          };\n\n          _interpolators = _interpolators.concat(function () {\n            var len, o, ref, results;\n            ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch'];\n            results = [];\n\n            for (o = 0, len = ref.length; o < len; o++) {\n              m = ref[o];\n              results.push([m, interpolate_hsx]);\n            }\n\n            return results;\n          }());\n\n          interpolate_num = function interpolate_num(col1, col2, f, m) {\n            var n1, n2;\n            n1 = col1.num();\n            n2 = col2.num();\n            return chroma.num(n1 + (n2 - n1) * f, 'num');\n          };\n\n          _interpolators.push(['num', interpolate_num]);\n\n          interpolate_lab = function interpolate_lab(col1, col2, f, m) {\n            var res, xyz0, xyz1;\n            xyz0 = col1.lab();\n            xyz1 = col2.lab();\n            return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n          };\n\n          _interpolators.push(['lab', interpolate_lab]);\n        }).call(this);\n        /* WEBPACK VAR INJECTION */\n      }).call(exports, __webpack_require__(26)(module));\n      /***/\n    },\n    /* 26 */\n\n    /***/\n    function (module, exports) {\n      module.exports = function (module) {\n        if (!module.webpackPolyfill) {\n          module.deprecate = function () {};\n\n          module.paths = []; // module.parent = undefined by default\n\n          module.children = [];\n          module.webpackPolyfill = 1;\n        }\n\n        return module;\n      };\n      /***/\n\n    }\n    /******/\n    ])\n  );\n});\n\n;","// 20.2.2.9 Math.cbrt(x)\nvar $export = require('./_export');\nvar sign = require('./_math-sign');\n\n$export($export.S, 'Math', {\n  cbrt: function cbrt(x) {\n    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);\n  }\n});\n","// 20.2.2.28 Math.sign(x)\nmodule.exports = Math.sign || function sign(x) {\n  // eslint-disable-next-line no-self-compare\n  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n};\n"],"sourceRoot":""}