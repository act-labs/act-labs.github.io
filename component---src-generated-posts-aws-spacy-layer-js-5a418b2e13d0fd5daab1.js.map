{"version":3,"sources":["webpack:///./src/content/posts/aws-spacy-layer.md","webpack:///./src/generated/posts/aws-spacy-layer.js","webpack:///./src/actb/seo.js","webpack:///./src/actb/logo.js","webpack:///./src/actb/footer.js","webpack:///./src/actb/navigation-bar.js","webpack:///./src/actb/layout/index.js","webpack:///./src/actb/code.js","webpack:///./src/actb/mdx.js","webpack:///./src/components/page-layout.js"],"names":["MDXContent","props","_this","_React$Component","call","this","layout","render","_this$props","components","objectWithoutPropertiesLoose_default","react_default","a","createElement","dist","name","parentName","href","title","idea","more","className","React","Component","SnippetsLayout","page_layout","aws_spacy_layer_MDXContent","__webpack_require__","d","__webpack_exports__","SEO","_ref","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","detailsQuery","data","split","map","v","trim","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","project","content","property","author","concat","join","_public_static_d_304502870_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","propTypes","PropTypes","string","array","oneOfType","arrayOf","isRequired","Logo","gatsby__WEBPACK_IMPORTED_MODULE_3__","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","logo","childImageSharp","style","float","_public_static_d_2369744027_json__WEBPACK_IMPORTED_MODULE_1__","Footer","ActFooter","social","copyright","icons","_ref2","link","icon","actb_link","key","to","icon_default","type","fontSize","marginLeft","color","textAlign","SiteFooter","gatsby_browser_entry","_ref3","_ref3$config","config","Object","assign","_2743462859","Header","NavigationBar","nav","menu_default","theme","mode","defaultSelectedKeys","filter","selected","text","lineHeight","i","slug","Item","SiteNavigationBar","_1250442554","Content","Sider","Panel","children","other","padding","PageLayout","_Object$assign","defaultLayoutOptions","footer","fullHeight","layoutStyle","height","pageClassName","layout_default","seo","SideMenuPanel","menu","background","minHeight","width","SyntaxHighlighter","registerLanguage","js","bash","markdown","yaml","dockerfile","defaults","code","length","light","language","MDX","actb_src_actb_layout__WEBPACK_IMPORTED_MODULE_2__","DefaultSiteLayout","pageContext","context","frontmatter","react__WEBPACK_IMPORTED_MODULE_3___default","paddingTop","actb_src_actb_mdx__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-generated-posts-aws-spacy-layer-js-5a418b2e13d0fd5daab1.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport { ImageEventSourcingAws, SideNote, Idea } from \"actl\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" components={components}>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://spacy.io/\",\n          \"title\": \"natural language processing toolkit\"\n        }}>{`spaCy`}</MDXTag>{` is a popular natural language processing toolkit. It can be used to tokenize text and get information about each word (part of speech, named entities, lemma, word vector, word dependencies, etc). This tool can be really handy, when doing any text analyses. Such processing could be done on AWS EC2 instances, but if you do your data analyses only sporadically, AWS lambda becomes a viable alternative. And luckily enough, thanks to `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`AWS layers`}</MDXTag>{`, an AWS lambdas today may execute Python code importing pretty much any library. For example, in this post a simple AWS lambda function, configured using serverless framework, handles HTTP requests and returns lists of nouns, parsing text with the help of spaCy.`}</MDXTag>\n      <Idea more=\"/snippets/serverless/serverless-cli/\" title=\"Create new serverless Python 3 project\">\n        <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n            \"className\": \"language-sh\"\n          }}>{`serverless create --template  aws-python3 --path example\n`}</MDXTag></MDXTag>\n      </Idea>\n      <MDXTag name=\"p\" components={components}>{`Packaging AWS layers may require some work, but for popular frameworks like spaCy, publicly accessible AWS layers are available, so we may take the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/keithrozario/Klayers\",\n          \"title\": \"github repository with AWS layers for popular Python packages\"\n        }}>{`existing one`}</MDXTag>{`, in which case we only need to add AWS ARN to the list of layers used:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-yaml\"\n        }}>{`# from serverless.yaml\nfunctions:\n  nouns:\n    handler: handler.nouns\n    layers:\n      - arn:aws:lambda:\\${self:provider.region}:113088814899:layer:Klayers-python37-spacy:1\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`To minimize resources usage, this layer comes only with small English language model (which is more than enough for many everyday text processing tasks), loaded at lambda startup through `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`nlp = spacy.load('/opt/en_core_web_sm-2.1.0')`}</MDXTag>{`. To test spaCy, we may implement simple HTTP endpoint returning list of lemmatized nouns (which actually could be of practical interest, for example, in some simple keyword extraction application):`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-python\"\n        }}>{`# our handler.py file\nimport json\nimport spacy\n\nnlp = spacy.load('/opt/en_core_web_sm-2.1.0')\n\ndef nouns(event, context):\n    text = event[\"body\"]\n    doc = nlp(text)\n    nouns = [token.lemma_ for token in doc if  token.pos_ == 'NOUN']\n\n    response = {\n        \"statusCode\": 200,\n        \"body\": json.dumps(nouns)\n    }\n\n    return response\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Thus now we can send \"black cat\" to our `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/nouns`}</MDXTag>{` endpoint to get `}{`[\"cat\"]`}{` back:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-sh\"\n        }}>{`curl -XPOST https://XXXXX..execute-api.us-east-1.amazonaws.com/dev/nouns -d \"black cat\"\n[\"cat\"]\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`And that is it for using `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`spaCy`}</MDXTag>{` natural language processor `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`in AWS lambda`}</MDXTag>{`. Now we can start building our own complex text processing pipelines! Use this example source code on `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/act-labs/aws-spacy-layer-example\",\n          \"title\": \"Simple HTTP endpoint example using AWS spaCy layer and serverless framework\"\n        }}>{`Github`}</MDXTag>{` as your starting point. `}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {\n  \"title\": \"spaCy in AWS lambda using AWS layers\",\n  \"keywords\": \"Python, spaCy, AWS layer, lambdas, serverless\",\n  \"order\": 50\n};\n    ","import React from \"react\";\r\nimport ContentComponent from 'D:/projects/flash/packages/act-labs-blog/src/content/posts/aws-spacy-layer.md';\r\nimport OneColumnLayout from 'components/page-layout';\r\n\r\nexport default function SnippetsLayout(props) {\r\n    return <OneColumnLayout {...props}><ContentComponent {...props}/></OneColumnLayout>\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        if (typeof keywords == \"string\"){\r\n          keywords = keywords.split(\",\").map(v => v.trim());\r\n        }\r\n        description = description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.project}`}\r\n            meta={[\r\n              {\r\n                name: 'description',\r\n                content: description,\r\n              },\r\n              {\r\n                property: 'og:title',\r\n                content: title,\r\n              },\r\n              {\r\n                property: 'og:description',\r\n                content: description,\r\n              },\r\n              {\r\n                property: 'og:type',\r\n                content: 'website',\r\n              },\r\n              {\r\n                name: 'twitter:card',\r\n                content: 'summary',\r\n              },\r\n              {\r\n                name: 'twitter:creator',\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: 'twitter:title',\r\n                content: title,\r\n              },\r\n              {\r\n                name: 'twitter:description',\r\n                content: description,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords\r\n                  ? {\r\n                      name: 'keywords',\r\n                      content: keywords.join(', '),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: 'en',\r\n  meta: [],\r\n  keywords: null,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.arrayOf(PropTypes.string)\r\n  ]),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        project\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\n\r\n\r\nexport default function Logo(){\r\n        return (<StaticQuery\r\n            query={graphql`\r\n                query {\r\n                    logo: file(relativePath: { eq: \"logo.png\" }) {\r\n                    childImageSharp {\r\n                        fixed(height: 60) {\r\n                        ...GatsbyImageSharpFixed\r\n                        }\r\n                    }\r\n                    }\r\n                }\r\n            `}\r\n            render={data => <Img fixed={data.logo.childImageSharp.fixed} style={{float:\"left\"}}/>}\r\n        />)\r\n    }\r\n\r\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport {Link} from \"actb\";\r\nimport {\r\n    Layout, Icon\r\n  } from 'antd';\r\n  \r\n  const {\r\n    Footer\r\n  } = Layout;\r\n\r\n\r\nexport function ActFooter({social, copyright}){\r\n    const icons = social.map(({link, icon})=><Link key={icon} to={link}><Icon type={icon}  style={{ fontSize: '24px', marginLeft:10, color: 'rgba(0, 0, 0, 0.65)'}} /></Link>)\r\n    return (\r\n        <Footer style={{ textAlign: 'center' }}>\r\n            <div>{copyright}<div style={{float:\"right\"}}>{icons}</div></div>\r\n        </Footer>\r\n    )\r\n}\r\n\r\nexport default function SiteFooter(props){\r\n  if (props.social){\r\n      return <ActFooter {...props}/>\r\n  }\r\n  return <StaticQuery\r\n  query={graphql`\r\n    query {\r\n      config: configYaml(fields:{slug: {eq:\"/config/main/\"}}){\r\n          copyright\r\n          social {\r\n              icon\r\n              link\r\n          }        \r\n      }\r\n    }\r\n  `}\r\n  render={({config:{social, copyright}}) => <ActFooter social={social} copyright={copyright} {...props} />}\r\n/>\r\n}  ","import React from \"react\";\r\nimport {Logo, Link} from \"actb\"\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport {\r\n  Layout, Menu\r\n} from 'antd';\r\n  \r\nconst {\r\n  Header\r\n} = Layout;\r\n\r\n\r\nexport function NavigationBar({nav}){  \r\n    return (\r\n      <Header className=\"navigation-bar\">\r\n        <Link to=\"/\" ><Logo/></Link>\r\n        <Menu\r\n            theme=\"dark\"\r\n            mode=\"horizontal\"\r\n            defaultSelectedKeys={ nav.filter(v=>v.selected).map(v=>v.text) }\r\n            style={{ lineHeight: '64px' }}\r\n        >\r\n          {\r\n            nav.map(({slug, text}, i)=>\r\n              <Menu.Item key={i}>\r\n                <Link to={slug || \"/\"} >{text}</Link>\r\n              </Menu.Item>\r\n            )\r\n          }  \r\n        </Menu>\r\n      </Header>\r\n    )\r\n} \r\n\r\nexport default function SiteNavigationBar(props){\r\n    if (props.nav){\r\n        return <NavigationBar {...props}/>\r\n    }\r\n    return <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        config: configYaml(fields:{slug: {eq:\"/config/main/\"}}){\r\n            nav {\r\n                text\r\n                slug\r\n            }        \r\n        }\r\n      }\r\n    `}\r\n    render={({config:{nav}}) => <NavigationBar nav={nav} {...props} />}\r\n  />\r\n}  ","import React from \"react\"\r\n\r\nimport {Seo, Footer, NavigationBar} from \"actb\";\r\n\r\nimport {\r\n    Layout\r\n  } from 'antd';\r\n  \r\nimport \"./layout.less\"\r\n\r\nconst {\r\n  Content, Sider\r\n} = Layout;\r\n\r\n\r\nexport function Panel(props){\r\n  const {style, children, ...other} = props\r\n    return (\r\n        <Content style={Object.assign({ padding: '5px 24px' }, style)} {...other}>\r\n            {children}                     \r\n        </Content>\r\n    )\r\n}\r\n\r\nexport function SideMenuPanel({children, menu}){\r\n    return (\r\n      <Layout style={{ padding: '1em 0', background: '#fff', minHeight: 1000 }}>\r\n        <Sider width={200}>\r\n          {menu}\r\n        </Sider>\r\n        <Panel>{children}</Panel>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\nexport default function PageLayout(props){\r\n  const {children, className, \r\n    title, description, keywords, style, layout} = props\r\n  const {footer, fullHeight} = Object.assign({}, defaultLayoutOptions, layout)\r\n  const layoutStyle = Object.assign({}, fullHeight?{height:\"100%\"}:null, style)\r\n  const pageClassName = (className? className + \" \" : \"\") + \"page-layout\"\r\n  return (\r\n    <Layout className={pageClassName} style={layoutStyle}>\r\n      <Seo title={title} keywords={keywords} description={description} />\r\n      <NavigationBar/>\r\n        {children}\r\n      {footer? <Footer/>:null}\r\n    </Layout>\r\n  );  \r\n}\r\n\r\nconst defaultLayoutOptions = {\r\n  footer: true\r\n}\r\n\r\nPageLayout.Panel = Panel;\r\nPageLayout.SideMenuPanel = SideMenuPanel; \r\n","import React from \"react\";\r\nimport { Light as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport bash from 'react-syntax-highlighter/dist/esm/languages/hljs/bash';\r\nimport markdown from 'react-syntax-highlighter/dist/esm/languages/hljs/markdown';\r\nimport yaml from 'react-syntax-highlighter/dist/esm/languages/hljs/yaml';\r\nimport dockerfile from 'react-syntax-highlighter/dist/esm/languages/hljs/dockerfile';\r\n\r\nimport { github as style } from 'react-syntax-highlighter/dist/styles/hljs';\r\n\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\nSyntaxHighlighter.registerLanguage('sh', bash);\r\nSyntaxHighlighter.registerLanguage('markdown', markdown);\r\nSyntaxHighlighter.registerLanguage('yaml', yaml);\r\nSyntaxHighlighter.registerLanguage('dockerfile', dockerfile);\r\n\r\nexport {SyntaxHighlighter};\r\n\r\nexport default function Code(props) {\r\n    let lang = 'bash'\r\n    if (props.className){\r\n      const name = props.className.split(\"-\");\r\n      if (name.length > 1){\r\n        lang = name[1]\r\n      }\r\n    }\r\n  \r\n    return <SyntaxHighlighter language={lang} style={style}>{props.children}</SyntaxHighlighter>\r\n}","import React from \"react\";\r\nimport { MDXProvider } from '@mdx-js/tag';\r\n\r\nimport {Code, Link} from \"actb\";\r\n\r\nexport const components = {\r\n    code: Code,\r\n    a: Link\r\n  };\r\n  \r\nconst defaults = {components}; \r\n\r\nexport default function MDX(props){\r\n    const {components, children} = Object.assign({}, defaults, props);\r\n\r\n    return (\r\n    <MDXProvider components={components}>\r\n        {children}\r\n    </MDXProvider>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {Mdx, Layout} from \"actb\"\r\nimport '../actb/layout/simple.css'\r\n\r\nconst Panel = Layout.Panel\r\n\r\nexport default function DefaultSiteLayout({children, pageContext}){\r\n  const context = Object.assign({frontmatter:{}}, pageContext)\r\n  const props = Object.assign({}, {layout:context.layout}, context.frontmatter);\r\n  return (\r\n    <Layout {...props}>\r\n      <Panel style={{ paddingTop: \"1em\"}}>\r\n        {props.title? <h1>{props.title}</h1>:null}\r\n        <Mdx>{children}</Mdx>\r\n      </Panel>\r\n    </Layout>\r\n  )\r\n}\r\n\r\n\r\n"],"sourceRoot":""}